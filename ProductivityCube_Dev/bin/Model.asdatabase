{
  "name": "ProductivityCube_Dev",
  "compatibilityLevel": 1400,
  "model": {
    "culture": "en-IN",
    "dataSources": [
      {
        "type": "structured",
        "name": "SQL/maserver database windows net;ProductivityCube",
        "connectionDetails": {
          "protocol": "tds",
          "address": {
            "server": "maserver.database.windows.net",
            "database": "ProductivityCube_Dev"
          },
          "authentication": null,
          "query": null
        },
        "credential": {
          "AuthenticationKind": "UsernamePassword",
          "kind": "SQL",
          "path": "maserver.database.windows.net;ProductivityCube_Dev",
          "Username": "strykeruser",
          "EncryptConnection": true
        }
      }
    ],
    "tables": [
      {
        "name": "Dim-Plant Hierarchy",
        "columns": [
          {
            "name": "Business Unit Num",
            "dataType": "int64",
            "sourceColumn": "BUSINESS_UNIT_NUM"
          },
          {
            "name": "Business Unit Name",
            "dataType": "string",
            "sourceColumn": "BUSINESS_UNIT_NAME"
          },
          {
            "name": "Cell Num",
            "dataType": "int64",
            "sourceColumn": "CELL_NUM"
          },
          {
            "name": "Cell Name",
            "dataType": "string",
            "sourceColumn": "CELL_NAME"
          },
          {
            "name": "Department Num",
            "dataType": "int64",
            "sourceColumn": "DEPARTMENT_NUM"
          },
          {
            "name": "Department Name",
            "dataType": "string",
            "sourceColumn": "DEPARTMENT_NAME"
          },
          {
            "name": "Cost Center Grouping",
            "dataType": "string",
            "sourceColumn": "COST_CENTER_GROUPING"
          },
          {
            "name": "Cost Center Num",
            "dataType": "int64",
            "sourceColumn": "COST_CENTER_NUM"
          },
          {
            "name": "Cost Center Name",
            "dataType": "string",
            "sourceColumn": "COST_CENTER_NAME"
          },
          {
            "name": "Wokenter Num",
            "dataType": "int64",
            "sourceColumn": "WORKCENTER_NUM"
          },
          {
            "name": "Workcenter Name",
            "dataType": "string",
            "sourceColumn": "WORKCENTER_NAME"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_DIM_PLANT_HIERARCHY = Source{[Schema=\"dbo\",Item=\"TGT_DIM_PLANT_HIERARCHY\"]}[Data]",
                "in",
                "    dbo_TGT_DIM_PLANT_HIERARCHY"
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Plant Hierarchy",
            "levels": [
              {
                "name": "Business_Unit_Name",
                "ordinal": 0,
                "column": "Business Unit Name"
              },
              {
                "name": "Department Name",
                "ordinal": 1,
                "column": "Department Name"
              },
              {
                "name": "Cell Name",
                "ordinal": 2,
                "column": "Cell Name"
              },
              {
                "name": "Cost Center Name",
                "ordinal": 3,
                "column": "Cost Center Name"
              },
              {
                "name": "Workcenter Name",
                "ordinal": 4,
                "column": "Workcenter Name"
              }
            ]
          }
        ]
      },
      {
        "name": "Dim-Item Hierarchy",
        "columns": [
          {
            "name": "Item Num",
            "dataType": "string",
            "sourceColumn": "ITEM_NUM"
          },
          {
            "name": "Item Description",
            "dataType": "string",
            "sourceColumn": "ITEM_DESCRIPTION"
          },
          {
            "name": "Family No",
            "dataType": "int64",
            "sourceColumn": "FAMILY_NUM"
          },
          {
            "name": "Family Name",
            "dataType": "string",
            "sourceColumn": "FAMILY_NAME"
          },
          {
            "name": "Prduct Line Num",
            "dataType": "int64",
            "sourceColumn": "PRODUCT_LINE_NUM"
          },
          {
            "name": "Product Line Name",
            "dataType": "string",
            "sourceColumn": "PRODUCT_LINE_NAME"
          },
          {
            "name": "Brand",
            "dataType": "string",
            "sourceColumn": "BRAND"
          },
          {
            "name": "Sub Brand",
            "dataType": "string",
            "sourceColumn": "SUB_BRAND"
          },
          {
            "name": "Franchise",
            "dataType": "string",
            "sourceColumn": "FRANCHISE"
          },
          {
            "name": "Material Type",
            "dataType": "string",
            "sourceColumn": "MATERIAL_TYPE"
          },
          {
            "name": "Hyperion Inventory Category",
            "dataType": "string",
            "sourceColumn": "HYPERION_INVENTORY_CATEGORY"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_DIM_ITEM_HIERARCHY = Source{[Schema=\"dbo\",Item=\"TGT_DIM_ITEM_HIERARCHY\"]}[Data]",
                "in",
                "    dbo_TGT_DIM_ITEM_HIERARCHY"
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Item Hierarchy",
            "levels": [
              {
                "name": "Family Name",
                "ordinal": 0,
                "column": "Family Name"
              },
              {
                "name": "Product Line Name",
                "ordinal": 1,
                "column": "Product Line Name"
              },
              {
                "name": "Material Type",
                "ordinal": 2,
                "column": "Material Type"
              },
              {
                "name": "Brand",
                "ordinal": 3,
                "column": "Brand"
              },
              {
                "name": "Sub Brand",
                "ordinal": 4,
                "column": "Sub Brand"
              },
              {
                "name": "Item Description",
                "ordinal": 5,
                "column": "Item Description"
              }
            ]
          }
        ]
      },
      {
        "name": "Dim-Headcount",
        "columns": [
          {
            "name": "Employee Id",
            "dataType": "int64",
            "sourceColumn": "EMPLOYEE_ID"
          },
          {
            "name": "HRMS Legacy Id",
            "dataType": "int64",
            "sourceColumn": "HRMS_LEGACY_ID"
          },
          {
            "name": "Adp Number",
            "dataType": "int64",
            "sourceColumn": "ADP_NUMBER"
          },
          {
            "name": "Badge Id",
            "dataType": "int64",
            "sourceColumn": "BADGE_ID"
          },
          {
            "name": "Worker",
            "dataType": "string",
            "sourceColumn": "WORKER"
          },
          {
            "name": "Worker Status",
            "dataType": "string",
            "sourceColumn": "WORKER_STATUS"
          },
          {
            "name": "Title",
            "dataType": "string",
            "sourceColumn": "TITLE"
          },
          {
            "name": "First Name",
            "dataType": "string",
            "sourceColumn": "FIRST_NAME"
          },
          {
            "name": "Prior Last Name",
            "dataType": "string",
            "sourceColumn": "PRIOR_LAST_NAME"
          },
          {
            "name": "Last Name",
            "dataType": "string",
            "sourceColumn": "LAST_NAME"
          },
          {
            "name": "Preferred Name",
            "dataType": "string",
            "sourceColumn": "PREFERRED_NAME"
          },
          {
            "name": "Worker Type",
            "dataType": "string",
            "sourceColumn": "WORKER_TYPE"
          },
          {
            "name": "Employee Type",
            "dataType": "string",
            "sourceColumn": "EMPLOYEE_TYPE"
          },
          {
            "name": "FTE",
            "dataType": "double",
            "sourceColumn": "FTE"
          },
          {
            "name": "Scheduled Weekly Hours",
            "dataType": "int64",
            "sourceColumn": "SCHEDULED_WEEKLY_HOURS"
          },
          {
            "name": "Default Weekly Hours",
            "dataType": "int64",
            "sourceColumn": "DEFAULT_WEEKLY_HOURS"
          },
          {
            "name": "Works From Home",
            "dataType": "string",
            "sourceColumn": "WORKS_FROM_HOME"
          },
          {
            "name": "Original Hire Date",
            "dataType": "int64",
            "sourceColumn": "ORIGINAL_HIRE_DATE"
          },
          {
            "name": "Latest Hire Date",
            "dataType": "int64",
            "sourceColumn": "LATEST_HIRE_DATE"
          },
          {
            "name": "Continous Service Date",
            "dataType": "int64",
            "sourceColumn": "CONTINUOUS_SERVICE_DATE"
          },
          {
            "name": "Next Anniversary Hire Date",
            "dataType": "int64",
            "sourceColumn": "NEXT_ANNIVERSARY_HIRE_DATE"
          },
          {
            "name": "Next Anniversary Continous Service Date",
            "dataType": "int64",
            "sourceColumn": "NEXT_ANNIVERSARY_CONTINUOUS_SERVICE_DATE"
          },
          {
            "name": "Next Anniversary In Years",
            "dataType": "int64",
            "sourceColumn": "NEXT_ANNIVERSARY_IN_YEARS"
          },
          {
            "name": "Next Anniversary Continous Service Date_In Years",
            "dataType": "int64",
            "sourceColumn": "NEXT_ANNIVERSARY_CONTINUOUS_SERVICE_DATE_IN_YEARS"
          },
          {
            "name": "Effective Date For Current Position",
            "dataType": "int64",
            "sourceColumn": "EFFECTIVE_DATE_FOR_CURRENT_POSITION"
          },
          {
            "name": "Worker's Manager",
            "dataType": "string",
            "sourceColumn": "WORKERS_MANAGER"
          },
          {
            "name": "Manager Id",
            "dataType": "int64",
            "sourceColumn": "MANAGER_ID"
          },
          {
            "name": "Manager Location",
            "dataType": "string",
            "sourceColumn": "MANAGER_LOCATION"
          },
          {
            "name": "Manager Email",
            "dataType": "string",
            "sourceColumn": "MANAGER_EMAIL"
          },
          {
            "name": "Cost Center Name",
            "dataType": "string",
            "sourceColumn": "COST_CENTER_NAME"
          },
          {
            "name": "Core Ref",
            "dataType": "int64",
            "sourceColumn": "CORE_REF"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_DIM_HEADCOUNT = Source{[Schema=\"dbo\",Item=\"TGT_DIM_HEADCOUNT\"]}[Data]",
                "in",
                "    dbo_TGT_DIM_HEADCOUNT"
              ]
            }
          }
        ]
      },
      {
        "name": "Dim-Glossary",
        "columns": [
          {
            "name": "Area",
            "dataType": "string",
            "sourceColumn": "AREA"
          },
          {
            "name": "Ref",
            "dataType": "int64",
            "sourceColumn": "REF"
          },
          {
            "name": "Item",
            "dataType": "string",
            "sourceColumn": "ITEM"
          },
          {
            "name": "Description",
            "dataType": "string",
            "sourceColumn": "DESCRIPTION"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_DIM_GLOSSARY = Source{[Schema=\"dbo\",Item=\"TGT_DIM_GLOSSARY\"]}[Data]",
                "in",
                "    dbo_TGT_DIM_GLOSSARY"
              ]
            }
          }
        ]
      },
      {
        "name": "Dim-Businessunit",
        "columns": [
          {
            "name": "Dept No",
            "dataType": "int64",
            "sourceColumn": "DEPT_NO",
            "formatString": "0"
          },
          {
            "name": "Dept Name",
            "dataType": "string",
            "sourceColumn": "DEPT_NAME"
          },
          {
            "name": "Business Unit",
            "dataType": "string",
            "sourceColumn": "BUSINESS_UNIT"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_DIM_BUSINESSUNIT = Source{[Schema=\"dbo\",Item=\"TGT_DIM_BUSINESSUNIT\"]}[Data]",
                "in",
                "    dbo_TGT_DIM_BUSINESSUNIT"
              ]
            }
          }
        ]
      },
      {
        "name": "Fact-Absorb",
        "columns": [
          {
            "name": "Item",
            "dataType": "string",
            "sourceColumn": "ITEM"
          },
          {
            "name": "Work Center No",
            "dataType": "double",
            "sourceColumn": "WORK_CENTER_NUM",
            "formatString": "0"
          },
          {
            "name": "Shop Order",
            "dataType": "double",
            "sourceColumn": "SHOP_ORDER"
          },
          {
            "name": "Op Step no",
            "dataType": "double",
            "sourceColumn": "OP_STEP_NUM"
          },
          {
            "name": "Op Step No Text",
            "dataType": "double",
            "sourceColumn": "OP_STEP_NUM_TEXT"
          },
          {
            "name": "Raw date",
            "dataType": "double",
            "sourceColumn": "RAW_DATE"
          },
          {
            "name": "Booking Date",
            "dataType": "dateTime",
            "sourceColumn": "BOOKING_DATE",
            "formatString": "dd-MM-yyyy",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"16393\" Group=\"ShortDate\" FormatString=\"dd-MM-yyyy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "Week",
            "dataType": "int64",
            "sourceColumn": "WEEK"
          },
          {
            "name": "Week Start date",
            "dataType": "dateTime",
            "sourceColumn": "WEEK_START_DATE"
          },
          {
            "name": "Day",
            "dataType": "string",
            "sourceColumn": "DAY"
          },
          {
            "name": "Hour",
            "dataType": "int64",
            "sourceColumn": "HOUR"
          },
          {
            "name": "Shift",
            "dataType": "string",
            "sourceColumn": "SHIFT"
          },
          {
            "name": "Op Date Time",
            "dataType": "dateTime",
            "sourceColumn": "OP_DATE_TIME"
          },
          {
            "name": "Core No",
            "dataType": "string",
            "sourceColumn": "CORE_NUM"
          },
          {
            "name": "Operator",
            "dataType": "string",
            "sourceColumn": "OPERATOR"
          },
          {
            "name": "PTL",
            "dataType": "string",
            "sourceColumn": "PTL"
          },
          {
            "name": "PTL Shift",
            "dataType": "string",
            "sourceColumn": "PTL_SHIFT"
          },
          {
            "name": "Book SO Qty",
            "dataType": "double",
            "sourceColumn": "BOOK_SO_QTY"
          },
          {
            "name": "Material recovery",
            "dataType": "double",
            "sourceColumn": "MATERIAL_RECOVERY"
          },
          {
            "name": "Labour Absorbed",
            "dataType": "double",
            "sourceColumn": "LABOUR_ABSORBED"
          },
          {
            "name": "Variable Absorbed",
            "dataType": "double",
            "sourceColumn": "VARIABLE_ABSORBED"
          },
          {
            "name": "Fixed Absorbed",
            "dataType": "double",
            "sourceColumn": "FIXED_ABSORBED"
          },
          {
            "name": "Total Absorbed",
            "dataType": "double",
            "sourceColumn": "TOTAL_ABSORBED",
            "formatString": "\"€\" #,0;-\"€\" #,0;\"€\" #,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Total COGM",
            "dataType": "double",
            "sourceColumn": "TOTAL_COGM",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Hours recovered",
            "dataType": "double",
            "sourceColumn": "HOURS_RECOVERED"
          },
          {
            "name": "plug Value",
            "dataType": "double",
            "sourceColumn": "PLUG_VALUE"
          },
          {
            "name": "Current Hours",
            "dataType": "double",
            "sourceColumn": "CURRENT_HOURS"
          },
          {
            "name": "Department No",
            "dataType": "double",
            "sourceColumn": "DEPARTMENT_NUM"
          },
          {
            "name": "Cell",
            "dataType": "string",
            "sourceColumn": "CELL"
          },
          {
            "name": "BU Mat No",
            "dataType": "string",
            "sourceColumn": "BU_MAT_NUM",
            "sortByColumn": "SORT_ORDER"
          },
          {
            "name": "Op Step Desc",
            "dataType": "string",
            "sourceColumn": "OP_STEP_DESC"
          },
          {
            "name": "Op Step Seq No",
            "dataType": "int64",
            "sourceColumn": "OP_STEP_SEQ_NUM"
          },
          {
            "name": "Department",
            "dataType": "string",
            "sourceColumn": "DEPARTMENT"
          },
          {
            "name": "Item Family",
            "dataType": "string",
            "sourceColumn": "ITEM_FAMILY"
          },
          {
            "name": "Item Description",
            "dataType": "string",
            "sourceColumn": "ITEM_DESCRIPTION"
          },
          {
            "name": "Plant Id",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          },
          {
            "name": "Calculated Booking Date",
            "dataType": "dateTime",
            "sourceColumn": "BOOKING_DATE - Copy",
            "formatString": "dd MMMM yyyy",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"16393\" Group=\"LongDate\" FormatString=\"dd MMMM yyyy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "Custom Booking Date",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-Absorb'[Booking Date],\"dd mmm yyyy\")",
            "sortByColumn": "Booking Date"
          },
          {
            "type": "calculated",
            "name": "Day Of Week",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-Absorb'[Booking Date],\"DDDD\")"
          },
          {
            "name": "SORT_ORDER",
            "dataType": "int64",
            "sourceColumn": "SORT_ORDER"
          },
          {
            "name": "BOOKING_DATE - Copy.1",
            "dataType": "dateTime",
            "sourceColumn": "BOOKING_DATE - Copy.1"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_FACT_ABSORB = Source{[Schema=\"dbo\",Item=\"TGT_FACT_ABSORB\"]}[Data],",
                "    #\"Duplicated Column\" = Table.DuplicateColumn(dbo_TGT_FACT_ABSORB, \"BOOKING_DATE\", \"BOOKING_DATE - Copy\"),",
                "    #\"Duplicated Column1\" = Table.DuplicateColumn(#\"Duplicated Column\", \"BOOKING_DATE\", \"BOOKING_DATE - Copy.1\")",
                "in",
                "    #\"Duplicated Column1\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Total Absorbed Euro USD 1",
            "expression": [
              " var current_month = MONTH(NOW())",
              "var current_year=YEAR(NOW())",
              "return",
              "IF(ISCROSSFILTERED('CustomCurrency'[Currency_Name]),SWITCH(TRUE(),VALUES('CustomCurrency'[Currency_Name])=\"USD\",",
              "SUMX('Fact-Absorb','Fact-Absorb'[Total Absorbed]* LOOKUPVALUE(STG_CURRENCY_CONVERSION[CONVERSION_RATE],STG_CURRENCY_CONVERSION[Month],current_month,STG_CURRENCY_CONVERSION[Year],current_year)),VALUES('CustomCurrency'[Currency_Name])=\"EURO\",sum('Fact-Absorb'[Total Absorbed]),BLANK()),BLANK())"
            ]
          },
          {
            "name": "Total COGM Euro USD",
            "expression": [
              " var current_month = MONTH(NOW())",
              "var current_year=YEAR(NOW())",
              "return",
              "IF(ISCROSSFILTERED('CustomCurrency'[Currency_Name]),SWITCH(TRUE(),VALUES('CustomCurrency'[Currency_Name])=\"USD\",",
              "SUMX('Fact-Absorb','Fact-Absorb'[Total COGM]* LOOKUPVALUE(STG_CURRENCY_CONVERSION[CONVERSION_RATE],STG_CURRENCY_CONVERSION[Month],current_month,STG_CURRENCY_CONVERSION[Year],current_year)),VALUES('CustomCurrency'[Currency_Name])=\"EURO\",sum('Fact-Absorb'[Total COGM]),BLANK()),BLANK())"
            ]
          }
        ]
      },
      {
        "name": "Fact-Commit Act Absorb",
        "columns": [
          {
            "name": "Cell",
            "dataType": "string",
            "sourceColumn": "CELL"
          },
          {
            "name": "Commit",
            "dataType": "double",
            "sourceColumn": "COMMIT",
            "formatString": "\"€\" #,0;-\"€\" #,0;\"€\" #,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Day",
            "dataType": "int64",
            "sourceColumn": "DAY"
          },
          {
            "name": "Commit Actual",
            "dataType": "int64",
            "sourceColumn": "COMMIT_ACTUAL",
            "formatString": "\"€\" #,0;-\"€\" #,0;\"€\" #,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Target",
            "dataType": "int64",
            "sourceColumn": "TARGET",
            "formatString": "\"€\" #,0;-\"€\" #,0;\"€\" #,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Commit Reflect",
            "dataType": "int64",
            "sourceColumn": "COMMIT_REFLECT",
            "formatString": "\"€\" #,0;-\"€\" #,0;\"€\" #,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Year",
            "dataType": "int64",
            "sourceColumn": "YEAR"
          },
          {
            "name": "Month",
            "dataType": "int64",
            "sourceColumn": "MONTH"
          },
          {
            "name": "Month Name",
            "dataType": "string",
            "sourceColumn": "MONTH_NAME",
            "sortByColumn": "Month"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "DATE",
            "formatString": "dd-MM-yyyy",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"16393\" Group=\"ShortDate\" FormatString=\"dd-MM-yyyy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "Day Name",
            "dataType": "string",
            "sourceColumn": "DAY_NAME"
          },
          {
            "name": "Plant Id",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          },
          {
            "name": "Calculated Date",
            "dataType": "dateTime",
            "sourceColumn": "DATE - Copy",
            "formatString": "dddd, d MMMM, yyyy",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"16393\" Group=\"LongDate\" FormatString=\"dddd, d MMMM, yyyy\" /></DateTimes></Format>"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_AGG_COMMIT_ACT_ABSORB = Source{[Schema=\"dbo\",Item=\"TGT_AGG_COMMIT_ACT_ABSORB\"]}[Data],",
                "    #\"Duplicated Column\" = Table.DuplicateColumn(dbo_TGT_AGG_COMMIT_ACT_ABSORB, \"DATE\", \"DATE - Copy\")",
                "in",
                "    #\"Duplicated Column\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Delta Commit Reflect",
            "expression": "sum('Fact-Commit Act Absorb'[Commit Reflect]) - sum('Fact-Commit Act Absorb'[Target])",
            "formatString": "\"€\" #,0;-\"€\" #,0;\"€\" #,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Delta Commit Actual",
            "expression": "(sum('Fact-Commit Act Absorb'[Commit Actual]) - sum('Fact-Commit Act Absorb'[Commit]))",
            "formatString": "\"€\" #,0;-\"€\" #,0;\"€\" #,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Delta Target Actual",
            "expression": "(sum('Fact-Commit Act Absorb'[Commit Actual]) - sum('Fact-Commit Act Absorb'[Target]))",
            "formatString": "\"€\" #,0;-\"€\" #,0;\"€\" #,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Delta Commit Reflect Euro USD",
            "expression": [
              " var current_month = MONTH(NOW())",
              "var current_year=YEAR(NOW())",
              "return",
              "IF(ISCROSSFILTERED('CustomCurrency'[Currency_Name]),SWITCH(TRUE(),VALUES('CustomCurrency'[Currency_Name])=\"USD\",",
              "SUMX('Fact-Commit Act Absorb',[Delta Commit Reflect]* LOOKUPVALUE(STG_CURRENCY_CONVERSION[CONVERSION_RATE],STG_CURRENCY_CONVERSION[Month],current_month,STG_CURRENCY_CONVERSION[Year],current_year)),VALUES('CustomCurrency'[Currency_Name])=\"EURO\",[Delta Commit Reflect],BLANK()),BLANK())"
            ]
          },
          {
            "name": "Commit Reflect Euro USD",
            "expression": [
              " var current_month = MONTH(NOW())",
              "var current_year=YEAR(NOW())",
              "return",
              "IF(ISCROSSFILTERED('CustomCurrency'[Currency_Name]),SWITCH(TRUE(),VALUES('CustomCurrency'[Currency_Name])=\"USD\",",
              "SUMX('Fact-Commit Act Absorb','Fact-Commit Act Absorb'[Commit Reflect]* LOOKUPVALUE(STG_CURRENCY_CONVERSION[CONVERSION_RATE],STG_CURRENCY_CONVERSION[Month],current_month,STG_CURRENCY_CONVERSION[Year],current_year)),VALUES('CustomCurrency'[Currency_Name])=\"EURO\",SUM('Fact-Commit Act Absorb'[Commit Reflect]),BLANK()),BLANK())"
            ]
          },
          {
            "name": "Target Euro USD",
            "expression": [
              " var current_month = MONTH(NOW())",
              "var current_year=YEAR(NOW())",
              "return",
              "IF(ISCROSSFILTERED('CustomCurrency'[Currency_Name]),SWITCH(TRUE(),VALUES('CustomCurrency'[Currency_Name])=\"USD\",",
              "SUMX('Fact-Commit Act Absorb','Fact-Commit Act Absorb'[Target]* LOOKUPVALUE(STG_CURRENCY_CONVERSION[CONVERSION_RATE],STG_CURRENCY_CONVERSION[Month],current_month,STG_CURRENCY_CONVERSION[Year],current_year)),VALUES('CustomCurrency'[Currency_Name])=\"EURO\",SUM('Fact-Commit Act Absorb'[Target]),BLANK()),BLANK())"
            ]
          }
        ]
      },
      {
        "name": "Fact-Absorb Calc",
        "columns": [
          {
            "name": "Cell",
            "dataType": "string",
            "sourceColumn": "CELL"
          },
          {
            "name": "Booking date",
            "dataType": "dateTime",
            "sourceColumn": "BOOKING_DATE",
            "formatString": "dd-MM-yyyy",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"16393\" Group=\"ShortDate\" FormatString=\"dd-MM-yyyy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "Total SO Qty",
            "dataType": "double",
            "sourceColumn": "TOTAL_SO_QTY"
          },
          {
            "name": "Total Absorbed Sum",
            "dataType": "double",
            "sourceColumn": "TOTAL_ABSORBED_SUM",
            "formatString": "\"€\" #,0;-\"€\" #,0;\"€\" #,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Total COGM Sum",
            "dataType": "double",
            "sourceColumn": "TOTAL_COGM_SUM",
            "formatString": "\"€\" #,0;-\"€\" #,0;\"€\" #,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Target",
            "dataType": "double",
            "sourceColumn": "TARGET",
            "formatString": "\"€\" #,0;-\"€\" #,0;\"€\" #,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Commit",
            "dataType": "double",
            "sourceColumn": "COMMIT",
            "formatString": "\"€\" #,0;-\"€\" #,0;\"€\" #,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Year",
            "dataType": "int64",
            "sourceColumn": "YEAR"
          },
          {
            "name": "Month",
            "dataType": "int64",
            "sourceColumn": "MONTH"
          },
          {
            "name": "Month Name",
            "dataType": "string",
            "sourceColumn": "MONTH_NAME",
            "sortByColumn": "Month"
          },
          {
            "name": "Week",
            "dataType": "int64",
            "sourceColumn": "WEEK"
          },
          {
            "name": "Week Start Date",
            "dataType": "dateTime",
            "sourceColumn": "WEEK_START_DATE"
          },
          {
            "name": "Day",
            "dataType": "string",
            "sourceColumn": "DAY"
          },
          {
            "name": "Plant Id",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          },
          {
            "name": "Calculated Booking Date",
            "dataType": "dateTime",
            "sourceColumn": "BOOKING_DATE - Copy",
            "formatString": "dddd, d MMMM, yyyy",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"16393\" Group=\"LongDate\" FormatString=\"dddd, d MMMM, yyyy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "Calculated Week Start Date",
            "dataType": "dateTime",
            "sourceColumn": "WEEK_START_DATE - Copy",
            "formatString": "dd MMMM yyyy",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"16393\" Group=\"LongDate\" FormatString=\"dd MMMM yyyy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "Custom Booking Date",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-Absorb Calc'[Booking date], \"ddd dd mmm yy\")",
            "sortByColumn": "Booking date"
          },
          {
            "type": "calculated",
            "name": "Join",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "'Fact-Absorb Calc'[Booking date]& 'Fact-Absorb Calc'[Cell]"
          },
          {
            "name": "OP_STEP_NUM",
            "dataType": "double",
            "sourceColumn": "OP_STEP_NUM"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_AGG_ABSORB = Source{[Schema=\"dbo\",Item=\"TGT_AGG_ABSORB\"]}[Data],",
                "    #\"Duplicated Column\" = Table.DuplicateColumn(dbo_TGT_AGG_ABSORB, \"BOOKING_DATE\", \"BOOKING_DATE - Copy\"),",
                "    #\"Duplicated Column1\" = Table.DuplicateColumn(#\"Duplicated Column\", \"WEEK_START_DATE\", \"WEEK_START_DATE - Copy\")",
                "in",
                "    #\"Duplicated Column1\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Delta Target",
            "expression": "(sum('Fact-Absorb Calc'[Total Absorbed Sum]) - sum('Fact-Absorb Calc'[Target]))",
            "formatString": "\"€\" #,0;-\"€\" #,0;\"€\" #,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Delta Commit",
            "expression": "(sum('Fact-Absorb Calc'[Total Absorbed Sum]) - sum('Fact-Absorb Calc'[Commit]))",
            "formatString": "\"€\" #,0;-\"€\" #,0;\"€\" #,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "FirstMonthName",
            "expression": [
              " ",
              "var firstmonth = MONTH(FIRSTDATE('Fact-Absorb Calc'[Booking date]))",
              "return",
              "CALCULATE(MIN('Fact-Absorb Calc'[Month Name]),'Fact-Absorb Calc'[Month]=firstmonth)"
            ]
          },
          {
            "name": "LastMonthName",
            "expression": [
              " ",
              "var lastmonth = MONTH(LASTDATE('Fact-Absorb Calc'[Booking date]))",
              "return",
              "CALCULATE(MAX('Fact-Absorb Calc'[Month Name]),'Fact-Absorb Calc'[Month]=lastmonth)"
            ]
          },
          {
            "name": "LastDate",
            "expression": [
              " ",
              "var lastdatecalc = LASTDATE('Fact-Absorb Calc'[Booking date])",
              "return",
              "CALCULATE(MAX('Fact-Absorb Calc'[Calculated Booking Date]),'Fact-Absorb Calc'[Booking date]=lastdatecalc)"
            ],
            "formatString": "dddd, d MMMM, yyyy",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"16393\" Group=\"LongDate\" FormatString=\"dddd, d MMMM, yyyy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "FirstDate",
            "expression": [
              " ",
              "var firstdatecalc= FIRSTDATE('Fact-Absorb Calc'[Booking date])",
              "return",
              "CALCULATE(MIN('Fact-Absorb Calc'[Calculated Booking Date]),'Fact-Absorb Calc'[Booking date]=firstdatecalc)"
            ],
            "formatString": "dddd, d MMMM, yyyy",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"16393\" Group=\"LongDate\" FormatString=\"dddd, d MMMM, yyyy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "Sum of COGM",
            "expression": "sum('Fact-Absorb Calc'[Total COGM Sum])"
          },
          {
            "name": "Sum Of Total Absorbed Sum",
            "expression": "SUM('Fact-Absorb Calc'[Total Absorbed Sum])",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Sum Of Target",
            "expression": "SUM('Fact-Absorb Calc'[Target])"
          },
          {
            "name": "Total Absorbed EURO USD",
            "expression": [
              " var current_month = MONTH(NOW())",
              "var current_year=YEAR(NOW())",
              "return",
              "IF(ISCROSSFILTERED('CustomCurrency'[Currency_Name]),SWITCH(TRUE(),VALUES('CustomCurrency'[Currency_Name])=\"USD\",",
              "SUMX('Fact-Absorb Calc',[Sum Of Total Absorbed Sum]* LOOKUPVALUE(STG_CURRENCY_CONVERSION[CONVERSION_RATE],STG_CURRENCY_CONVERSION[Month],current_month,STG_CURRENCY_CONVERSION[Year],current_year)),VALUES('CustomCurrency'[Currency_Name])=\"EURO\",[Sum Of Total Absorbed Sum],BLANK()),BLANK())"
            ],
            "formatString": "0.00"
          },
          {
            "name": "Target_USD",
            "expression": [
              " var current_month = MONTH(NOW())",
              "var current_year=YEAR(NOW())",
              "return",
              "IF(ISCROSSFILTERED('CustomCurrency'[Currency_Name]),SWITCH(TRUE(),VALUES('CustomCurrency'[Currency_Name])=\"USD\",",
              "SUMX('Fact-Absorb Calc',[Sum Of Target]* LOOKUPVALUE(STG_CURRENCY_CONVERSION[CONVERSION_RATE],STG_CURRENCY_CONVERSION[Month],current_month,STG_CURRENCY_CONVERSION[Year],current_year)),VALUES('CustomCurrency'[Currency_Name])=\"EURO\",[Sum Of Target],BLANK()),BLANK())"
            ]
          },
          {
            "name": "Delta Target EURO USD",
            "expression": [
              "var current_month = MONTH(NOW())",
              "var current_year=YEAR(NOW())",
              "return",
              "IF(ISCROSSFILTERED('CustomCurrency'[Currency_Name]),SWITCH(TRUE(),VALUES('CustomCurrency'[Currency_Name])=\"USD\",",
              "SUMX('Fact-Absorb Calc',[Delta Target]* LOOKUPVALUE(STG_CURRENCY_CONVERSION[CONVERSION_RATE],STG_CURRENCY_CONVERSION[Month],current_month,STG_CURRENCY_CONVERSION[Year],current_year)),VALUES('CustomCurrency'[Currency_Name])=\"EURO\",[Delta Target],BLANK()),BLANK())"
            ]
          },
          {
            "name": "Delta Commit Euro USD",
            "expression": [
              "var current_month = MONTH(NOW())",
              "var current_year=YEAR(NOW())",
              "return",
              "IF(ISCROSSFILTERED('CustomCurrency'[Currency_Name]),SWITCH(TRUE(),VALUES('CustomCurrency'[Currency_Name])=\"USD\",",
              "SUMX('Fact-Absorb Calc',[Delta Commit]* LOOKUPVALUE(STG_CURRENCY_CONVERSION[CONVERSION_RATE],STG_CURRENCY_CONVERSION[Month],current_month,STG_CURRENCY_CONVERSION[Year],current_year)),VALUES('CustomCurrency'[Currency_Name])=\"EURO\",[Delta Commit],BLANK()),BLANK())"
            ]
          },
          {
            "name": "Sum Of Commit",
            "expression": "SUM('Fact-Absorb Calc'[Commit])"
          },
          {
            "name": "Commit EURO USD",
            "expression": [
              " var current_month = MONTH(NOW())",
              "var current_year=YEAR(NOW())",
              "return",
              "IF(ISCROSSFILTERED('CustomCurrency'[Currency_Name]),SWITCH(TRUE(),VALUES('CustomCurrency'[Currency_Name])=\"USD\",",
              "SUMX('Fact-Absorb Calc',[Sum Of Commit]* LOOKUPVALUE(STG_CURRENCY_CONVERSION[CONVERSION_RATE],STG_CURRENCY_CONVERSION[Month],current_month,STG_CURRENCY_CONVERSION[Year],current_year)),VALUES('CustomCurrency'[Currency_Name])=\"EURO\",[Sum Of Commit],BLANK()),BLANK())"
            ]
          }
        ]
      },
      {
        "name": "Dim-Date",
        "columns": [
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "DATE",
            "formatString": "dd-MM-yyyy",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"16393\" Group=\"ShortDate\" FormatString=\"dd-MM-yyyy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "Year",
            "dataType": "int64",
            "sourceColumn": "YEAR"
          },
          {
            "name": "Month",
            "dataType": "string",
            "sourceColumn": "MONTH",
            "sortByColumn": "Month No"
          },
          {
            "name": "Day",
            "dataType": "string",
            "sourceColumn": "DAY"
          },
          {
            "name": "Day No",
            "dataType": "int64",
            "sourceColumn": "DAY_NUM"
          },
          {
            "name": "Active",
            "dataType": "int64",
            "sourceColumn": "ACTIVE"
          },
          {
            "type": "calculated",
            "name": "Week No",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "WEEKNUM('Dim-Date'[Date],2)"
          },
          {
            "type": "calculated",
            "name": "Quarter",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CONCATENATE(\"Q\",QUARTER('Dim-Date'[Date]))"
          },
          {
            "name": "Month No",
            "dataType": "int64",
            "sourceColumn": "MONTH_NUM"
          },
          {
            "type": "calculated",
            "name": "Day Num",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "Day('Dim-Date'[Date])"
          },
          {
            "type": "calculated",
            "name": "Week Start Date",
            "dataType": "dateTime",
            "isDataTypeInferred": false,
            "expression": " 'Dim-Date'[Date]-(WEEKDAY('Dim-Date'[Date],2))+1",
            "formatString": "d MMMM yyyy",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"16393\" Group=\"LongDate\" FormatString=\"d MMMM yyyy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "Calculated Date",
            "dataType": "dateTime",
            "sourceColumn": "DATE - Copy",
            "formatString": "dddd, d MMMM, yyyy",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"16393\" Group=\"LongDate\" FormatString=\"dddd, d MMMM, yyyy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "Custom Date",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Dim-Date'[Date],\" ddd dd mmm yy\")",
            "sortByColumn": "Date"
          },
          {
            "type": "calculated",
            "name": "Latest Update",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT(UTCNOW(),\"dd mmm yyyy hh:mm\")"
          },
          {
            "type": "calculated",
            "name": "Custom Week Start Date",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Dim-Date'[Week Start Date],\"dd mmm yyyy\")",
            "sortByColumn": "Week Start Date"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_DIM_CALENDAR = Source{[Schema=\"dbo\",Item=\"TGT_DIM_CALENDAR\"]}[Data],",
                "    #\"Duplicated Column\" = Table.DuplicateColumn(dbo_TGT_DIM_CALENDAR, \"DATE\", \"DATE - Copy\")",
                "in",
                "    #\"Duplicated Column\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "LastRefreshDate",
            "expression": "FORMAT(NOW(),\"dd mmm yyyy hh:mm\")"
          },
          {
            "name": "CurrnetDate",
            "expression": "NOW()",
            "formatString": "General Date"
          },
          {
            "name": "EarlierTime",
            "expression": " CALCULATE ( MAX ( 'Dim-Date'[Date] ), FILTER ( ALLSELECTED ( 'Dim-Date'[Date] ), 'Dim-Date'[Date] < SELECTEDVALUE ( 'Dim-Date'[Date] ) ) ) "
          },
          {
            "name": "Measure 3",
            "expression": "MONTH(MAX('Dim-Date'[Date]))"
          }
        ]
      },
      {
        "name": "Dim-Divisions",
        "columns": [
          {
            "name": "Division ID",
            "dataType": "int64",
            "sourceColumn": "Division_ID"
          },
          {
            "name": "Division Name",
            "dataType": "string",
            "sourceColumn": "Division_Name"
          },
          {
            "name": "Division Code",
            "dataType": "string",
            "sourceColumn": "Division_Code"
          },
          {
            "name": "Description",
            "dataType": "string",
            "sourceColumn": "Description"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_DIM_DIVISIONS = Source{[Schema=\"dbo\",Item=\"TGT_DIM_DIVISIONS\"]}[Data]",
                "in",
                "    dbo_TGT_DIM_DIVISIONS"
              ]
            }
          }
        ]
      },
      {
        "name": "Dim-Plants",
        "columns": [
          {
            "name": "Plant ID",
            "dataType": "int64",
            "sourceColumn": "Plant_ID"
          },
          {
            "name": "Plant Name",
            "dataType": "string",
            "sourceColumn": "Plant_Name"
          },
          {
            "name": "Plant Code",
            "dataType": "string",
            "sourceColumn": "Plant_Code"
          },
          {
            "name": "Division ID",
            "dataType": "int64",
            "sourceColumn": "Division_ID"
          },
          {
            "name": "Description",
            "dataType": "string",
            "sourceColumn": "Description"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_DIM_PLANTS = Source{[Schema=\"dbo\",Item=\"TGT_DIM_PLANTS\"]}[Data]",
                "in",
                "    dbo_TGT_DIM_PLANTS"
              ]
            }
          }
        ]
      },
      {
        "name": "Fact-SPMA",
        "columns": [
          {
            "name": "Item",
            "dataType": "string",
            "sourceColumn": "ITEM"
          },
          {
            "name": "BU",
            "dataType": "int64",
            "sourceColumn": "BU"
          },
          {
            "name": "Cell",
            "dataType": "string",
            "sourceColumn": "CELL"
          },
          {
            "name": "SPMA Group",
            "dataType": "string",
            "sourceColumn": "SPMA_GROUP"
          },
          {
            "name": "Family File",
            "dataType": "string",
            "sourceColumn": "FAMILY_FILE"
          },
          {
            "name": "Flag",
            "dataType": "string",
            "sourceColumn": "FLAG"
          },
          {
            "name": "Plant Op",
            "dataType": "int64",
            "sourceColumn": "PLANT_OP"
          },
          {
            "name": "Cell Op",
            "dataType": "int64",
            "sourceColumn": "CELL_OP"
          },
          {
            "name": "Foundry Op",
            "dataType": "int64",
            "sourceColumn": "FOUNDRY_OP"
          },
          {
            "name": "Plant Target",
            "dataType": "double",
            "sourceColumn": "PLANT_TARGET",
            "formatString": "0"
          },
          {
            "name": "Cell Target",
            "dataType": "double",
            "sourceColumn": "CELL_TARGET"
          },
          {
            "name": "Foundry Target",
            "dataType": "double",
            "sourceColumn": "FOUNDRY_TARGET"
          },
          {
            "name": "Excl",
            "dataType": "string",
            "sourceColumn": "EXCL"
          },
          {
            "name": "BU Mat Num",
            "dataType": "string",
            "sourceColumn": "BU_MAT_NUM",
            "sortByColumn": "SORT_ORDER"
          },
          {
            "name": "Plant Tgt MTD",
            "dataType": "int64",
            "sourceColumn": "PLANT_TGT_MTD"
          },
          {
            "name": "Cell Tgt MTD",
            "dataType": "int64",
            "sourceColumn": "CELL_TGT_MTD"
          },
          {
            "name": "Foundry Tgt MTD",
            "dataType": "int64",
            "sourceColumn": "FOUNDRY_TGT_MTD"
          },
          {
            "name": "Plant MTD",
            "dataType": "int64",
            "sourceColumn": "PLANT_MTD"
          },
          {
            "name": "Cell MTD",
            "dataType": "int64",
            "sourceColumn": "CELL_MTD"
          },
          {
            "name": "Foundry MTD",
            "dataType": "int64",
            "sourceColumn": "FOUNDRY_MTD"
          },
          {
            "name": "Plant Per",
            "dataType": "int64",
            "sourceColumn": "PLANT_PER"
          },
          {
            "name": "Cell Per",
            "dataType": "int64",
            "sourceColumn": "CELL_PER"
          },
          {
            "name": "Foundry Per",
            "dataType": "int64",
            "sourceColumn": "FOUNDRY_PER"
          },
          {
            "name": "Plant SPMA",
            "dataType": "int64",
            "sourceColumn": "PLANT_SPMA"
          },
          {
            "name": "Cell SPMA",
            "dataType": "int64",
            "sourceColumn": "CELL_SPMA"
          },
          {
            "name": "Foundry SPMA",
            "dataType": "int64",
            "sourceColumn": "FOUNDRY_SPMA"
          },
          {
            "name": "Plant Daily",
            "dataType": "int64",
            "sourceColumn": "PLANT_DAILY"
          },
          {
            "name": "Cell Daily",
            "dataType": "int64",
            "sourceColumn": "CELL_DAILY"
          },
          {
            "name": "Plant Avg",
            "dataType": "int64",
            "sourceColumn": "PLANT_AVG"
          },
          {
            "name": "Cell Avg",
            "dataType": "int64",
            "sourceColumn": "CELL_AVG"
          },
          {
            "name": "Foundry Avg",
            "dataType": "int64",
            "sourceColumn": "FOUNDRY_AVG"
          },
          {
            "name": "Plant SPMA Filt",
            "dataType": "string",
            "sourceColumn": "PLANT_SPMA_FILT"
          },
          {
            "name": "Cell SPMA Filt",
            "dataType": "string",
            "sourceColumn": "CELL_SPMA_FILT"
          },
          {
            "name": "Foundry SPMA Filt",
            "dataType": "string",
            "sourceColumn": "FOUNDRY_SPMA_FILT"
          },
          {
            "name": "Plant Active",
            "dataType": "string",
            "sourceColumn": "PLANT_ACTIVE"
          },
          {
            "name": "Cell Active",
            "dataType": "string",
            "sourceColumn": "CELL_ACTIVE"
          },
          {
            "name": "Foundry Active",
            "dataType": "string",
            "sourceColumn": "FOUNDRY_ACTIVE"
          },
          {
            "name": "Family",
            "dataType": "string",
            "sourceColumn": "FAMILY"
          },
          {
            "name": "Days",
            "dataType": "int64",
            "sourceColumn": "DAYS"
          },
          {
            "name": "Year",
            "dataType": "int64",
            "sourceColumn": "YEAR"
          },
          {
            "name": "Month",
            "dataType": "int64",
            "sourceColumn": "MONTH"
          },
          {
            "name": "Month Name",
            "dataType": "string",
            "sourceColumn": "MONTH_NAME"
          },
          {
            "name": "DateStamp",
            "dataType": "dateTime",
            "sourceColumn": "DATESTAMP"
          },
          {
            "name": "PLANT_ID",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          },
          {
            "type": "calculated",
            "name": "Custom DateStamp",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-SPMA'[DateStamp],\"dd-mmm-yyyy\")"
          },
          {
            "name": "Foundry Daily",
            "dataType": "int64",
            "sourceColumn": "FOUNDRY_DAILY"
          },
          {
            "name": "SORT_ORDER",
            "dataType": "int64",
            "sourceColumn": "SORT_ORDER"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_FACT_SPMA = Source{[Schema=\"dbo\",Item=\"TGT_FACT_SPMA\"]}[Data]",
                "in",
                "    dbo_TGT_FACT_SPMA"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Plant SPMA Percent",
            "expression": "if(sum('Fact-SPMA'[Plant Tgt MTD]) = 0 && sum('Fact-SPMA'[Plant MTD]) > 0, 100,(sum('Fact-SPMA'[Plant SPMA]) / count('Fact-SPMA'[Plant SPMA]) * 100))",
            "formatString": "0"
          },
          {
            "name": "Plant SPA Percent",
            "expression": "if(sum('Fact-SPMA'[Plant Tgt MTD]) = 0, 100,(sum('Fact-SPMA'[Plant MTD]) / sum('Fact-SPMA'[Plant Tgt MTD]) * 100)) ",
            "formatString": "0"
          },
          {
            "name": "Plant SPMA Bad",
            "expression": "count('Fact-SPMA'[Plant SPMA]) - sum('Fact-SPMA'[Plant SPMA]) "
          },
          {
            "name": "Plant Daily Delta",
            "expression": "sum('Fact-SPMA'[Plant Avg]) - sum('Fact-SPMA'[Plant Daily])"
          },
          {
            "name": "Delta Plant MTD",
            "expression": "sum('Fact-SPMA'[Plant MTD]) - sum('Fact-SPMA'[Plant Tgt MTD])"
          },
          {
            "name": "Delta Plant ME",
            "expression": "sum('Fact-SPMA'[Plant MTD]) - sum('Fact-SPMA'[Plant Target])",
            "formatString": "0"
          },
          {
            "name": "Cell Daily Delta",
            "expression": " sum('Fact-SPMA'[Cell Avg]) - sum('Fact-SPMA'[Cell Daily])"
          },
          {
            "name": "Delta Cell MTD",
            "expression": "sum('Fact-SPMA'[Cell MTD]) - sum('Fact-SPMA'[Cell Tgt MTD])"
          },
          {
            "name": "Delta Cell ME",
            "expression": "sum('Fact-SPMA'[Cell MTD]) - sum('Fact-SPMA'[Cell Target])",
            "formatString": "0"
          },
          {
            "name": "Foundary SPMA Percent",
            "expression": "if(sum('Fact-SPMA'[Foundry Tgt MTD]) = 0 && sum('Fact-SPMA'[Foundry MTD]) > 0, 100,(sum('Fact-SPMA'[Foundry SPMA]) / count('Fact-SPMA'[Foundry SPMA]) * 100))",
            "formatString": "0"
          },
          {
            "name": "Foundary SPA Percent",
            "expression": "if(sum('Fact-SPMA'[Foundry Tgt MTD]) = 0, 100,(sum('Fact-SPMA'[Foundry MTD]) / sum('Fact-SPMA'[Foundry Tgt MTD]) * 100)) ",
            "formatString": "0"
          },
          {
            "name": "Foundary Daily Delta",
            "expression": "sum('Fact-SPMA'[Foundry Avg]) - sum('Fact-SPMA'[Foundry Daily])"
          },
          {
            "name": "Delta Foundary MTD",
            "expression": "sum('Fact-SPMA'[Foundry MTD]) - sum('Fact-SPMA'[Foundry Tgt MTD])"
          },
          {
            "name": "Delta Foundary ME",
            "expression": "sum('Fact-SPMA'[Foundry MTD]) - sum('Fact-SPMA'[Foundry Target])",
            "formatString": "0"
          },
          {
            "name": "Cell SPMA Percent",
            "expression": "if(sum('Fact-SPMA'[Cell Tgt MTD]) = 0 && sum('Fact-SPMA'[Cell MTD]) > 0, 100,(sum('Fact-SPMA'[Cell SPMA]) / count('Fact-SPMA'[Cell SPMA]) * 100))",
            "formatString": "0"
          },
          {
            "name": "Cell SPA Percent",
            "expression": "if(sum('Fact-SPMA'[Cell Tgt MTD]) = 0 && sum('Fact-SPMA'[Cell MTD]) > 0, 100,(sum('Fact-SPMA'[Cell MTD]) / sum('Fact-SPMA'[Cell Tgt MTD]) * 100)) ",
            "formatString": "0"
          },
          {
            "name": "Cell SPMA Bad",
            "expression": "count('Fact-SPMA'[Cell SPMA]) - sum('Fact-SPMA'[Cell SPMA]) "
          },
          {
            "name": "Foundry SPMA Bad",
            "expression": " count('Fact-SPMA'[Foundry SPMA] ) - sum('Fact-SPMA'[Foundry SPMA])"
          }
        ]
      },
      {
        "name": "Fact_Days",
        "columns": [
          {
            "name": "Current Day",
            "dataType": "int64",
            "sourceColumn": "CURRENT_DAY"
          },
          {
            "name": "Total Day",
            "dataType": "int64",
            "sourceColumn": "TOTAL_DAY"
          },
          {
            "name": "PLANT_ID",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_AGG_DAYS = Source{[Schema=\"dbo\",Item=\"TGT_AGG_DAYS\"]}[Data]",
                "in",
                "    dbo_TGT_AGG_DAYS"
              ]
            }
          }
        ]
      },
      {
        "name": "Fact-WIP",
        "columns": [
          {
            "name": "Shop Order",
            "dataType": "string",
            "sourceColumn": "SHOP_ORDER"
          },
          {
            "name": "Print Date",
            "dataType": "dateTime",
            "sourceColumn": "PRINT_DATE"
          },
          {
            "name": "Release Date",
            "dataType": "dateTime",
            "sourceColumn": "RELEASE_DATE",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "Aged Days",
            "dataType": "int64",
            "sourceColumn": "AGED_DAYS",
            "formatString": "0.0"
          },
          {
            "name": "Aged Analysis",
            "dataType": "string",
            "sourceColumn": "AGED_ANALYSIS"
          },
          {
            "name": "Scan Date Time",
            "dataType": "dateTime",
            "sourceColumn": "SCAN_DATE_TIME"
          },
          {
            "name": "Scan Reason",
            "dataType": "string",
            "sourceColumn": "SCAN_REASON"
          },
          {
            "name": "Scan Count",
            "dataType": "double",
            "sourceColumn": "SCAN_COUNT"
          },
          {
            "name": "Original Order",
            "dataType": "double",
            "sourceColumn": "ORIGINAL_ORDER"
          },
          {
            "name": "Rework",
            "dataType": "string",
            "sourceColumn": "REWORK"
          },
          {
            "name": "Item",
            "dataType": "string",
            "sourceColumn": "ITEM"
          },
          {
            "name": "Item Desc",
            "dataType": "string",
            "sourceColumn": "ITEM_DESC"
          },
          {
            "name": "Item Class",
            "dataType": "string",
            "sourceColumn": "ITEM_CLASS"
          },
          {
            "name": "Trace Code",
            "dataType": "string",
            "sourceColumn": "TRACE_CODE"
          },
          {
            "name": "Last Op Step Num",
            "dataType": "double",
            "sourceColumn": "LAST_OP_STEP_NUM"
          },
          {
            "name": "Last Work Center Num",
            "dataType": "double",
            "sourceColumn": "LAST_WORK_CENTER_NUM"
          },
          {
            "name": "Last Department Num",
            "dataType": "double",
            "sourceColumn": "LAST_DEPARTMENT_NUM"
          },
          {
            "name": "Last Book Date",
            "dataType": "dateTime",
            "sourceColumn": "LAST_BOOK_DATE"
          },
          {
            "name": "Booked",
            "dataType": "string",
            "sourceColumn": "BOOKED"
          },
          {
            "name": "Last Move Days",
            "dataType": "int64",
            "sourceColumn": "LAST_MOVE_DAYS",
            "formatString": "0.0"
          },
          {
            "name": "Op Step Num",
            "dataType": "double",
            "sourceColumn": "OP_STEP_NUM",
            "formatString": "0"
          },
          {
            "name": "Op Step Num Text",
            "dataType": "string",
            "sourceColumn": "OP_STEP_NUM_TEXT"
          },
          {
            "name": "Department Num",
            "dataType": "double",
            "sourceColumn": "DEPARTMENT_NUM"
          },
          {
            "name": "SO Qty",
            "dataType": "double",
            "sourceColumn": "SO_QTY"
          },
          {
            "name": "Comment",
            "dataType": "string",
            "sourceColumn": "COMMENT"
          },
          {
            "name": "Comment Filter",
            "dataType": "string",
            "sourceColumn": "COMMENT_FILTER"
          },
          {
            "name": "Work Center Num",
            "dataType": "int64",
            "sourceColumn": "WORK_CENTER_NUM"
          },
          {
            "name": "Department",
            "dataType": "string",
            "sourceColumn": "DEPARTMENT"
          },
          {
            "name": "Cell",
            "dataType": "string",
            "sourceColumn": "CELL"
          },
          {
            "name": "BU Mat Num",
            "dataType": "string",
            "sourceColumn": "BU_MAT_NUM",
            "sortByColumn": "SORT_ORDER"
          },
          {
            "name": "Item Family",
            "dataType": "string",
            "sourceColumn": "ITEM_FAMILY"
          },
          {
            "name": "Item Description",
            "dataType": "string",
            "sourceColumn": "ITEM_DESCRIPTION"
          },
          {
            "name": "Op Step Desc",
            "dataType": "string",
            "sourceColumn": "OP_STEP_DESC"
          },
          {
            "name": "Op Step Desc 2",
            "dataType": "string",
            "sourceColumn": "OP_STEP_DESC_2"
          },
          {
            "name": "Op Step Seq Num",
            "dataType": "int64",
            "sourceColumn": "OP_STEP_SEQ_NUM"
          },
          {
            "name": "Sub Assembly",
            "dataType": "string",
            "sourceColumn": "SUB_ASSEMBLY"
          },
          {
            "name": "Cost At Op Num",
            "dataType": "decimal",
            "sourceColumn": "COST_AT_OP_NUM",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Total",
            "dataType": "double",
            "sourceColumn": "TOTAL"
          },
          {
            "name": "Reserve",
            "dataType": "double",
            "sourceColumn": "RESERVE",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "BU",
            "dataType": "string",
            "sourceColumn": "BU"
          },
          {
            "name": "Plant Id",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          },
          {
            "type": "calculated",
            "name": "Custom Release Date",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-WIP'[Release Date],\"dd-mmm-yyyy\")",
            "formatString": "General Date"
          },
          {
            "type": "calculated",
            "name": "Custom Print Date",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-WIP'[Print Date],\"dd-mmm-yyyy\")",
            "formatString": "General Date"
          },
          {
            "type": "calculated",
            "name": "Custom Comments",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF('Fact-WIP'[Comment]=blank(),\"Standard\",\"Validation\")"
          },
          {
            "type": "calculated",
            "name": "Join",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " 'Fact-WIP'[Cell] & 'Fact-WIP'[Op Step Num Text] & 'Fact-WIP'[Item]"
          },
          {
            "name": "SORT_ORDER",
            "dataType": "int64",
            "sourceColumn": "SORT_ORDER"
          },
          {
            "name": "Item Family 2",
            "dataType": "string",
            "sourceColumn": "ITEM_FAMILY - Copy"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_FACT_WIP = Source{[Schema=\"dbo\",Item=\"TGT_FACT_WIP\"]}[Data],",
                "    #\"Duplicated Column\" = Table.DuplicateColumn(dbo_TGT_FACT_WIP, \"ITEM_FAMILY\", \"ITEM_FAMILY - Copy\")",
                "in",
                "    #\"Duplicated Column\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Last Move Days Count",
            "expression": " CALCULATE(DISTINCTCOUNT('Fact-WIP'[Shop Order]), FILTER('Fact-WIP', 'Fact-WIP'[Last Move Days]>30))"
          }
        ]
      },
      {
        "name": "Fact- Lead Time",
        "columns": [
          {
            "name": "Op Date Time",
            "dataType": "dateTime",
            "sourceColumn": "OP_DATE_TIME",
            "formatString": "General Date"
          },
          {
            "name": "Week",
            "dataType": "int64",
            "sourceColumn": "WEEK"
          },
          {
            "name": "Week Start Date",
            "dataType": "dateTime",
            "sourceColumn": "WEEK_START_DATE"
          },
          {
            "name": "Shop Order",
            "dataType": "string",
            "sourceColumn": "SHOP_ORDER"
          },
          {
            "name": "Item",
            "dataType": "string",
            "sourceColumn": "ITEM"
          },
          {
            "name": "Op Step Num",
            "dataType": "double",
            "sourceColumn": "OP_STEP_NUM"
          },
          {
            "name": "Op Step Num Text",
            "dataType": "double",
            "sourceColumn": "OP_STEP_NUM_TEXT"
          },
          {
            "name": "Work Center Num",
            "dataType": "int64",
            "sourceColumn": "Work_Center_NUM"
          },
          {
            "name": "Cell",
            "dataType": "string",
            "sourceColumn": "CELL"
          },
          {
            "name": "BU Mat Num",
            "dataType": "string",
            "sourceColumn": "BU_MAT_NUM",
            "sortByColumn": "SORT_ORDER"
          },
          {
            "name": "Department",
            "dataType": "string",
            "sourceColumn": "DEPARTMENT"
          },
          {
            "name": "Item Family",
            "dataType": "string",
            "sourceColumn": "ITEM_FAMILY"
          },
          {
            "name": "Op Step Desc",
            "dataType": "string",
            "sourceColumn": "OP_STEP_DESC"
          },
          {
            "name": "Op Step Desc 2",
            "dataType": "string",
            "sourceColumn": "OP_STEP_DESC_2"
          },
          {
            "name": "Op Step Seq Num",
            "dataType": "int64",
            "sourceColumn": "OP_STEP_SEQ_NUM"
          },
          {
            "name": "Shift",
            "dataType": "string",
            "sourceColumn": "SHIFT"
          },
          {
            "name": "Last Op Step ",
            "dataType": "string",
            "sourceColumn": "LAST_OP_STEP"
          },
          {
            "name": "Last Op Step Num",
            "dataType": "double",
            "sourceColumn": "LAST_OP_STEP_NUM"
          },
          {
            "name": "Last Op Date Time",
            "dataType": "dateTime",
            "sourceColumn": "LAST_OP_DATE_TIME"
          },
          {
            "name": "Lead Time",
            "dataType": "double",
            "sourceColumn": "LEAD_TIME"
          },
          {
            "name": "Original Op Step Num",
            "dataType": "double",
            "sourceColumn": "ORIGINAL_OP_STEP_NUM"
          },
          {
            "name": "Original Op Step Date Time",
            "dataType": "dateTime",
            "sourceColumn": "ORIGINAL_OP_STEP_DATE_TIME",
            "formatString": "General Date"
          },
          {
            "name": "Lead Time Fp",
            "dataType": "double",
            "sourceColumn": "LEAD_TIME_FP"
          },
          {
            "name": "Complete Date Time",
            "dataType": "dateTime",
            "sourceColumn": "COMPLETE_DATE_TIME"
          },
          {
            "name": "Complete Week",
            "dataType": "int64",
            "sourceColumn": "COMPLETE_WEEK"
          },
          {
            "name": "Complete",
            "dataType": "string",
            "sourceColumn": "COMPLETE"
          },
          {
            "name": "Plant Id",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          },
          {
            "type": "calculated",
            "name": "Custom Week Start Date",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact- Lead Time'[Week Start Date],\"dd-mmm-yyyy\")"
          },
          {
            "name": "SORT_ORDER",
            "dataType": "int64",
            "sourceColumn": "SORT_ORDER"
          },
          {
            "name": "REWORK",
            "dataType": "string",
            "sourceColumn": "REWORK"
          },
          {
            "name": "COMMENT",
            "dataType": "string",
            "sourceColumn": "COMMENT"
          },
          {
            "type": "calculated",
            "name": "Custom Comments",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF('Fact- Lead Time'[COMMENT]=blank(),\"Standard\",\"Validation\")"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_FACT_LEAD_TIME = Source{[Schema=\"dbo\",Item=\"TGT_FACT_LEAD_TIME\"]}[Data]",
                "in",
                "    dbo_TGT_FACT_LEAD_TIME"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Lead Time Avg",
            "expression": "DIVIDE(SUM('Fact- Lead Time'[Lead Time]), DISTINCTCOUNT('Fact- Lead Time'[Shop Order]),0)"
          }
        ]
      },
      {
        "name": "Fact-Fina WIP",
        "columns": [
          {
            "name": "Shop Order",
            "dataType": "string",
            "sourceColumn": "SHOP_ORDER"
          },
          {
            "name": "Release Date",
            "dataType": "dateTime",
            "sourceColumn": "RELEASE_DATE"
          },
          {
            "name": "Original Order",
            "dataType": "double",
            "sourceColumn": "ORIGINAL_ORDER"
          },
          {
            "name": "Rework",
            "dataType": "string",
            "sourceColumn": "REWORK"
          },
          {
            "name": "Cell",
            "dataType": "string",
            "sourceColumn": "CELL"
          },
          {
            "name": "Department",
            "dataType": "string",
            "sourceColumn": "DEPARTMENT"
          },
          {
            "name": "Dept Num",
            "dataType": "int64",
            "sourceColumn": "DEPT_NUM"
          },
          {
            "name": "BU Mat Num",
            "dataType": "string",
            "sourceColumn": "BU_MAT_NUM",
            "sortByColumn": "SORT_ORDER"
          },
          {
            "name": "Item Family",
            "dataType": "string",
            "sourceColumn": "ITEM_FAMILY"
          },
          {
            "name": "Op Step Desc",
            "dataType": "string",
            "sourceColumn": "OP_STEP_DESC"
          },
          {
            "name": "Op Step Desc 2",
            "dataType": "string",
            "sourceColumn": "OP_STEP_DESC_2"
          },
          {
            "name": "Op Step Seq Num",
            "dataType": "int64",
            "sourceColumn": "OP_STEP_SEQ_NUM"
          },
          {
            "name": "Planner",
            "dataType": "double",
            "sourceColumn": "PLANNER"
          },
          {
            "name": "Item",
            "dataType": "string",
            "sourceColumn": "ITEM"
          },
          {
            "name": "Trace Code",
            "dataType": "string",
            "sourceColumn": "TRACE_CODE"
          },
          {
            "name": "Item Desc",
            "dataType": "string",
            "sourceColumn": "ITEM_DESC"
          },
          {
            "name": "Item Class",
            "dataType": "string",
            "sourceColumn": "ITEM_CLASS"
          },
          {
            "name": "SO Open Qty",
            "dataType": "double",
            "sourceColumn": "SO_OPEN_QTY"
          },
          {
            "name": "SO Booked Qty",
            "dataType": "double",
            "sourceColumn": "SO_BOOKED_QTY"
          },
          {
            "name": "Last Op Step Num",
            "dataType": "double",
            "sourceColumn": "LAST_OP_STEP_NUM"
          },
          {
            "name": "Last Work Center Num",
            "dataType": "double",
            "sourceColumn": "LAST_WORK_CENTER_NUM"
          },
          {
            "name": "Last Department Num",
            "dataType": "double",
            "sourceColumn": "LAST_DEPARTMENT_NUM"
          },
          {
            "name": "Last Book Date",
            "dataType": "dateTime",
            "sourceColumn": "LAST_BOOK_DATE"
          },
          {
            "name": "Last Move Days",
            "dataType": "int64",
            "sourceColumn": "LAST_MOVE_DAYS"
          },
          {
            "name": "Booked",
            "dataType": "string",
            "sourceColumn": "BOOKED"
          },
          {
            "name": "Op Step Num",
            "dataType": "int64",
            "sourceColumn": "OP_STEP_NUM"
          },
          {
            "name": "Op Step Num Text",
            "dataType": "string",
            "sourceColumn": "OP_STEP_NUM_TEXT"
          },
          {
            "name": "Work Center Num",
            "dataType": "double",
            "sourceColumn": "WORK_CENTER_NUM"
          },
          {
            "name": "Department Num",
            "dataType": "double",
            "sourceColumn": "DEPARTMENT_NUM"
          },
          {
            "name": "Last Count Date",
            "dataType": "double",
            "sourceColumn": "LAST_COUNT_DATE"
          },
          {
            "name": "Scan Date Time",
            "dataType": "dateTime",
            "sourceColumn": "SCAN_DATE_TIME"
          },
          {
            "name": "Scan Reason",
            "dataType": "string",
            "sourceColumn": "SCAN_REASON"
          },
          {
            "name": "Scan Count",
            "dataType": "double",
            "sourceColumn": "SCAN_COUNT"
          },
          {
            "name": "Reciept To WHS 25",
            "dataType": "string",
            "sourceColumn": "RECIEPT_TO_WHS_25"
          },
          {
            "name": "Costed To Op Num",
            "dataType": "double",
            "sourceColumn": "COSTED_TO_OP_NUM"
          },
          {
            "name": "Aged Analysis Days",
            "dataType": "double",
            "sourceColumn": "AGED_ANALYSIS_DAYS",
            "formatString": "0.0"
          },
          {
            "name": "Aged Analysis",
            "dataType": "string",
            "sourceColumn": "AGED_ANALYSIS"
          },
          {
            "name": "Total",
            "dataType": "double",
            "sourceColumn": "TOTAL"
          },
          {
            "name": "Reserve",
            "dataType": "double",
            "sourceColumn": "RESERVE",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Aged Analysis Days EOM",
            "dataType": "double",
            "sourceColumn": "AGED_ANALYSIS_DAYS_EOM",
            "formatString": "0.0"
          },
          {
            "name": "Aged Analysis EOM",
            "dataType": "string",
            "sourceColumn": "AGED_ANALYSIS_EOM"
          },
          {
            "name": "Reserve EOM",
            "dataType": "double",
            "sourceColumn": "RESERVE_EOM",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "BU",
            "dataType": "string",
            "sourceColumn": "BU"
          },
          {
            "name": "Comment",
            "dataType": "string",
            "sourceColumn": "COMMENT"
          },
          {
            "name": "Comment Filter",
            "dataType": "string",
            "sourceColumn": "COMMENT_FILTER"
          },
          {
            "name": "Plant Id",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          },
          {
            "type": "calculated",
            "name": "Custom Release Date",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-Fina WIP'[Release Date],\"dd-mmm-yyyy\")"
          },
          {
            "type": "calculated",
            "name": "Custom Last Book Date",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-Fina WIP'[Last Book Date],\"dd-mmm-yyyy\")"
          },
          {
            "type": "calculated",
            "name": "Custom Comments",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF('Fact-Fina WIP'[Comment]=blank(),\"Standard\",\"Validation\")"
          },
          {
            "name": "SORT_ORDER",
            "dataType": "int64",
            "sourceColumn": "SORT_ORDER"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_FACT_FINA_WIP = Source{[Schema=\"dbo\",Item=\"TGT_FACT_FINA_WIP\"]}[Data]",
                "in",
                "    dbo_TGT_FACT_FINA_WIP"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Total Reserve EOM",
            "expression": "SUM('Fact-Fina WIP'[Reserve EOM])",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Reserve_EOM_Euro_USD",
            "expression": [
              " var current_month = MONTH(NOW())",
              "var current_year=YEAR(NOW())",
              "return",
              "IF(ISCROSSFILTERED('CustomCurrency'[Currency_Name]),SWITCH(TRUE(),VALUES('CustomCurrency'[Currency_Name])=\"USD\",",
              "SUMX('Fact-Fina WIP',[Total Reserve EOM]* LOOKUPVALUE(STG_CURRENCY_CONVERSION[CONVERSION_RATE],STG_CURRENCY_CONVERSION[Month],current_month,STG_CURRENCY_CONVERSION[Year],current_year)),VALUES('CustomCurrency'[Currency_Name])=\"EURO\",[Total Reserve EOM],BLANK()),BLANK())"
            ]
          }
        ]
      },
      {
        "name": "Fact-Arch WIP Fina",
        "columns": [
          {
            "name": "Shop Order",
            "dataType": "string",
            "sourceColumn": "SHOP_ORDER"
          },
          {
            "name": "Release Date",
            "dataType": "dateTime",
            "sourceColumn": "RELEASE_DATE"
          },
          {
            "name": "Original Order",
            "dataType": "double",
            "sourceColumn": "ORIGINAL_ORDER"
          },
          {
            "name": "Rework",
            "dataType": "string",
            "sourceColumn": "REWORK"
          },
          {
            "name": "Cell",
            "dataType": "string",
            "sourceColumn": "CELL"
          },
          {
            "name": "Department",
            "dataType": "string",
            "sourceColumn": "DEPARTMENT"
          },
          {
            "name": "Dept Num",
            "dataType": "int64",
            "sourceColumn": "DEPT_NUM"
          },
          {
            "name": "BU Mat Num",
            "dataType": "string",
            "sourceColumn": "BU_MAT_NUM",
            "sortByColumn": "SORT_ORDER"
          },
          {
            "name": "Item Family",
            "dataType": "string",
            "sourceColumn": "ITEM_FAMILY"
          },
          {
            "name": "Op Step Desc",
            "dataType": "string",
            "sourceColumn": "OP_STEP_DESC"
          },
          {
            "name": "Op Step Desc 2",
            "dataType": "string",
            "sourceColumn": "OP_STEP_DESC_2"
          },
          {
            "name": "Op Step Seq Num ",
            "dataType": "int64",
            "sourceColumn": "OP_STEP_SEQ_NUM"
          },
          {
            "name": "Planner",
            "dataType": "double",
            "sourceColumn": "PLANNER"
          },
          {
            "name": "Item",
            "dataType": "string",
            "sourceColumn": "ITEM"
          },
          {
            "name": "Trace Code",
            "dataType": "string",
            "sourceColumn": "TRACE_CODE"
          },
          {
            "name": "Item Desc",
            "dataType": "string",
            "sourceColumn": "ITEM_DESC"
          },
          {
            "name": "Item Class",
            "dataType": "string",
            "sourceColumn": "ITEM_CLASS"
          },
          {
            "name": "SO Open Qty",
            "dataType": "double",
            "sourceColumn": "SO_OPEN_QTY"
          },
          {
            "name": "SO Booked Qty",
            "dataType": "double",
            "sourceColumn": "SO_BOOKED_QTY"
          },
          {
            "name": "Last Op Step Num",
            "dataType": "double",
            "sourceColumn": "LAST_OP_STEP_NUM"
          },
          {
            "name": "Last Work Center Num",
            "dataType": "double",
            "sourceColumn": "LAST_WORK_CENTER_NUM"
          },
          {
            "name": "Last Department Num",
            "dataType": "double",
            "sourceColumn": "LAST_DEPARTMENT_NUM"
          },
          {
            "name": "Last Book Date",
            "dataType": "dateTime",
            "sourceColumn": "LAST_BOOK_DATE"
          },
          {
            "name": "Last Move days",
            "dataType": "int64",
            "sourceColumn": "LAST_MOVE_DAYS"
          },
          {
            "name": "Booked",
            "dataType": "string",
            "sourceColumn": "BOOKED"
          },
          {
            "name": "Op Step Num",
            "dataType": "int64",
            "sourceColumn": "OP_STEP_NUM"
          },
          {
            "name": "Op Step Num Text",
            "dataType": "string",
            "sourceColumn": "OP_STEP_NUM_TEXT"
          },
          {
            "name": "Work Center Num",
            "dataType": "double",
            "sourceColumn": "WORK_CENTER_NUM"
          },
          {
            "name": "Department Num",
            "dataType": "double",
            "sourceColumn": "DEPARTMENT_NUM"
          },
          {
            "name": "Last Count Date",
            "dataType": "double",
            "sourceColumn": "LAST_COUNT_DATE"
          },
          {
            "name": "Scan Date Time",
            "dataType": "dateTime",
            "sourceColumn": "SCAN_DATE_TIME"
          },
          {
            "name": "Scan Reason",
            "dataType": "string",
            "sourceColumn": "SCAN_REASON"
          },
          {
            "name": "Scan Count",
            "dataType": "double",
            "sourceColumn": "SCAN_COUNT"
          },
          {
            "name": "Reciept To WHS 25",
            "dataType": "string",
            "sourceColumn": "RECIEPT_TO_WHS_25"
          },
          {
            "name": "Costed To Op Num",
            "dataType": "double",
            "sourceColumn": "COSTED_TO_OP_NUM"
          },
          {
            "name": "Aged Analysis Days",
            "dataType": "double",
            "sourceColumn": "AGED_ANALYSIS_DAYS",
            "formatString": "0.0"
          },
          {
            "name": "Aged Analysis",
            "dataType": "string",
            "sourceColumn": "AGED_ANALYSIS"
          },
          {
            "name": "Total",
            "dataType": "double",
            "sourceColumn": "TOTAL"
          },
          {
            "name": "Reserve",
            "dataType": "double",
            "sourceColumn": "RESERVE",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Aged Analysis Days EOM",
            "dataType": "double",
            "sourceColumn": "AGED_ANALYSIS_DAYS_EOM"
          },
          {
            "name": "Aged Analysis EOM",
            "dataType": "string",
            "sourceColumn": "AGED_ANALYSIS_EOM"
          },
          {
            "name": "Reserve EOM",
            "dataType": "double",
            "sourceColumn": "RESERVE_EOM",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "BU",
            "dataType": "string",
            "sourceColumn": "BU"
          },
          {
            "name": "Comment",
            "dataType": "string",
            "sourceColumn": "COMMENT"
          },
          {
            "name": "Comment Filter",
            "dataType": "string",
            "sourceColumn": "COMMENT_FILTER"
          },
          {
            "name": "Plant Id",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          },
          {
            "name": "Archive Time",
            "dataType": "dateTime",
            "sourceColumn": "ARCHIVE_TIME"
          },
          {
            "type": "calculated",
            "name": "Custom Release Date",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-Arch WIP Fina'[Release Date],\"dd-mmm-yyyy\")"
          },
          {
            "type": "calculated",
            "name": "Custom Last Book Date",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-Arch WIP Fina'[Last Book Date],\"dd-mmm-yyyy\")"
          },
          {
            "type": "calculated",
            "name": "Custom Comment",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF('Fact-Arch WIP Fina'[Comment]=blank(),\"Standard\",\"Validation\")"
          },
          {
            "name": "SORT_ORDER",
            "dataType": "int64",
            "sourceColumn": "SORT_ORDER"
          },
          {
            "type": "calculated",
            "name": "Archive year",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-Arch WIP Fina'[Archive Time],\"yyyy\")"
          },
          {
            "type": "calculated",
            "name": "Archive Month",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-Arch WIP Fina'[Archive Time],\"mmmm\")"
          },
          {
            "type": "calculated",
            "name": "Archive Day",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-Arch WIP Fina'[Archive Time],\"dd\")"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_AGG_ARCH_WIP_FINA = Source{[Schema=\"dbo\",Item=\"TGT_AGG_ARCH_WIP_FINA\"]}[Data]",
                "in",
                "    dbo_TGT_AGG_ARCH_WIP_FINA"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Sum of Reserve EOM",
            "expression": "SUM('Fact-Arch WIP Fina'[Reserve EOM])",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "LastMonthReserve",
            "expression": [
              " ",
              "var lastmonth = MONTH(MAX('Fact-Arch WIP Fina'[Archive Time]))",
              "return",
              "CALCULATE(SUM('Fact-Arch WIP Fina'[Reserve EOM]),MONTH('Fact-Arch WIP Fina'[Archive Time])=lastmonth)"
            ]
          },
          {
            "name": "Arch ReserveEOM Euro USD",
            "expression": [
              " var current_month = MONTH(NOW())",
              "var current_year=YEAR(NOW())",
              "return",
              "IF(ISCROSSFILTERED('CustomCurrency'[Currency_Name]),SWITCH(TRUE(),VALUES('CustomCurrency'[Currency_Name])=\"USD\",",
              "SUMX('Fact-Arch WIP Fina',[Sum of Reserve EOM]* LOOKUPVALUE(STG_CURRENCY_CONVERSION[CONVERSION_RATE],STG_CURRENCY_CONVERSION[Month],current_month,STG_CURRENCY_CONVERSION[Year],current_year)),VALUES('CustomCurrency'[Currency_Name])=\"EURO\",[Sum of Reserve EOM],BLANK()),BLANK())"
            ]
          }
        ]
      },
      {
        "name": "Fact-Scrap",
        "columns": [
          {
            "name": "Reason Code Before",
            "dataType": "string",
            "sourceColumn": "REASON_CODE_BEFORE"
          },
          {
            "name": "Reason Code Disc",
            "dataType": "string",
            "sourceColumn": "REASON_CODE_DISC"
          },
          {
            "name": "Department BPCS",
            "dataType": "double",
            "sourceColumn": "DEPARTMENT_BPCS"
          },
          {
            "name": "Workcenter",
            "dataType": "double",
            "sourceColumn": "WORKCENTER"
          },
          {
            "name": "Shop Order",
            "dataType": "string",
            "sourceColumn": "SHOP_ORDER"
          },
          {
            "name": "Item",
            "dataType": "string",
            "sourceColumn": "ITEM"
          },
          {
            "name": "Item Description BPCS",
            "dataType": "string",
            "sourceColumn": "ITEM_DESCRIPTION_BPCS"
          },
          {
            "name": "Scrap Qty",
            "dataType": "int64",
            "sourceColumn": "SCRAP_QTY"
          },
          {
            "name": "Scrap Value",
            "dataType": "double",
            "sourceColumn": "SCRAP_VALUE",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Planner",
            "dataType": "int64",
            "sourceColumn": "PLANNER"
          },
          {
            "name": "Item Class",
            "dataType": "string",
            "sourceColumn": "ITEM_CLASS"
          },
          {
            "name": "Instrument",
            "dataType": "string",
            "sourceColumn": "INSTRUMENT"
          },
          {
            "name": "Business Unit",
            "dataType": "string",
            "sourceColumn": "BUSINESS_UNIT"
          },
          {
            "name": "Component",
            "dataType": "string",
            "sourceColumn": "COMPONENT"
          },
          {
            "name": "Op Step Num Text",
            "dataType": "double",
            "sourceColumn": "OP_STEP_NUM_TEXT"
          },
          {
            "name": "Op Step Disc",
            "dataType": "string",
            "sourceColumn": "OP_STEP_DISC"
          },
          {
            "name": "Scrap Factor",
            "dataType": "double",
            "sourceColumn": "SCRAP_FACTOR"
          },
          {
            "name": "Raw Date",
            "dataType": "double",
            "sourceColumn": "RAW_DATE"
          },
          {
            "name": "Booking Date",
            "dataType": "dateTime",
            "sourceColumn": "BOOKING_DATE"
          },
          {
            "name": "Week",
            "dataType": "int64",
            "sourceColumn": "WEEK"
          },
          {
            "name": "Week Start Date",
            "dataType": "dateTime",
            "sourceColumn": "WEEK_START_DATE"
          },
          {
            "name": "Day",
            "dataType": "string",
            "sourceColumn": "DAY"
          },
          {
            "name": "Trace Code",
            "dataType": "string",
            "sourceColumn": "TRACE_CODE"
          },
          {
            "name": "Work Center Num",
            "dataType": "int64",
            "sourceColumn": "WORK_CENTER_NUM"
          },
          {
            "name": "Department",
            "dataType": "string",
            "sourceColumn": "DEPARTMENT"
          },
          {
            "name": "Cell",
            "dataType": "string",
            "sourceColumn": "CELL"
          },
          {
            "name": "BU Mat Num",
            "dataType": "string",
            "sourceColumn": "BU_MAT_NUM"
          },
          {
            "name": "Item Family",
            "dataType": "string",
            "sourceColumn": "ITEM_FAMILY"
          },
          {
            "name": "Item Description",
            "dataType": "string",
            "sourceColumn": "ITEM_DESCRIPTION"
          },
          {
            "name": "Op Step Desc",
            "dataType": "string",
            "sourceColumn": "OP_STEP_DESC"
          },
          {
            "name": "Op Step Desc 2",
            "dataType": "string",
            "sourceColumn": "OP_STEP_DESC_2"
          },
          {
            "name": "Op Step Seq Num",
            "dataType": "int64",
            "sourceColumn": "OP_STEP_SEQ_NUM"
          },
          {
            "name": "Core Num",
            "dataType": "string",
            "sourceColumn": "CORE_NUM"
          },
          {
            "name": "Operator",
            "dataType": "string",
            "sourceColumn": "OPERATOR"
          },
          {
            "name": "Reason Code",
            "dataType": "string",
            "sourceColumn": "REASON_CODE"
          },
          {
            "name": "Category",
            "dataType": "string",
            "sourceColumn": "CATEGORY"
          },
          {
            "name": "Dept",
            "dataType": "string",
            "sourceColumn": "DEPT"
          },
          {
            "name": "Dept Num",
            "dataType": "double",
            "sourceColumn": "DEPT_NUM"
          },
          {
            "name": "GL BU",
            "dataType": "string",
            "sourceColumn": "GL_BU"
          },
          {
            "name": "Reallocate Dept",
            "dataType": "string",
            "sourceColumn": "REALLOCATE_DEPT"
          },
          {
            "type": "calculated",
            "name": "Custom Booking Date",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-Scrap'[Booking Date],\"dd-Mmmm-yyyy\")"
          },
          {
            "name": "PLANT_ID",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          },
          {
            "type": "calculated",
            "name": "Filter Column",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "'Fact-Scrap'[Booking Date] & 'Fact-Scrap'[Reallocate Dept]"
          },
          {
            "type": "calculated",
            "name": "Custom Week Start Date",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-Scrap'[Week Start Date],\"dd-mmmm-yyyy\")"
          },
          {
            "name": "Op Step Num",
            "dataType": "int64",
            "sourceColumn": "OP_STEP_NUM"
          },
          {
            "type": "calculated",
            "name": "Join",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " 'Fact-Scrap'[Shop Order] & 'Fact-Scrap'[Reason Code] & 'Fact-Scrap'[Scrap Qty] & 'Fact-Scrap'[Booking Date]"
          },
          {
            "type": "calculated",
            "name": "Join Absorb",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " 'Fact-Scrap'[Booking Date]& 'Fact-Scrap'[Reallocate Dept]"
          },
          {
            "type": "calculated",
            "name": "Custom Booking Date2",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-Scrap'[Booking Date], \" dd mmmm yyyy\")",
            "sortByColumn": "Booking Date"
          },
          {
            "type": "calculated",
            "name": "Join Output",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " 'Fact-Scrap'[Cell]& 'Fact-Scrap'[Item] & 'Fact-Scrap'[Op Step Num Text] & 'Fact-Scrap'[Booking Date]"
          },
          {
            "name": "So Qty",
            "dataType": "double",
            "sourceColumn": "SO_QTY"
          },
          {
            "name": "Custom Booking Date3",
            "dataType": "dateTime",
            "sourceColumn": "BOOKING_DATE - Copy",
            "formatString": "dddd, d MMMM, yyyy",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"16393\" Group=\"LongDate\" FormatString=\"dddd, d MMMM, yyyy\" /></DateTimes></Format>"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_FACT_SCRAP = Source{[Schema=\"dbo\",Item=\"TGT_FACT_SCRAP\"]}[Data],",
                "    #\"Duplicated Column\" = Table.DuplicateColumn(dbo_TGT_FACT_SCRAP, \"BOOKING_DATE\", \"BOOKING_DATE - Copy\")",
                "in",
                "    #\"Duplicated Column\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Measure",
            "expression": "sum('Fact-Scrap'[Scrap Qty]) / (sum('Fact-Scrap'[Scrap Qty]) + sum('Fact-Scrap'[Scrap Qty]))"
          },
          {
            "name": "Scrap Percent",
            "expression": "sum('Fact-Scrap'[Scrap Qty]) / (sum('Fact-Output'[SO Qty]) + sum('Fact-Scrap'[Scrap Qty]))",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "COGM Percent",
            "expression": "sum('Fact-Scrap'[Scrap Value])/SUM('Fact-Absorb Calc'[Total COGM Sum])",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "ScrapLastDate",
            "expression": [
              " ",
              "var lastdatecalc = LASTDATE('Fact-Scrap'[Booking Date])",
              "return",
              "CALCULATE(MAX('Fact-Scrap'[Custom Booking Date2]),'Fact-Scrap'[Booking Date]=lastdatecalc)"
            ]
          },
          {
            "name": "ScrapFirstDate",
            "expression": [
              " ",
              "var firstdatecalc= FIRSTDATE('Fact-Scrap'[Booking Date])",
              "return",
              "CALCULATE(MIN('Fact-Scrap'[Custom Booking Date2]),'Fact-Scrap'[Booking Date]=firstdatecalc)"
            ]
          },
          {
            "name": "Sum of Scrap Qty",
            "expression": "SUM('Fact-Scrap'[Scrap Qty])"
          },
          {
            "name": "Scrap qty Not null",
            "expression": "if([Sum of Scrap Qty]=BLANK(),0,[Sum of Scrap Qty])"
          },
          {
            "name": "Scrap value total",
            "expression": "sum('Fact-Scrap'[Scrap Value])"
          }
        ]
      },
      {
        "name": "Fact-Output Calc",
        "columns": [
          {
            "name": "Cell",
            "dataType": "string",
            "sourceColumn": "CELL"
          },
          {
            "name": "Family",
            "dataType": "string",
            "sourceColumn": "FAMILY"
          },
          {
            "name": "BU Mat Num",
            "dataType": "string",
            "sourceColumn": "BU_MAT_NUM",
            "sortByColumn": "SORT_ORDER"
          },
          {
            "name": "Item",
            "dataType": "string",
            "sourceColumn": "ITEM"
          },
          {
            "name": "Department",
            "dataType": "string",
            "sourceColumn": "DEPARTMENT"
          },
          {
            "name": "Op Step Desc",
            "dataType": "string",
            "sourceColumn": "OP_STEP_DESC"
          },
          {
            "name": "Op Step Seq Num",
            "dataType": "int64",
            "sourceColumn": "OP_STEP_SEQ_NUM"
          },
          {
            "name": "Target",
            "dataType": "double",
            "sourceColumn": "TARGET"
          },
          {
            "name": "EXCL",
            "dataType": "string",
            "sourceColumn": "EXCL"
          },
          {
            "name": "Actual",
            "dataType": "int64",
            "sourceColumn": "ACTUAL"
          },
          {
            "name": "Tgt MTD",
            "dataType": "int64",
            "sourceColumn": "TGT_MTD"
          },
          {
            "name": "MTD",
            "dataType": "int64",
            "sourceColumn": "MTD"
          },
          {
            "name": "PER",
            "dataType": "int64",
            "sourceColumn": "PER"
          },
          {
            "name": "SPMA",
            "dataType": "int64",
            "sourceColumn": "SPMA"
          },
          {
            "name": "Daily",
            "dataType": "int64",
            "sourceColumn": "DAILY"
          },
          {
            "name": "Avg",
            "dataType": "int64",
            "sourceColumn": "AVG"
          },
          {
            "name": "SPMA Filt",
            "dataType": "string",
            "sourceColumn": "SPMA_FILT"
          },
          {
            "name": "Active",
            "dataType": "string",
            "sourceColumn": "ACTIVE"
          },
          {
            "name": "Days",
            "dataType": "string",
            "sourceColumn": "DAYS"
          },
          {
            "name": "Year",
            "dataType": "int64",
            "sourceColumn": "YEAR"
          },
          {
            "name": "Month",
            "dataType": "string",
            "sourceColumn": "MONTH"
          },
          {
            "name": "Month Name",
            "dataType": "string",
            "sourceColumn": "MONTH_NAME"
          },
          {
            "name": "Datestamp",
            "dataType": "dateTime",
            "sourceColumn": "DATESTAMP"
          },
          {
            "type": "calculated",
            "name": "Custom DateStamp",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-Output Calc'[Datestamp],\"dd-Mmm-yyyy\")"
          },
          {
            "name": "Plant Id",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          },
          {
            "name": "SORT_ORDER",
            "dataType": "int64",
            "sourceColumn": "SORT_ORDER"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_AGG_OUTPUT = Source{[Schema=\"dbo\",Item=\"TGT_AGG_OUTPUT\"]}[Data]",
                "in",
                "    dbo_TGT_AGG_OUTPUT"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Delta",
            "expression": " sum('Fact-Output Calc'[Target]) - sum('Fact-Output Calc'[Actual]) "
          },
          {
            "name": "SPMA %",
            "expression": [
              " if(sum('Fact-Output Calc'[Tgt MTD]) = 0 && sum('Fact-Output Calc'[MTD]) > 0, 100,(sum('Fact-Output Calc'[SPMA]) / count('Fact-Output Calc'[SPMA]) * 100))",
              ""
            ],
            "formatString": "0"
          },
          {
            "name": "SPA %",
            "expression": " if(sum('Fact-Output Calc'[Tgt MTD]) = 0 && sum('Fact-Output Calc'[MTD]) > 0, 100, (sum('Fact-Output Calc'[MTD]) / sum('Fact-Output Calc'[Tgt MTD]) * 100))",
            "formatString": "0"
          },
          {
            "name": "SPMA Bad ",
            "expression": " count('Fact-Output Calc'[SPMA]) - sum('Fact-Output Calc'[SPMA])"
          },
          {
            "name": "Delta MTD",
            "expression": " sum('Fact-Output Calc'[MTD]) - sum('Fact-Output Calc'[Tgt MTD])"
          },
          {
            "name": "Delta ME ",
            "expression": [
              " sum('Fact-Output Calc'[MTD]) - sum('Fact-Output Calc'[Target])",
              ""
            ]
          },
          {
            "name": "Daily Delta ",
            "expression": " sum('Fact-Output Calc'[Avg]) - sum('Fact-Output Calc'[Daily])",
            "formatString": "0"
          }
        ]
      },
      {
        "name": "Fact-Productive Trial",
        "columns": [
          {
            "name": "Core",
            "dataType": "string",
            "sourceColumn": "CORE"
          },
          {
            "name": "Count Big",
            "dataType": "int64",
            "sourceColumn": "COUNT_BIG"
          },
          {
            "name": "Prod Week Start Date",
            "dataType": "dateTime",
            "sourceColumn": "PROD_WEEK_START_DATE"
          },
          {
            "name": "Prod Year",
            "dataType": "int64",
            "sourceColumn": "PROD_YEAR"
          },
          {
            "name": "Prod Month",
            "dataType": "string",
            "sourceColumn": "PROD_MONTH"
          },
          {
            "name": "Prod Week",
            "dataType": "int64",
            "sourceColumn": "PROD_WEEK"
          },
          {
            "name": "Earned Hours Total",
            "dataType": "double",
            "sourceColumn": "EARNED_HOURS_TOTAL"
          },
          {
            "name": "SO Qty Total",
            "dataType": "double",
            "sourceColumn": "SO_QTY_TOTAL"
          },
          {
            "name": "Actual Hours Total",
            "dataType": "double",
            "sourceColumn": "ACTUAL_HOURS_TOTAL"
          },
          {
            "name": "Week Start Date",
            "dataType": "dateTime",
            "sourceColumn": "WEEK_START_DATE"
          },
          {
            "name": "Year",
            "dataType": "int64",
            "sourceColumn": "YEAR"
          },
          {
            "name": "Month",
            "dataType": "string",
            "sourceColumn": "MONTH"
          },
          {
            "name": "Week",
            "dataType": "int64",
            "sourceColumn": "WEEK"
          },
          {
            "name": "Core Num",
            "dataType": "string",
            "sourceColumn": "CORE_NUM"
          },
          {
            "name": "Operator",
            "dataType": "string",
            "sourceColumn": "OPERATOR"
          },
          {
            "name": "PTL",
            "dataType": "string",
            "sourceColumn": "PTL"
          },
          {
            "name": "PTL Shift",
            "dataType": "string",
            "sourceColumn": "PTL_SHIFT"
          },
          {
            "name": "Area",
            "dataType": "string",
            "sourceColumn": "AREA"
          },
          {
            "name": "Business Unit",
            "dataType": "string",
            "sourceColumn": "BUSINESS_UNIT"
          },
          {
            "name": "Total Raw Hours",
            "dataType": "double",
            "sourceColumn": "TOTAL_RAW_HOURS"
          },
          {
            "name": "Actual Hours",
            "dataType": "double",
            "sourceColumn": "ACTUAL_HOURS"
          },
          {
            "name": "Core Year",
            "dataType": "int64",
            "sourceColumn": "CORE_YEAR"
          },
          {
            "name": "Core Month",
            "dataType": "string",
            "sourceColumn": "CORE_MONTH"
          },
          {
            "name": "Basic Hours",
            "dataType": "double",
            "sourceColumn": "BASIC_HOURS"
          },
          {
            "name": "OT Hours",
            "dataType": "double",
            "sourceColumn": "OT_HOURS"
          },
          {
            "name": "TWU Hours",
            "dataType": "double",
            "sourceColumn": "TWU_HOURS"
          },
          {
            "name": "Productivity Calc",
            "dataType": "string",
            "sourceColumn": "PRODUCTIVITY_CALC"
          },
          {
            "name": "Productive Hours",
            "dataType": "double",
            "sourceColumn": "PRODUCTIVE_HOURS"
          },
          {
            "name": "Relief Hours",
            "dataType": "double",
            "sourceColumn": "RELIEF_HOURS"
          },
          {
            "name": "Non Relief Hours",
            "dataType": "double",
            "sourceColumn": "NON_RELIEF_HOURS"
          },
          {
            "name": "Raw Productivity",
            "dataType": "double",
            "sourceColumn": "RAW_PRODUCTIVITY"
          },
          {
            "name": "Productivity",
            "dataType": "double",
            "sourceColumn": "PRODUCTIVITY"
          },
          {
            "name": "Productivity Per",
            "dataType": "double",
            "sourceColumn": "PRODUCTIVITY_PER"
          },
          {
            "type": "calculated",
            "name": "Custom Week Start Date",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-Productive Trial'[Week Start Date],\"dd-Mmm-yyyy\")"
          },
          {
            "name": "Plant Id",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          },
          {
            "name": "EMPLOYEE_ID",
            "dataType": "int64",
            "sourceColumn": "EMPLOYEE_ID"
          },
          {
            "name": "CDEPT",
            "dataType": "double",
            "sourceColumn": "CDEPT"
          },
          {
            "name": "CORE_WEEK_START_DATE",
            "dataType": "dateTime",
            "sourceColumn": "CORE_WEEK_START_DATE"
          },
          {
            "name": "RAW_PRODUCTIVITY_PER",
            "dataType": "double",
            "sourceColumn": "RAW_PRODUCTIVITY_PER"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_FACT_PRODUCTIVE_TRIAL = Source{[Schema=\"dbo\",Item=\"TGT_FACT_PRODUCTIVE_TRIAL\"]}[Data]",
                "in",
                "    dbo_TGT_FACT_PRODUCTIVE_TRIAL"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "MAvg",
            "expression": "(sum('Fact-Productive Trial'[Earned Hours Total]) / sum('Fact-Productive Trial'[Actual Hours]) * 100)"
          },
          {
            "name": "Sum of Relief Hours divided by Sum of Actual Hours Total",
            "expression": [
              " ",
              "DIVIDE(",
              "    SUM('Fact-Productive Trial'[Relief Hours]),",
              "    SUM('Fact-Productive Trial'[Actual Hours Total])",
              ")"
            ]
          },
          {
            "name": "Relief MAvg",
            "expression": "((sum('Fact-Productive Trial'[Earned Hours Total]) - (SUM('Fact-Productive Trial'[Relief Hours])))/ sum('Fact-Productive Trial'[Actual Hours]) )* 100"
          }
        ]
      },
      {
        "name": "Fact-Productive",
        "columns": [
          {
            "name": "Core",
            "dataType": "string",
            "sourceColumn": "CORE"
          },
          {
            "name": "Count Big",
            "dataType": "int64",
            "sourceColumn": "COUNT_BIG"
          },
          {
            "name": "Prod Week Start Date",
            "dataType": "dateTime",
            "sourceColumn": "PROD_WEEK_START_DATE"
          },
          {
            "name": "Prod Year",
            "dataType": "int64",
            "sourceColumn": "PROD_YEAR"
          },
          {
            "name": "Prod Month",
            "dataType": "string",
            "sourceColumn": "PROD_MONTH"
          },
          {
            "name": "Prod Week",
            "dataType": "int64",
            "sourceColumn": "PROD_WEEK"
          },
          {
            "name": "Prod Day",
            "dataType": "string",
            "sourceColumn": "PROD_DAY"
          },
          {
            "name": "Op Date",
            "dataType": "dateTime",
            "sourceColumn": "OP_DATE"
          },
          {
            "name": "Earned Hours Total",
            "dataType": "double",
            "sourceColumn": "EARNED_HOURS_TOTAL"
          },
          {
            "name": "SO Qty Total",
            "dataType": "double",
            "sourceColumn": "SO_QTY_TOTAL"
          },
          {
            "name": "Actual Hours Total",
            "dataType": "double",
            "sourceColumn": "ACTUAL_HOURS_TOTAL"
          },
          {
            "name": "Week Start Date",
            "dataType": "dateTime",
            "sourceColumn": "WEEK_START_DATE"
          },
          {
            "name": "Year",
            "dataType": "int64",
            "sourceColumn": "YEAR"
          },
          {
            "name": "Month",
            "dataType": "string",
            "sourceColumn": "MONTH"
          },
          {
            "name": "Week",
            "dataType": "int64",
            "sourceColumn": "WEEK"
          },
          {
            "name": "Day",
            "dataType": "string",
            "sourceColumn": "DAY"
          },
          {
            "name": "Core Num",
            "dataType": "string",
            "sourceColumn": "CORE_NUM"
          },
          {
            "name": "Operator",
            "dataType": "string",
            "sourceColumn": "OPERATOR"
          },
          {
            "name": "PTL",
            "dataType": "string",
            "sourceColumn": "PTL"
          },
          {
            "name": "PTL Shift",
            "dataType": "string",
            "sourceColumn": "PTL_SHIFT"
          },
          {
            "name": "Area",
            "dataType": "string",
            "sourceColumn": "AREA"
          },
          {
            "name": "Business Unit",
            "dataType": "string",
            "sourceColumn": "BUSINESS_UNIT"
          },
          {
            "name": "Total Raw Hours",
            "dataType": "double",
            "sourceColumn": "TOTAL_RAW_HOURS"
          },
          {
            "name": "Actual hours",
            "dataType": "double",
            "sourceColumn": "ACTUAL_HOURS"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "DATE",
            "formatString": "dd-MM-yyyy",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"16393\" Group=\"ShortDate\" FormatString=\"dd-MM-yyyy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "Core Year",
            "dataType": "int64",
            "sourceColumn": "CORE_YEAR"
          },
          {
            "name": "Core Month",
            "dataType": "string",
            "sourceColumn": "CORE_MONTH"
          },
          {
            "name": "Core Day",
            "dataType": "string",
            "sourceColumn": "CORE_DAY"
          },
          {
            "name": "Basic hours",
            "dataType": "double",
            "sourceColumn": "BASIC_HOURS"
          },
          {
            "name": "Ot Hours",
            "dataType": "double",
            "sourceColumn": "OT_HOURS"
          },
          {
            "name": "TWU Hours",
            "dataType": "double",
            "sourceColumn": "TWU_HOURS"
          },
          {
            "name": "Productivity Calc",
            "dataType": "string",
            "sourceColumn": "PRODUCTIVITY_CALC"
          },
          {
            "name": "Relief Hours",
            "dataType": "double",
            "sourceColumn": "RELIEF_HOURS"
          },
          {
            "name": "Non Relief Hours",
            "dataType": "double",
            "sourceColumn": "NON_RELIEF_HOURS"
          },
          {
            "name": "Raw Productivity",
            "dataType": "double",
            "sourceColumn": "RAW_PRODUCTIVITY"
          },
          {
            "name": "Raw Productivity Per",
            "dataType": "double",
            "sourceColumn": "RAW_PRODUCTIVITY_PER"
          },
          {
            "name": "Productivity",
            "dataType": "double",
            "sourceColumn": "PRODUCTIVITY"
          },
          {
            "name": "Productivity Per",
            "dataType": "double",
            "sourceColumn": "PRODUCTIVITY_PER"
          },
          {
            "type": "calculated",
            "name": "Custom Week Start Date",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-Productive'[Week Start Date],\"dd-Mmm-yyyy\")"
          },
          {
            "name": "Plant Id",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          },
          {
            "name": "EMPLOYEE_ID",
            "dataType": "int64",
            "sourceColumn": "EMPLOYEE_ID"
          },
          {
            "name": "CDEPT",
            "dataType": "int64",
            "sourceColumn": "CDEPT"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_FACT_PRODUCTIVE = Source{[Schema=\"dbo\",Item=\"TGT_FACT_PRODUCTIVE\"]}[Data]",
                "in",
                "    dbo_TGT_FACT_PRODUCTIVE"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Avg Hours",
            "expression": " (sum('Fact-Productive'[Earned Hours Total]) / sum('Fact-Productive'[Actual hours]) * 100)"
          }
        ]
      },
      {
        "name": "Fact-Core",
        "columns": [
          {
            "name": "Core Num",
            "dataType": "string",
            "sourceColumn": "CORE_NUM"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "DATE",
            "formatString": "dd-MM-yyyy",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"16393\" Group=\"ShortDate\" FormatString=\"dd-MM-yyyy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "Core Week Start Date",
            "dataType": "dateTime",
            "sourceColumn": "CORE_WEEK_START_DATE"
          },
          {
            "name": "Core Week",
            "dataType": "int64",
            "sourceColumn": "CORE_WEEK"
          },
          {
            "name": "Business Unit",
            "dataType": "string",
            "sourceColumn": "BUSINESS_UNIT"
          },
          {
            "name": "Operator",
            "dataType": "string",
            "sourceColumn": "OPERATOR"
          },
          {
            "name": "PTL",
            "dataType": "string",
            "sourceColumn": "PTL"
          },
          {
            "name": "PTL Shift",
            "dataType": "string",
            "sourceColumn": "PTL_SHIFT"
          },
          {
            "name": "Hours",
            "dataType": "double",
            "sourceColumn": "HOURS"
          },
          {
            "name": "Productivity Calc",
            "dataType": "int64",
            "sourceColumn": "PRODUCTIVITY_CALC"
          },
          {
            "name": "Category",
            "dataType": "string",
            "sourceColumn": "CATEGORY"
          },
          {
            "name": "Type",
            "dataType": "string",
            "sourceColumn": "TYPE"
          },
          {
            "type": "calculated",
            "name": "Custom Week Start Date",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-Core'[Core Week Start Date],\"dd-Mmm-yyyy\")"
          },
          {
            "name": "Plant Id",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          },
          {
            "name": "EMPLOYEE_ID",
            "dataType": "int64",
            "sourceColumn": "EMPLOYEE_ID"
          },
          {
            "name": "COST_CENTER_NAME",
            "dataType": "string",
            "sourceColumn": "COST_CENTER_NAME"
          },
          {
            "name": "CORE_DESCRIPTION",
            "dataType": "string",
            "sourceColumn": "CORE_DESCRIPTION"
          },
          {
            "name": "C6DTMP",
            "dataType": "int64",
            "sourceColumn": "C6DTMP"
          },
          {
            "name": "DEPT_NO",
            "dataType": "int64",
            "sourceColumn": "DEPT_NO"
          },
          {
            "type": "calculated",
            "name": "Join Output",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "'Fact-Core'[Core Num] & 'Fact-Core'[Core Week Start Date]"
          },
          {
            "type": "calculated",
            "name": "Custom Date",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-Core'[Date],\"mm/dd/yyyy\")",
            "sortByColumn": "Date"
          },
          {
            "name": "AREA",
            "dataType": "string",
            "sourceColumn": "AREA"
          },
          {
            "name": "CELL",
            "dataType": "string",
            "sourceColumn": "CELL"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_FACT_CORE = Source{[Schema=\"dbo\",Item=\"TGT_FACT_CORE\"]}[Data]",
                "in",
                "    dbo_TGT_FACT_CORE"
              ]
            }
          }
        ]
      },
      {
        "name": "Dim-Scrap Reasons",
        "columns": [
          {
            "name": "Reason Code",
            "dataType": "string",
            "sourceColumn": "REASON_CODE"
          },
          {
            "name": "Category",
            "dataType": "string",
            "sourceColumn": "CATEGORY"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_DIM_SCRAP_REASONS = Source{[Schema=\"dbo\",Item=\"TGT_DIM_SCRAP_REASONS\"]}[Data]",
                "in",
                "    dbo_TGT_DIM_SCRAP_REASONS"
              ]
            }
          }
        ]
      },
      {
        "name": "Fact-Output",
        "columns": [
          {
            "name": "Shop Order",
            "dataType": "string",
            "sourceColumn": "SHOP_ORDER"
          },
          {
            "name": "Op Step Num",
            "dataType": "int64",
            "sourceColumn": "OP_STEP_NUM"
          },
          {
            "name": "Op Step Num Text",
            "dataType": "double",
            "sourceColumn": "OP_STEP_NUM_TEXT"
          },
          {
            "name": "Item",
            "dataType": "string",
            "sourceColumn": "ITEM"
          },
          {
            "name": "SO Qty",
            "dataType": "double",
            "sourceColumn": "SO_QTY",
            "formatString": "0"
          },
          {
            "name": "Core Num",
            "dataType": "string",
            "sourceColumn": "CORE_NUM"
          },
          {
            "name": "Operator",
            "dataType": "string",
            "sourceColumn": "OPERATOR"
          },
          {
            "name": "PTL",
            "dataType": "string",
            "sourceColumn": "PTL"
          },
          {
            "name": "PTL Shift",
            "dataType": "string",
            "sourceColumn": "PTL_SHIFT"
          },
          {
            "name": "Raw Date",
            "dataType": "double",
            "sourceColumn": "RAW_DATE"
          },
          {
            "name": "Raw Time",
            "dataType": "double",
            "sourceColumn": "RAW_TIME"
          },
          {
            "name": "Op Date Time",
            "dataType": "dateTime",
            "sourceColumn": "OP_DATE_TIME",
            "formatString": "General Date"
          },
          {
            "name": "Op Date",
            "dataType": "dateTime",
            "sourceColumn": "OP_DATE",
            "formatString": "dd-MM-yyyy",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"16393\" Group=\"ShortDate\" FormatString=\"dd-MM-yyyy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "Op Time",
            "dataType": "dateTime",
            "sourceColumn": "OP_TIME",
            "formatString": "HH:mm:ss",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"16393\" Group=\"LongTime\" FormatString=\"HH:mm:ss\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "Prod Date Time",
            "dataType": "dateTime",
            "sourceColumn": "PROD_DATE_TIME"
          },
          {
            "name": "Year",
            "dataType": "int64",
            "sourceColumn": "YEAR"
          },
          {
            "name": "Day",
            "dataType": "string",
            "sourceColumn": "DAY"
          },
          {
            "name": "Week",
            "dataType": "int64",
            "sourceColumn": "WEEK"
          },
          {
            "name": "Prod Year",
            "dataType": "int64",
            "sourceColumn": "PROD_YEAR"
          },
          {
            "name": "Prod Month",
            "dataType": "int64",
            "sourceColumn": "PROD_MONTH"
          },
          {
            "name": "Prod Day",
            "dataType": "string",
            "sourceColumn": "PROD_DAY"
          },
          {
            "name": "Prod Week",
            "dataType": "int64",
            "sourceColumn": "PROD_WEEK"
          },
          {
            "name": "Week Start Date",
            "dataType": "dateTime",
            "sourceColumn": "WEEK_START_DATE"
          },
          {
            "name": "Prod Week Start Date",
            "dataType": "dateTime",
            "sourceColumn": "PROD_WEEK_START_DATE"
          },
          {
            "name": "Weekend",
            "dataType": "string",
            "sourceColumn": "WEEKEND"
          },
          {
            "name": "Shift",
            "dataType": "string",
            "sourceColumn": "SHIFT"
          },
          {
            "name": "Scrap Qty",
            "dataType": "double",
            "sourceColumn": "SCRAP_QTY"
          },
          {
            "name": "Department no",
            "dataType": "double",
            "sourceColumn": "DEPARTMENT_NUM"
          },
          {
            "name": "Rework",
            "dataType": "string",
            "sourceColumn": "REWORK"
          },
          {
            "name": "Scrap",
            "dataType": "string",
            "sourceColumn": "SCRAP"
          },
          {
            "name": "Reason Code",
            "dataType": "string",
            "sourceColumn": "REASON_CODE"
          },
          {
            "name": "RFT Desc",
            "dataType": "string",
            "sourceColumn": "RFT_DESC"
          },
          {
            "name": "RFT Location",
            "dataType": "string",
            "sourceColumn": "RFT_LOCATION"
          },
          {
            "name": "RFT Type",
            "dataType": "string",
            "sourceColumn": "RFT_TYPE"
          },
          {
            "name": "Labors Hrs",
            "dataType": "double",
            "sourceColumn": "LABOR_HRS"
          },
          {
            "name": "Earned Hours",
            "dataType": "double",
            "sourceColumn": "EARNED_HOURS",
            "formatString": "0.0"
          },
          {
            "name": "Work Center Num",
            "dataType": "int64",
            "sourceColumn": "WORK_CENTER_NUM"
          },
          {
            "name": "Department",
            "dataType": "string",
            "sourceColumn": "DEPARTMENT"
          },
          {
            "name": "Cell",
            "dataType": "string",
            "sourceColumn": "CELL"
          },
          {
            "name": "BU Mat Num",
            "dataType": "string",
            "sourceColumn": "BU_MAT_NUM",
            "sortByColumn": "SORT_ORDER"
          },
          {
            "name": "Item Family",
            "dataType": "string",
            "sourceColumn": "ITEM_FAMILY"
          },
          {
            "name": "Item Description",
            "dataType": "string",
            "sourceColumn": "ITEM_DESCRIPTION"
          },
          {
            "name": "Op Step Desc",
            "dataType": "string",
            "sourceColumn": "OP_STEP_DESC"
          },
          {
            "name": "OpStep Desc 2",
            "dataType": "string",
            "sourceColumn": "OP_STEP_DESC_2"
          },
          {
            "name": "Op Step Seq Num",
            "dataType": "int64",
            "sourceColumn": "OP_STEP_SEQ_NUM"
          },
          {
            "name": "Plant Id",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          },
          {
            "name": "EMPLOYEE_ID",
            "dataType": "int64",
            "sourceColumn": "EMPLOYEE_ID"
          },
          {
            "type": "calculated",
            "name": "Join Scrap",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " 'Fact-Output'[Cell] & 'Fact-Output'[Item] & 'Fact-Output'[Op Step Num Text] & 'Fact-Output'[Op Date]"
          },
          {
            "type": "calculated",
            "name": "Join Core",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " 'Fact-Output'[Core Num] & 'Fact-Output'[Prod Week Start Date]"
          },
          {
            "type": "calculated",
            "name": "SO Qty Separated",
            "dataType": "int64",
            "isDataTypeInferred": false,
            "expression": "FORMAT('Fact-Output'[SO Qty], \"#,0\")",
            "formatString": "0"
          },
          {
            "type": "calculated",
            "name": "Custom Op Date",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-Output'[Op Date], \"dd mmm yyyy\")",
            "sortByColumn": "Op Date"
          },
          {
            "name": "Original Shop Order",
            "dataType": "int64",
            "sourceColumn": "ORIGINAL_SHOP_ORDER",
            "formatString": "0"
          },
          {
            "name": "SPLIT_ORDER_REF_NUM",
            "dataType": "int64",
            "sourceColumn": "SPLIT_ORDER_REF_NUM"
          },
          {
            "type": "calculated",
            "name": "ValueExcl",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " if('Fact-Output'[SPLIT_ORDER_REF_NUM] > 'Fact-Output'[Op Step Num], \"Excl\", \"Incl\")"
          },
          {
            "type": "calculated",
            "name": "ReworkColumn",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " if('Fact-Output'[Original Shop Order] == 0 || ISBLANK('Fact-Output'[Original Shop Order]), \"Excl\", \"Incl\")"
          },
          {
            "name": "SORT_ORDER",
            "dataType": "int64",
            "sourceColumn": "SORT_ORDER"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_FACT_OUTPUT = Source{[Schema=\"dbo\",Item=\"TGT_FACT_OUTPUT\"]}[Data]",
                "in",
                "    dbo_TGT_FACT_OUTPUT"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Count",
            "expression": "CALCULATE(COUNT('Fact-Output'[Op Date]),MONTH('Fact-Output'[Op Date])=MONTH(NOW()),YEAR('Fact-Output'[Op Date])=YEAR(NOW()))"
          }
        ]
      },
      {
        "name": "Dim-Scrap Codes",
        "columns": [
          {
            "name": "Code",
            "dataType": "string",
            "sourceColumn": "CODE"
          },
          {
            "name": "Location",
            "dataType": "string",
            "sourceColumn": "LOCATION"
          },
          {
            "name": "Description",
            "dataType": "string",
            "sourceColumn": "DESCRIPTION"
          },
          {
            "name": "SCRAP_TYPE",
            "dataType": "string",
            "sourceColumn": "SCRAP_TYPE",
            "dataCategory": "Address"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_DIM_SCRAP_CODES = Source{[Schema=\"dbo\",Item=\"TGT_DIM_SCRAP_CODES\"]}[Data]",
                "in",
                "    dbo_TGT_DIM_SCRAP_CODES"
              ]
            }
          }
        ]
      },
      {
        "name": "Fact-Arch Scrap Calc",
        "columns": [
          {
            "name": "Cell",
            "dataType": "string",
            "sourceColumn": "CELL"
          },
          {
            "name": "Scrap Value",
            "dataType": "double",
            "sourceColumn": "SCRAP_VALUE"
          },
          {
            "name": "Scrap Adjust",
            "dataType": "double",
            "sourceColumn": "SCRAP_ADJUST"
          },
          {
            "name": "Adjusted Scrap",
            "dataType": "double",
            "sourceColumn": "ADJUSTED_SCRAP"
          },
          {
            "name": "Inventory Transactions",
            "dataType": "double",
            "sourceColumn": "INVENTORY_TRANSACTIONS"
          },
          {
            "name": "Actual",
            "dataType": "double",
            "sourceColumn": "ACTUAL",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Scrap Budget",
            "dataType": "double",
            "sourceColumn": "SCRAP_BUDGET",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Budget Px Percent",
            "dataType": "double",
            "sourceColumn": "BUDGET_PX_PERCENT"
          },
          {
            "name": "Prod MTD",
            "dataType": "double",
            "sourceColumn": "PROD_MTD"
          },
          {
            "name": "Prod Adjust",
            "dataType": "double",
            "sourceColumn": "PROD_ADJUST"
          },
          {
            "name": "Adjusted Prod MTD",
            "dataType": "double",
            "sourceColumn": "ADJUSTED_PROD_MTD"
          },
          {
            "name": "Var PX",
            "dataType": "double",
            "sourceColumn": "VAR_PX"
          },
          {
            "name": "Budget Percent",
            "dataType": "double",
            "sourceColumn": "BUDGET_PERCENT"
          },
          {
            "name": "Year",
            "dataType": "int64",
            "sourceColumn": "YEAR"
          },
          {
            "name": "Month Name",
            "dataType": "string",
            "sourceColumn": "MONTH_NAME"
          },
          {
            "name": "Month",
            "dataType": "int64",
            "sourceColumn": "MONTH"
          },
          {
            "name": "Day",
            "dataType": "double",
            "sourceColumn": "DAY"
          },
          {
            "name": "Active Days",
            "dataType": "double",
            "sourceColumn": "ACTIVE_DAYS"
          },
          {
            "name": "Sort Order",
            "dataType": "int64",
            "sourceColumn": "SORT_ORDER"
          },
          {
            "name": "Plant Id",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          },
          {
            "name": "Archive Time",
            "dataType": "dateTime",
            "sourceColumn": "ARCHIVE_TIME",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "Custom Archive Time",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-Arch Scrap Calc'[Archive Time], \" dd mmmm yyyy\")"
          },
          {
            "type": "calculated",
            "name": "Day finance",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": "'Fact-Arch Scrap Calc'[Day]+1"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_AGG_ARCH_SCRAP = Source{[Schema=\"dbo\",Item=\"TGT_AGG_ARCH_SCRAP\"]}[Data]",
                "in",
                "    dbo_TGT_AGG_ARCH_SCRAP"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Day Before",
            "expression": "sum('Fact-Scrap Calc'[Scrap Value]) - sum('Fact-Arch Scrap Calc'[Scrap Value])"
          },
          {
            "name": "Actual %",
            "expression": " (sum('Fact-Arch Scrap Calc'[Adjusted Scrap]) / sum('Fact-Arch Scrap Calc'[Adjusted Prod MTD]))",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "% Budget",
            "expression": "AVERAGE('Fact-Arch Scrap Calc'[Budget Percent]) / 100 ",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Scrap Delta",
            "expression": "sum('Fact-Arch Scrap Calc'[Scrap Value])-sum('Fact-Arch Scrap Calc'[Scrap Budget])",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Delta Percent",
            "expression": "[Actual %]-[% Budget]",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "ArchScrapLastDate",
            "expression": [
              " ",
              "var lastdatecalc = LASTDATE('Fact-Arch Scrap Calc'[Archive Time])",
              "return",
              "CALCULATE(MAX('Fact-Arch Scrap Calc'[Custom Archive Time]),'Fact-Arch Scrap Calc'[Archive Time]=lastdatecalc)"
            ]
          },
          {
            "name": "ArchScrapFirstDate",
            "expression": [
              " ",
              "var firstdatecalc= FIRSTDATE('Fact-Arch Scrap Calc'[Archive Time])",
              "return",
              "CALCULATE(MIN('Fact-Arch Scrap Calc'[Custom Archive Time]),'Fact-Arch Scrap Calc'[Archive Time]=firstdatecalc)"
            ]
          },
          {
            "name": "FirstMonthNameScrap",
            "expression": [
              " ",
              "var firstmonth = MONTH(FIRSTDATE('Fact-Arch Scrap Calc'[Archive Time]))",
              "return",
              "CALCULATE(MIN('Fact-Arch Scrap Calc'[Month Name]),'Fact-Arch Scrap Calc'[Month]=firstmonth)"
            ]
          },
          {
            "name": "LastMonthNameScrap",
            "expression": [
              " ",
              "var lastmonth = MONTH(LASTDATE('Fact-Arch Scrap Calc'[Archive Time]))",
              "return",
              "CALCULATE(MAX('Fact-Arch Scrap Calc'[Month Name]),'Fact-Arch Scrap Calc'[Month]=lastmonth)"
            ]
          },
          {
            "name": "Arch Budget Variance",
            "expression": [
              "sum('Fact-Arch Scrap Calc'[Scrap Budget]) - (sum('Fact-Arch Scrap Calc'[Adjusted Scrap]) / sum('Fact-Arch Scrap Calc'[Day finance]) * sum('Fact-Arch Scrap Calc'[Active Days]))",
              ""
            ],
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Arch Extrapolated Actual",
            "expression": "(sum('Fact-Arch Scrap Calc'[Adjusted Scrap]) / sum('Fact-Arch Scrap Calc'[Day finance]) * sum('Fact-Arch Scrap Calc'[Active Days]))",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          }
        ]
      },
      {
        "name": "Fact-Scrap Base WIP",
        "columns": [
          {
            "name": "Reason Code Raw",
            "dataType": "string",
            "sourceColumn": "REASON_CODE_RAW"
          },
          {
            "name": "Reason Code Desc",
            "dataType": "string",
            "sourceColumn": "REASON_CODE_DESC"
          },
          {
            "name": "Department Num",
            "dataType": "double",
            "sourceColumn": "DEPARTMENT_NUM"
          },
          {
            "name": "Workcenter",
            "dataType": "double",
            "sourceColumn": "WORKCENTER"
          },
          {
            "name": "Shop Order",
            "dataType": "string",
            "sourceColumn": "SHOP_ORDER"
          },
          {
            "name": "Item",
            "dataType": "string",
            "sourceColumn": "ITEM"
          },
          {
            "name": "Item Desc",
            "dataType": "string",
            "sourceColumn": "ITEM_DESC"
          },
          {
            "name": "Scrap Qty",
            "dataType": "int64",
            "sourceColumn": "SCRAP_QTY"
          },
          {
            "name": "Scrap Value",
            "dataType": "decimal",
            "sourceColumn": "SCRAP_VALUE",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Planner Num",
            "dataType": "double",
            "sourceColumn": "PLANNER_NUM"
          },
          {
            "name": "Item Class",
            "dataType": "string",
            "sourceColumn": "ITEM_CLASS"
          },
          {
            "name": "Instrament",
            "dataType": "string",
            "sourceColumn": "INSTRAMENT"
          },
          {
            "name": "Business Unit",
            "dataType": "string",
            "sourceColumn": "BUSINESS_UNIT"
          },
          {
            "name": "Component",
            "dataType": "string",
            "sourceColumn": "COMPONENT"
          },
          {
            "name": "Op Step Num",
            "dataType": "int64",
            "sourceColumn": "OP_STEP_NUM"
          },
          {
            "name": "Op Step Desc",
            "dataType": "string",
            "sourceColumn": "OP_STEP_DESC"
          },
          {
            "name": "Raw Date",
            "dataType": "double",
            "sourceColumn": "RAW_DATE"
          },
          {
            "name": "Transaction Date",
            "dataType": "dateTime",
            "sourceColumn": "TRANSACTION_DATE",
            "formatString": "dd-MM-yyyy",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"16393\" Group=\"ShortDate\" FormatString=\"dd-MM-yyyy\" /></DateTimes></Format>"
              }
            ]
          },
          {
            "name": "Trace Code",
            "dataType": "string",
            "sourceColumn": "TRACE_CODE"
          },
          {
            "name": "IScrap",
            "dataType": "double",
            "sourceColumn": "ISCRAP"
          },
          {
            "name": "Reason Code",
            "dataType": "string",
            "sourceColumn": "REASON_CODE"
          },
          {
            "name": "Category",
            "dataType": "string",
            "sourceColumn": "CATEGORY"
          },
          {
            "name": "Dept",
            "dataType": "string",
            "sourceColumn": "DEPT"
          },
          {
            "name": "Dept Num",
            "dataType": "double",
            "sourceColumn": "DEPT_NUM"
          },
          {
            "name": "GL BU",
            "dataType": "string",
            "sourceColumn": "GL_BU"
          },
          {
            "name": "Reallocate Dept",
            "dataType": "string",
            "sourceColumn": "REALLOCATE_DEPT"
          },
          {
            "name": "Plant Id",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          },
          {
            "type": "calculated",
            "name": "Join",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "'Fact-Scrap Base WIP'[Shop Order] & 'Fact-Scrap Base WIP'[Reason Code Raw] & 'Fact-Scrap Base WIP'[Scrap Qty]& 'Fact-Scrap Base WIP'[Transaction Date]"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_FACT_SCRAP_BASE_WIP = Source{[Schema=\"dbo\",Item=\"TGT_FACT_SCRAP_BASE_WIP\"]}[Data]",
                "in",
                "    dbo_TGT_FACT_SCRAP_BASE_WIP"
              ]
            }
          }
        ]
      },
      {
        "name": "Fact-Scrap Calc",
        "columns": [
          {
            "name": "Cell",
            "dataType": "string",
            "sourceColumn": "CELL"
          },
          {
            "name": "Scrap Value",
            "dataType": "decimal",
            "sourceColumn": "SCRAP_VALUE",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Scrap Adjust",
            "dataType": "decimal",
            "sourceColumn": "SCRAP_ADJUST",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Adjusted Scrap",
            "dataType": "decimal",
            "sourceColumn": "ADJUSTED_SCRAP",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Inventory Transactions",
            "dataType": "decimal",
            "sourceColumn": "INVENTORY_TRANSACTIONS",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Actual",
            "dataType": "decimal",
            "sourceColumn": "ACTUAL",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Scrap Budget",
            "dataType": "decimal",
            "sourceColumn": "SCRAP_BUDGET",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Budget PX Percent",
            "dataType": "double",
            "sourceColumn": "BUDGET_PX_PERCENT"
          },
          {
            "name": "Prod MTD",
            "dataType": "decimal",
            "sourceColumn": "PROD_MTD",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Prod Adjust",
            "dataType": "decimal",
            "sourceColumn": "PROD_ADJUST",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Adjusted Prod MTD",
            "dataType": "decimal",
            "sourceColumn": "ADJUSTED_PROD_MTD",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Var PX",
            "dataType": "double",
            "sourceColumn": "VAR_PX",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Budget Percent",
            "dataType": "decimal",
            "sourceColumn": "BUDGET_PERCENT",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Year",
            "dataType": "int64",
            "sourceColumn": "YEAR"
          },
          {
            "name": "Month Name",
            "dataType": "string",
            "sourceColumn": "MONTH_NAME"
          },
          {
            "name": "Month",
            "dataType": "int64",
            "sourceColumn": "MONTH"
          },
          {
            "name": "Day",
            "dataType": "double",
            "sourceColumn": "DAY"
          },
          {
            "name": "Active Days",
            "dataType": "double",
            "sourceColumn": "ACTIVE_DAYS"
          },
          {
            "name": "Sort Order",
            "dataType": "int64",
            "sourceColumn": "SORT_ORDER"
          },
          {
            "name": "Plant Id",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          },
          {
            "type": "calculated",
            "name": "Day Finance",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": "'Fact-Scrap Calc'[Day]+1"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_AGG_SCRAP = Source{[Schema=\"dbo\",Item=\"TGT_AGG_SCRAP\"]}[Data]",
                "in",
                "    dbo_TGT_AGG_SCRAP"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Percent Budget",
            "expression": "AVERAGE('Fact-Scrap Calc'[Budget Percent]) / 100",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Percent Budget PX",
            "expression": "AVERAGE('Fact-Arch Scrap Calc'[Budget Px Percent]) / 100",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Actual Percent",
            "expression": "(sum('Fact-Scrap Calc'[Actual]) / sum('Fact-Scrap Calc'[Adjusted Prod MTD]))",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Bud Var",
            "expression": "(sum('Fact-Scrap Calc'[Adjusted Scrap]) / sum('Fact-Scrap Calc'[Day Finance]) * sum('Fact-Scrap Calc'[Active Days])) - sum('Fact-Scrap Calc'[Var PX])",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Budget Var Percent",
            "expression": "((((AVERAGE('Fact-Scrap Calc'[Adjusted Scrap]) / AVERAGE('Fact-Scrap Calc'[Adjusted Prod MTD])) * 100 ) - AVERAGE('Fact-Scrap Calc'[Budget Percent])) / 100)",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Budget Variance",
            "expression": [
              "sum('Fact-Scrap Calc'[Scrap Budget]) - (sum('Fact-Scrap Calc'[Adjusted Scrap]) / sum('Fact-Scrap Calc'[Day Finance]) * sum('Fact-Scrap Calc'[Active Days]))",
              ""
            ],
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Extrapolated Actual",
            "expression": "(sum('Fact-Scrap Calc'[Adjusted Scrap]) / sum('Fact-Scrap Calc'[Day Finance]) * sum('Fact-Scrap Calc'[Active Days]))",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Var Percent",
            "expression": "((((AVERAGE('Fact-Scrap Calc'[Actual]) / AVERAGE('Fact-Scrap Calc'[Adjusted Prod MTD])) * 100 ) - AVERAGE('Fact-Scrap Calc'[Budget PX Percent])) / 100)",
            "formatString": "0.00%;-0.00%;0.00%"
          }
        ]
      },
      {
        "name": "Fact-FTPC DHR",
        "columns": [
          {
            "name": "SONO",
            "dataType": "string",
            "sourceColumn": "SONO"
          },
          {
            "name": "PARTTYPE",
            "dataType": "string",
            "sourceColumn": "PARTTYPE"
          },
          {
            "name": "CITC",
            "dataType": "string",
            "sourceColumn": "CITC"
          },
          {
            "name": "WTC",
            "dataType": "string",
            "sourceColumn": "WTC"
          },
          {
            "name": "WKPIECEID",
            "dataType": "string",
            "sourceColumn": "WKPIECEID"
          },
          {
            "name": "LASER",
            "dataType": "string",
            "sourceColumn": "LASER"
          },
          {
            "name": "STEP",
            "dataType": "string",
            "sourceColumn": "STEP"
          },
          {
            "name": "STEPNR",
            "dataType": "double",
            "sourceColumn": "STEPNR"
          },
          {
            "name": "MACNO",
            "dataType": "string",
            "sourceColumn": "MACNO"
          },
          {
            "name": "PALLETID",
            "dataType": "double",
            "sourceColumn": "PALLETID"
          },
          {
            "name": "PASS",
            "dataType": "double",
            "sourceColumn": "PASS"
          },
          {
            "name": "SIGN",
            "dataType": "string",
            "sourceColumn": "SIGN"
          },
          {
            "name": "ERROR",
            "dataType": "double",
            "sourceColumn": "ERROR"
          },
          {
            "name": "DOUBT",
            "dataType": "double",
            "sourceColumn": "DOUBT"
          },
          {
            "name": "QTY",
            "dataType": "double",
            "sourceColumn": "QTY"
          },
          {
            "name": "RWK",
            "dataType": "double",
            "sourceColumn": "RWK"
          },
          {
            "name": "OSONO",
            "dataType": "string",
            "sourceColumn": "OSONO"
          },
          {
            "name": "PCITC",
            "dataType": "string",
            "sourceColumn": "PCITC"
          },
          {
            "name": "DHRID",
            "dataType": "double",
            "sourceColumn": "DHRID"
          },
          {
            "name": "SOP",
            "dataType": "string",
            "sourceColumn": "SOP"
          },
          {
            "name": "BASKETRUN",
            "dataType": "double",
            "sourceColumn": "BASKETRUN"
          },
          {
            "name": "WKC",
            "dataType": "string",
            "sourceColumn": "WKC"
          },
          {
            "name": "DTSTAMP",
            "dataType": "dateTime",
            "sourceColumn": "DTSTAMP"
          },
          {
            "name": "PLANT_ID",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_FACT_FTPC_DHR = Source{[Schema=\"dbo\",Item=\"TGT_FACT_FTPC_DHR\"]}[Data]",
                "in",
                "    dbo_TGT_FACT_FTPC_DHR"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Cell_TFA",
            "expression": " \"TFA\""
          }
        ]
      },
      {
        "name": "Fact-FTPC DHR Codes",
        "columns": [
          {
            "name": "SONO",
            "dataType": "string",
            "sourceColumn": "SONO"
          },
          {
            "name": "PARTTYPE",
            "dataType": "string",
            "sourceColumn": "PARTTYPE"
          },
          {
            "name": "CITC",
            "dataType": "string",
            "sourceColumn": "CITC"
          },
          {
            "name": "WTC",
            "dataType": "string",
            "sourceColumn": "WTC"
          },
          {
            "name": "WKPIECEID",
            "dataType": "string",
            "sourceColumn": "WKPIECEID"
          },
          {
            "name": "LASER",
            "dataType": "string",
            "sourceColumn": "LASER"
          },
          {
            "name": "STEP",
            "dataType": "string",
            "sourceColumn": "STEP"
          },
          {
            "name": "STEPNR",
            "dataType": "int64",
            "sourceColumn": "STEPNR"
          },
          {
            "name": "MACNO",
            "dataType": "string",
            "sourceColumn": "MACNO"
          },
          {
            "name": "PALLETID",
            "dataType": "double",
            "sourceColumn": "PALLETID"
          },
          {
            "name": "PASS",
            "dataType": "double",
            "sourceColumn": "PASS"
          },
          {
            "name": "SIGN",
            "dataType": "string",
            "sourceColumn": "SIGN"
          },
          {
            "name": "ERROR",
            "dataType": "int64",
            "sourceColumn": "ERROR"
          },
          {
            "name": "DOUBT",
            "dataType": "double",
            "sourceColumn": "DOUBT"
          },
          {
            "name": "QTY",
            "dataType": "int64",
            "sourceColumn": "QTY"
          },
          {
            "name": "RWK",
            "dataType": "double",
            "sourceColumn": "RWK"
          },
          {
            "name": "OSONO",
            "dataType": "string",
            "sourceColumn": "OSONO"
          },
          {
            "name": "PCITC",
            "dataType": "string",
            "sourceColumn": "PCITC"
          },
          {
            "name": "DHRID",
            "dataType": "double",
            "sourceColumn": "DHRID"
          },
          {
            "name": "SOP",
            "dataType": "string",
            "sourceColumn": "SOP"
          },
          {
            "name": "BASKETRUN",
            "dataType": "double",
            "sourceColumn": "BASKETRUN"
          },
          {
            "name": "WKC",
            "dataType": "string",
            "sourceColumn": "WKC"
          },
          {
            "name": "BPCS_SCRAP_FELSOMAT_DESCRIPTION",
            "dataType": "string",
            "sourceColumn": "BPCS_SCRAP_FELSOMAT_DESCRIPTION"
          },
          {
            "name": "BPCS_SCRAP_FELSOMAT_AREA",
            "dataType": "string",
            "sourceColumn": "BPCS_SCRAP_FELSOMAT_AREA"
          },
          {
            "name": "BPCS_SCRAP_FELSOMAT_TYPE",
            "dataType": "string",
            "sourceColumn": "BPCS_SCRAP_FELSOMAT_TYPE"
          },
          {
            "name": "DTSTAMP",
            "dataType": "dateTime",
            "sourceColumn": "DTSTAMP"
          },
          {
            "name": "PLANT_ID",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_FACT_FTPC_DHR_CODES = Source{[Schema=\"dbo\",Item=\"TGT_FACT_FTPC_DHR_CODES\"]}[Data]",
                "in",
                "    dbo_TGT_FACT_FTPC_DHR_CODES"
              ]
            }
          }
        ]
      },
      {
        "name": "Fact-RFT",
        "columns": [
          {
            "name": "Cell",
            "dataType": "string",
            "sourceColumn": "CELL"
          },
          {
            "name": "Booking Date",
            "dataType": "dateTime",
            "sourceColumn": "BOOKING_DATE"
          },
          {
            "name": "Qty",
            "dataType": "double",
            "sourceColumn": "QTY"
          },
          {
            "name": "Value",
            "dataType": "double",
            "sourceColumn": "VALUE"
          },
          {
            "name": "Rework Qty",
            "dataType": "double",
            "sourceColumn": "REWORK_QTY"
          },
          {
            "name": "Rework Value",
            "dataType": "double",
            "sourceColumn": "REWORK_VALUE"
          },
          {
            "name": "SO Qty",
            "dataType": "double",
            "sourceColumn": "SO_QTY"
          },
          {
            "name": "Raw Percent",
            "dataType": "double",
            "sourceColumn": "RAW_PERCENT"
          },
          {
            "name": "Raw Rework Percent",
            "dataType": "double",
            "sourceColumn": "RAW_REWORK_PERCENT",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Scrap Qty",
            "dataType": "double",
            "sourceColumn": "SCRAP_QTY"
          },
          {
            "name": "Scrap value",
            "dataType": "double",
            "sourceColumn": "SCRAP_VALUE"
          },
          {
            "name": "Daily Scrap Qty",
            "dataType": "double",
            "sourceColumn": "DAILY_SCRAP_QTY"
          },
          {
            "name": "Daily Scrap Value",
            "dataType": "double",
            "sourceColumn": "DAILY_SCRAP_VALUE"
          },
          {
            "name": "Raw Scrap Percent",
            "dataType": "double",
            "sourceColumn": "RAW_SCRAP_PERCENT",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Raw Rft Percent",
            "dataType": "double",
            "sourceColumn": "RAW_RFT_PERCENT",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Total COGM",
            "dataType": "double",
            "sourceColumn": "TOTAL_COGM"
          },
          {
            "name": "Raw Rft Value Percent",
            "dataType": "double",
            "sourceColumn": "RAW_RFT_VALUE_PERCENT"
          },
          {
            "name": "Plant Id",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          },
          {
            "type": "calculated",
            "name": "Custom Booking Date",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-RFT'[Booking Date],\"dd mmm yy\")",
            "formatString": "General Date",
            "sortByColumn": "Booking Date"
          },
          {
            "type": "calculated",
            "name": "Calculated Booking Date",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-RFT'[Booking Date],\"dddd dd mm yyyy\")",
            "sortByColumn": "Booking Date"
          },
          {
            "type": "calculated",
            "name": "Calculated RFT",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": " if(AVERAGE('Fact-RFT'[Raw Rft Value Percent]) > 0, (1 - AVERAGE('Fact-RFT'[Raw Rft Value Percent])), 0)"
          },
          {
            "type": "calculated",
            "name": "Lower Limit",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": "0.0",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "type": "calculated",
            "name": "Upper Limit",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": "1.0",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "OP_STEP_DESC",
            "dataType": "string",
            "sourceColumn": "OP_STEP_DESC"
          },
          {
            "name": "BOOKING_DATE - Copy",
            "dataType": "dateTime",
            "sourceColumn": "BOOKING_DATE - Copy"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_AGG_RFT = Source{[Schema=\"dbo\",Item=\"TGT_AGG_RFT\"]}[Data],",
                "    #\"Duplicated Column\" = Table.DuplicateColumn(dbo_TGT_AGG_RFT, \"BOOKING_DATE\", \"BOOKING_DATE - Copy\")",
                "in",
                "    #\"Duplicated Column\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "RFT",
            "expression": " if(AVERAGE('Fact-RFT'[Raw Rft Value Percent]) > 0, (1 - AVERAGE('Fact-RFT'[Raw Rft Value Percent])), 0)",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "RFT Target",
            "expression": " 0.95 ",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Total Breakdown",
            "expression": " AVERAGE('Fact-RFT'[Raw Rework Percent]) + AVERAGE('Fact-RFT'[Raw Rft Percent])",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Central Line",
            "expression": " CALCULATE(AVERAGEX('Dim-Date', [RFT]), ALLSELECTED('Dim-Date'))",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Std Dev",
            "expression": [
              " CALCULATE(",
              "       STDEVX.P('Dim-Date', 'Fact-RFT'[RFT]),",
              "       ALLSELECTED('Dim-Date')",
              "   )"
            ]
          },
          {
            "name": "LCL",
            "expression": "[Central Line]-[Std Dev]",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "UCL",
            "expression": "[Central Line] + [Std Dev]",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "MovingRange",
            "expression": [
              " ",
              "IF(ISBLANK([EarlierTime1]),blank(),(",
              "VAR EarlierTime =CALCULATE ( MAX ('Fact-RFT'[Booking Date] ), FILTER ( ALLSELECTED ( 'Fact-RFT'[Booking Date] ), 'Fact-RFT'[Booking Date] < SELECTEDVALUE ('Fact-RFT'[Booking Date]) ) ) ",
              "VAR EarlierMeasureValue = CALCULATE ('Fact-RFT'[RFT], 'Fact-RFT'[Booking Date]= EarlierTime ) ",
              "RETURN ABS ( EarlierMeasureValue - 'Fact-RFT'[RFT]) ))"
            ]
          },
          {
            "name": "MRBar",
            "expression": " AverageX(ALLSELECTED('Fact-RFT'[Booking Date]),[MovingRange])"
          },
          {
            "name": "Sigma",
            "expression": " [MRBar]/1.128"
          },
          {
            "name": "LCLConstant ",
            "expression": " CALCULATE(  [Central Line]-(2.66*[Sigma]), ALLSELECTED( 'Dim-Date'[Date]))",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "UCLConstant ",
            "expression": " CALCULATE( [Central Line]+(2.66*[Sigma]), ALLSELECTED('Dim-Date'[Date]))",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "UCL 1",
            "expression": " [Mean]+(2.66*[Sigma])"
          },
          {
            "name": "LCL 1",
            "expression": " [Mean]-(2.66*[Sigma])"
          },
          {
            "name": "Std Dev 1",
            "expression": " STDEV.S('Fact-RFT'[Calculated RFT])"
          },
          {
            "name": "Pp",
            "expression": " (MAX('Fact-RFT'[Upper Limit])-MIN('Fact-RFT'[Lower Limit]))/(6*[Std Dev])"
          },
          {
            "name": "Cp",
            "expression": " (MAX('Fact-RFT'[Upper Limit])-MIN('Fact-RFT'[Lower Limit]))/(6*[Sigma])"
          },
          {
            "name": "Ppk",
            "expression": [
              " ",
              "VAR PpU = (MAX('Fact-RFT'[Upper Limit]) - [Central Line])/(3*[Std Dev])",
              "VAR PpL = ([Mean] - MAX('Fact-RFT'[Lower Limit]))/(3*[Std Dev])",
              "RETURN MIN(PpU,PpL)"
            ]
          },
          {
            "name": "Cpk",
            "expression": [
              " ",
              "VAR CpU = (MAX('Fact-RFT'[Upper Limit]) - [Central Line])/(3*[Sigma])",
              "VAR CpL = ([Mean]- MAX('Fact-RFT'[Lower Limit]))/(3*[sigma])",
              "RETURN MIN(CpU,CpL)"
            ]
          },
          {
            "name": "EarlierTime1",
            "expression": " CALCULATE ( MAX ( 'Fact-RFT'[Booking Date] ), FILTER ( ALLSELECTED ('Fact-RFT'[Booking Date]), 'Fact-RFT'[Booking Date] < SELECTEDVALUE ( 'Fact-RFT'[Booking Date]) ) )"
          },
          {
            "name": "Mean",
            "expression": "AVERAGE( 'Fact-RFT'[Calculated RFT])",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Avg Raw Rework Percent",
            "expression": "SUM('Fact-RFT'[Raw Rework Percent])/DISTINCTCOUNT('Fact-RFT'[Raw Rework Percent])"
          }
        ]
      },
      {
        "name": "Fact-Rft Rework",
        "columns": [
          {
            "name": "Cell",
            "dataType": "string",
            "sourceColumn": "CELL"
          },
          {
            "name": "Booking Date",
            "dataType": "dateTime",
            "sourceColumn": "BOOKING_DATE"
          },
          {
            "name": "Qty",
            "dataType": "double",
            "sourceColumn": "QTY"
          },
          {
            "name": "Value",
            "dataType": "double",
            "sourceColumn": "VALUE"
          },
          {
            "name": "Rework Qty",
            "dataType": "double",
            "sourceColumn": "REWORK_QTY"
          },
          {
            "name": "Rework Value",
            "dataType": "double",
            "sourceColumn": "REWORK_VALUE"
          },
          {
            "name": "So Qty",
            "dataType": "double",
            "sourceColumn": "SO_QTY"
          },
          {
            "name": "Raw Percent",
            "dataType": "double",
            "sourceColumn": "RAW_PERCENT"
          },
          {
            "name": "Raw Rework Percent",
            "dataType": "double",
            "sourceColumn": "RAW_REWORK_PERCENT"
          },
          {
            "name": "Plant Id",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          },
          {
            "type": "calculated",
            "name": "Custom Booking Date",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-Rft Rework'[Booking Date],\"dd-mmmm-yyyy\")"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_AGG_RFT_REWORK = Source{[Schema=\"dbo\",Item=\"TGT_AGG_RFT_REWORK\"]}[Data]",
                "in",
                "    dbo_TGT_AGG_RFT_REWORK"
              ]
            }
          }
        ]
      },
      {
        "name": "Fact-Rft Scrap",
        "columns": [
          {
            "name": "Cell",
            "dataType": "string",
            "sourceColumn": "CELL"
          },
          {
            "name": "Booking Date",
            "dataType": "dateTime",
            "sourceColumn": "BOOKING_DATE"
          },
          {
            "name": "Qty",
            "dataType": "double",
            "sourceColumn": "QTY"
          },
          {
            "name": "Value",
            "dataType": "double",
            "sourceColumn": "VALUE"
          },
          {
            "name": "Scrap Qty",
            "dataType": "double",
            "sourceColumn": "SCRAP_QTY"
          },
          {
            "name": "Scrap Value",
            "dataType": "double",
            "sourceColumn": "SCRAP_VALUE"
          },
          {
            "name": "Daily Scrap Qty",
            "dataType": "double",
            "sourceColumn": "DAILY_SCRAP_QTY"
          },
          {
            "name": "Daily Scrap Value",
            "dataType": "double",
            "sourceColumn": "DAILY_SCRAP_VALUE"
          },
          {
            "name": "SO Qty",
            "dataType": "double",
            "sourceColumn": "SO_QTY"
          },
          {
            "name": "Raw Percent",
            "dataType": "double",
            "sourceColumn": "RAW_PERCENT"
          },
          {
            "name": "Raw Scrap Percent",
            "dataType": "double",
            "sourceColumn": "RAW_SCRAP_PERCENT"
          },
          {
            "name": "Raw Rft Percent",
            "dataType": "double",
            "sourceColumn": "RAW_RFT_PERCENT"
          },
          {
            "name": "Total COGM",
            "dataType": "decimal",
            "sourceColumn": "TOTAL_COGM",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Raw Rft Value Percent",
            "dataType": "double",
            "sourceColumn": "RAW_RFT_VALUE_PERCENT"
          },
          {
            "name": "Plant Id",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_AGG_RFT_SCRAP = Source{[Schema=\"dbo\",Item=\"TGT_AGG_RFT_SCRAP\"]}[Data]",
                "in",
                "    dbo_TGT_AGG_RFT_SCRAP"
              ]
            }
          }
        ]
      },
      {
        "name": "Dim-Cell",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Cell",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Commit Act Absorb[Cell]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "DISTINCT(VALUES('Fact-Commit Act Absorb'[Cell]))"
            }
          }
        ]
      },
      {
        "name": "Fact-Arch WIP",
        "columns": [
          {
            "name": "Shop Order",
            "dataType": "string",
            "sourceColumn": "SHOP_ORDER"
          },
          {
            "name": "Print Date",
            "dataType": "dateTime",
            "sourceColumn": "PRINT_DATE"
          },
          {
            "name": "Release Date",
            "dataType": "dateTime",
            "sourceColumn": "RELEASE_DATE"
          },
          {
            "name": "Aged Days",
            "dataType": "int64",
            "sourceColumn": "AGED_DAYS",
            "formatString": "0"
          },
          {
            "name": "Aged Analysis",
            "dataType": "string",
            "sourceColumn": "AGED_ANALYSIS"
          },
          {
            "name": "Scan Date Time",
            "dataType": "dateTime",
            "sourceColumn": "SCAN_DATE_TIME"
          },
          {
            "name": "Scan Reason",
            "dataType": "string",
            "sourceColumn": "SCAN_REASON"
          },
          {
            "name": "Scan Count",
            "dataType": "double",
            "sourceColumn": "SCAN_COUNT"
          },
          {
            "name": "Original Order",
            "dataType": "double",
            "sourceColumn": "ORIGINAL_ORDER"
          },
          {
            "name": "Rework",
            "dataType": "string",
            "sourceColumn": "REWORK"
          },
          {
            "name": "Item",
            "dataType": "string",
            "sourceColumn": "ITEM"
          },
          {
            "name": "Item Desc",
            "dataType": "string",
            "sourceColumn": "ITEM_DESC"
          },
          {
            "name": "Item Class",
            "dataType": "string",
            "sourceColumn": "ITEM_CLASS"
          },
          {
            "name": "Trace Code",
            "dataType": "string",
            "sourceColumn": "TRACE_CODE"
          },
          {
            "name": "Last Op Step Num",
            "dataType": "double",
            "sourceColumn": "LAST_OP_STEP_NUM"
          },
          {
            "name": "Last Work Center Num",
            "dataType": "double",
            "sourceColumn": "LAST_WORK_CENTER_NUM"
          },
          {
            "name": "Last Department Num",
            "dataType": "double",
            "sourceColumn": "LAST_DEPARTMENT_NUM"
          },
          {
            "name": "Last Book Date",
            "dataType": "dateTime",
            "sourceColumn": "LAST_BOOK_DATE"
          },
          {
            "name": "Booked",
            "dataType": "string",
            "sourceColumn": "BOOKED"
          },
          {
            "name": "Last Move Days",
            "dataType": "int64",
            "sourceColumn": "LAST_MOVE_DAYS",
            "formatString": "0"
          },
          {
            "name": "Op Step Num",
            "dataType": "int64",
            "sourceColumn": "OP_STEP_NUM"
          },
          {
            "name": "Op Step Num Text",
            "dataType": "string",
            "sourceColumn": "OP_STEP_NUM_TEXT"
          },
          {
            "name": "Department Num",
            "dataType": "double",
            "sourceColumn": "DEPARTMENT_NUM"
          },
          {
            "name": "SO Qty",
            "dataType": "int64",
            "sourceColumn": "SO_QTY"
          },
          {
            "name": "Comment",
            "dataType": "string",
            "sourceColumn": "COMMENT"
          },
          {
            "name": "Comment FIilter",
            "dataType": "string",
            "sourceColumn": "COMMENT_FILTER"
          },
          {
            "name": "Work Center Num",
            "dataType": "int64",
            "sourceColumn": "WORK_CENTER_NUM"
          },
          {
            "name": "Department",
            "dataType": "string",
            "sourceColumn": "DEPARTMENT"
          },
          {
            "name": "Cell",
            "dataType": "string",
            "sourceColumn": "CELL"
          },
          {
            "name": "BU Mat Num",
            "dataType": "string",
            "sourceColumn": "BU_MAT_NUM",
            "sortByColumn": "SORT_ORDER"
          },
          {
            "name": "Item Family",
            "dataType": "string",
            "sourceColumn": "ITEM_FAMILY"
          },
          {
            "name": "Item Description",
            "dataType": "string",
            "sourceColumn": "ITEM_DESCRIPTION"
          },
          {
            "name": "Op Step Desc",
            "dataType": "string",
            "sourceColumn": "OP_STEP_DESC"
          },
          {
            "name": "Op Step Desc 2",
            "dataType": "string",
            "sourceColumn": "OP_STEP_DESC_2"
          },
          {
            "name": "Op Step Seq Num",
            "dataType": "int64",
            "sourceColumn": "OP_STEP_SEQ_NUM"
          },
          {
            "name": "Sub Assembly",
            "dataType": "string",
            "sourceColumn": "SUB_ASSEMBLY"
          },
          {
            "name": "Cost At Op Num",
            "dataType": "decimal",
            "sourceColumn": "COST_AT_OP_NUM",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Total",
            "dataType": "double",
            "sourceColumn": "TOTAL"
          },
          {
            "name": "Reserve",
            "dataType": "double",
            "sourceColumn": "RESERVE"
          },
          {
            "name": "BU",
            "dataType": "string",
            "sourceColumn": "BU"
          },
          {
            "name": "Plant Id",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          },
          {
            "name": "Archive Time",
            "dataType": "dateTime",
            "sourceColumn": "ARCHIVE_TIME"
          },
          {
            "type": "calculated",
            "name": "Custom Comments",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF('Fact-Arch WIP'[Comment]=blank(),\"Standard\",\"Validation\")"
          },
          {
            "type": "calculated",
            "name": "Join",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " 'Fact-Arch WIP'[Cell] & 'Fact-Arch WIP'[Op Step Num Text] & 'Fact-Arch WIP'[Item]"
          },
          {
            "name": "SORT_ORDER",
            "dataType": "int64",
            "sourceColumn": "SORT_ORDER"
          },
          {
            "type": "calculated",
            "name": "Archive Year",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-Arch WIP'[Archive Time],\"yyyy\")"
          },
          {
            "type": "calculated",
            "name": "Archive Month",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Fact-Arch WIP'[Archive Time],\"mmmm\")"
          },
          {
            "type": "calculated",
            "name": "Archive Day",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "DAY('Fact-Arch WIP'[Archive Time])"
          },
          {
            "type": "calculated",
            "name": "Calculated Column 1",
            "dataType": "decimal",
            "isDataTypeInferred": true,
            "expression": "('Fact-Arch WIP'[Cost At Op Num])*('Fact-Arch WIP'[Archive Day])"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_AGG_ARCH_WIP = Source{[Schema=\"dbo\",Item=\"TGT_AGG_ARCH_WIP\"]}[Data]",
                "in",
                "    dbo_TGT_AGG_ARCH_WIP"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Sum Of Cost Of Op Num",
            "expression": "SUM('Fact-Arch WIP'[Cost At Op Num])",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Cost At Op Num Euro USD",
            "expression": [
              " var current_month = MONTH(NOW())",
              "var current_year=YEAR(NOW())",
              "return",
              "IF(ISCROSSFILTERED('CustomCurrency'[Currency_Name]),SWITCH(TRUE(),VALUES('CustomCurrency'[Currency_Name])=\"USD\",",
              "SUMX('Fact-Arch WIP Fina',[Sum Of Cost Of Op Num]* LOOKUPVALUE(STG_CURRENCY_CONVERSION[CONVERSION_RATE],STG_CURRENCY_CONVERSION[Month],current_month,STG_CURRENCY_CONVERSION[Year],current_year)),VALUES('CustomCurrency'[Currency_Name])=\"EURO\",[Sum Of Cost Of Op Num],BLANK()),BLANK())"
            ]
          }
        ],
        "hierarchies": [
          {
            "name": "Hierarchy1",
            "levels": [
              {
                "name": "Archive Time",
                "ordinal": 0,
                "column": "Archive Time"
              }
            ]
          }
        ]
      },
      {
        "name": "Bridge-SPMA",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Item",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-SPMA[Item]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Plant SPMA Filt",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-SPMA[Plant SPMA Filt]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "SPMA Group",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-SPMA[SPMA Group]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Family",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-SPMA[Family]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "SUMMARIZECOLUMNS('Fact-SPMA'[Item],'Fact-SPMA'[Plant SPMA Filt],'Fact-SPMA'[SPMA Group],'Fact-SPMA'[Family])"
            }
          }
        ]
      },
      {
        "name": "Bridge-SPMA BU Mat Num",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "BU Mat Num",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-SPMA[BU Mat Num]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "CALCULATETABLE(DISTINCT(values('Fact-SPMA'[BU Mat Num])),'Fact-SPMA'[BU Mat Num]<>blank())"
            }
          }
        ]
      },
      {
        "name": "Bridge-WIP Op Step Desc",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Op Step Desc",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Fina WIP[Op Step Desc]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "CALCULATETABLE(DISTINCT(VALUES('Fact-Fina WIP'[Op Step Desc])),'Fact-Fina WIP'[Op Step Desc]<>blank())"
            }
          }
        ]
      },
      {
        "name": "Bridge-WIP Op Step Num Text",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Op Step Num Text",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": false,
            "sourceColumn": "Fact-Fina WIP[Op Step Num Text]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "DISTINCT(VALUES('Fact-Fina WIP'[Op Step Num Text]))"
            }
          }
        ]
      },
      {
        "name": "Bridge-WIP Shop Order",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Shop Order",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": false,
            "sourceColumn": "Fact-Fina WIP[Shop Order]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "DISTINCT(VALUES('Fact-Fina WIP'[Shop Order]))"
            }
          }
        ]
      },
      {
        "name": "Bridge-WIP Rework",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Rework",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Fina WIP[Rework]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "DISTINCT(VALUES('Fact-Fina WIP'[Rework]))"
            }
          }
        ]
      },
      {
        "name": "Bridge-WIP Comment",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Custom Comments",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Fina WIP[Custom Comments]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "CALCULATETABLE(DISTINCT(VALUES('Fact-Fina WIP'[Custom Comments])))"
            }
          }
        ]
      },
      {
        "name": "Bridge-WIP BU Mat Num",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "BU Mat Num",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Fina WIP[BU Mat Num]",
            "sortByColumn": "SORT_ORDER"
          },
          {
            "type": "calculatedTableColumn",
            "name": "SORT_ORDER",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Fina WIP[SORT_ORDER]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "SUMMARIZECOLUMNS('Fact-Fina WIP'[BU Mat Num],'Fact-Fina WIP'[SORT_ORDER],FILTER('Fact-Fina WIP','Fact-Fina WIP'[BU Mat Num]<>BLANK()))"
            }
          }
        ]
      },
      {
        "name": "Bridge-WIP Aged Analysis days EOM",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Aged Analysis Days EOM",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": false,
            "sourceColumn": "Fact-Fina WIP[Aged Analysis Days EOM]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "DISTINCT(VALUES('Fact-Fina WIP'[Aged Analysis Days EOM]))"
            }
          }
        ]
      },
      {
        "name": "Bridge-WIP Cell",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Cell",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Fina WIP[Cell]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "CALCULATETABLE(DISTINCT(VALUES('Fact-Fina WIP'[Cell])),'Fact-Fina WIP'[Cell]<>blank())"
            }
          }
        ]
      },
      {
        "name": "Bridge-WIP Item",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Item",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Fina WIP[Item]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "CALCULATETABLE(DISTINCT(VALUES('Fact-Fina WIP'[Item])),'Fact-Fina WIP'[Item]<>blank())"
            }
          }
        ]
      },
      {
        "name": "Bridge-WIP Item Family",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Item Family",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Fina WIP[Item Family]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "CALCULATETABLE(DISTINCT(VALUES('Fact-Fina WIP'[Item Family])),'Fact-Fina WIP'[Item Family]<>blank())"
            }
          }
        ]
      },
      {
        "name": "Bridge-WIP Department",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Department",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Fina WIP[Department]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "CALCULATETABLE(DISTINCT(VALUES('Fact-Fina WIP'[Department])),'Fact-Fina WIP'[Department]<>blank())"
            }
          }
        ]
      },
      {
        "name": "Bridge-WIP Trace code",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Trace Code",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Fina WIP[Trace Code]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 2",
            "source": {
              "type": "calculated",
              "expression": "DISTINCT(VALUES('Fact-Fina WIP'[Trace Code]))"
            }
          }
        ]
      },
      {
        "name": "Bridge - Scrap ftpc",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Shop Order",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Scrap[Shop Order]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Cell",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Scrap[Cell]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Department",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Scrap[Department]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Category",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Scrap[Category]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Op Step Num",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Scrap[Op Step Num]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Reason Code",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Scrap[Reason Code]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "SUMMARIZE('Fact-Scrap','Fact-Scrap'[Shop Order],'Fact-Scrap'[Cell],'Fact-Scrap'[Department],'Fact-Scrap'[Category],'Fact-Scrap'[Op Step Num],'Fact-Scrap'[Reason Code])"
            }
          }
        ]
      },
      {
        "name": "Bridge- Scrap Error",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "SONO",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-FTPC DHR Codes[SONO]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "SUMMARIZE('Fact-FTPC DHR Codes','Fact-FTPC DHR Codes'[SONO])"
            }
          }
        ]
      },
      {
        "name": "Dim - Routing Master",
        "columns": [
          {
            "name": "PLANT",
            "dataType": "string",
            "sourceColumn": "PLANT"
          },
          {
            "name": "ITEM",
            "dataType": "string",
            "sourceColumn": "ITEM"
          },
          {
            "name": "OP_STEP_NUM",
            "dataType": "string",
            "sourceColumn": "OP_STEP_NUM"
          },
          {
            "name": "WORK_CENTER_NUM",
            "dataType": "string",
            "sourceColumn": "WORK_CENTER_NUM"
          },
          {
            "name": "OP_STEP_DESC_BPCS",
            "dataType": "string",
            "sourceColumn": "OP_STEP_DESC_BPCS"
          },
          {
            "name": "DEPARTMENT",
            "dataType": "string",
            "sourceColumn": "DEPARTMENT"
          },
          {
            "name": "DEPT_NUM",
            "dataType": "string",
            "sourceColumn": "DEPT_NUM"
          },
          {
            "name": "BUSINESS_UNIT",
            "dataType": "string",
            "sourceColumn": "BUSINESS_UNIT"
          },
          {
            "name": "FAMILY_BPCS",
            "dataType": "string",
            "sourceColumn": "FAMILY_BPCS"
          },
          {
            "name": "FAMILY",
            "dataType": "string",
            "sourceColumn": "FAMILY"
          },
          {
            "name": "FAMILY_2",
            "dataType": "string",
            "sourceColumn": "FAMILY_2"
          },
          {
            "name": "BU_MAT_NUM",
            "dataType": "string",
            "sourceColumn": "BU_MAT_NUM"
          },
          {
            "name": "ITEM_DESCRIPTION",
            "dataType": "string",
            "sourceColumn": "ITEM_DESCRIPTION"
          },
          {
            "name": "OP_STEP_DESC",
            "dataType": "string",
            "sourceColumn": "OP_STEP_DESC"
          },
          {
            "name": "OP_STEP_DESC_2",
            "dataType": "string",
            "sourceColumn": "OP_STEP_DESC_2"
          },
          {
            "name": "OP_STEP_SEQ_NUM",
            "dataType": "string",
            "sourceColumn": "OP_STEP_SEQ_NUM"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_DIM_ROUTING_MASTER = Source{[Schema=\"dbo\",Item=\"TGT_DIM_ROUTING_MASTER\"]}[Data]",
                "in",
                "    dbo_TGT_DIM_ROUTING_MASTER"
              ]
            }
          }
        ]
      },
      {
        "name": "Bridge-scrap join",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Join",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Scrap[Join]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "DISTINCT(VALUES('Fact-Scrap'[Join]))"
            }
          }
        ]
      },
      {
        "name": "Bridge- SPMA Cell",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Cell",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-SPMA[Cell]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "DISTINCT(VALUES('Fact-SPMA'[Cell]))"
            }
          }
        ]
      },
      {
        "name": "Bridge - Output Scrap",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Join Scrap",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Output[Join Scrap]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Op Date",
            "dataType": "dateTime",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Output[Op Date]"
          },
          {
            "type": "calculated",
            "name": "Year",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "YEAR('Bridge - Output Scrap'[Op Date])"
          },
          {
            "type": "calculated",
            "name": "Month",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "MONTH('Bridge - Output Scrap'[Op Date])"
          },
          {
            "type": "calculated",
            "name": "Day num",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "DAY('Bridge - Output Scrap'[Op Date])"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "SUMMARIZECOLUMNS('Fact-Output'[Join Scrap],'Fact-Output'[Op Date])"
            }
          }
        ]
      },
      {
        "name": "Bridge- Output Core",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Join Output",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Core[Join Output]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": " DISTINCT(VALUES('Fact-Core'[Join Output]))"
            }
          }
        ]
      },
      {
        "name": "Bridge - Scrap Absorb",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Join Absorb",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Scrap[Join Absorb]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "DISTINCT(VALUES('Fact-Scrap'[Join Absorb]))"
            }
          }
        ]
      },
      {
        "name": "Bridge- Scrap Ouput Cell",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Cell",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Output[Cell]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "CALCULATETABLE(DISTINCT(VALUES('Fact-Output'[Cell])),'Fact-Output'[Cell]<>\"\")"
            }
          }
        ]
      },
      {
        "name": "Bridge- Scrap Output Department",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Department",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Scrap[Department]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "CALCULATETABLE(DISTINCT(VALUES('Fact-Scrap'[Department])),'Fact-Scrap'[Department]<>\"\")"
            }
          }
        ]
      },
      {
        "name": "Bridge-Scrap Output item",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Item",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Scrap[Item]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "DISTINCT(VALUES('Fact-Scrap'[Item]))"
            }
          }
        ]
      },
      {
        "name": "Bridge-Scrap cell",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Cell",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Scrap Calc[Cell]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "DISTINCT(VALUES('Fact-Scrap Calc'[Cell]))"
            }
          }
        ]
      },
      {
        "name": "Bridge-Cell Category",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Cell",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Scrap Calc[Cell]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Category",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Scrap[Category]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "SUMMARIZECOLUMNS('Fact-Scrap Calc'[Cell],'Fact-Scrap'[Category])"
            }
          }
        ]
      },
      {
        "name": "Fact- IIML01",
        "columns": [
          {
            "name": "IID",
            "dataType": "string",
            "sourceColumn": "IID"
          },
          {
            "name": "IPROD",
            "dataType": "string",
            "sourceColumn": "IPROD"
          },
          {
            "name": "IDESC",
            "dataType": "string",
            "sourceColumn": "IDESC"
          },
          {
            "name": "IADJ",
            "dataType": "string",
            "sourceColumn": "IADJ"
          },
          {
            "name": "IRCT",
            "dataType": "string",
            "sourceColumn": "IRCT"
          },
          {
            "name": "IISS",
            "dataType": "string",
            "sourceColumn": "IISS"
          },
          {
            "name": "IOPB",
            "dataType": "string",
            "sourceColumn": "IOPB"
          },
          {
            "name": "IYISS",
            "dataType": "string",
            "sourceColumn": "IYISS"
          },
          {
            "name": "IYTDU",
            "dataType": "string",
            "sourceColumn": "IYTDU"
          },
          {
            "name": "IYSLS",
            "dataType": "string",
            "sourceColumn": "IYSLS"
          },
          {
            "name": "IMSLS",
            "dataType": "string",
            "sourceColumn": "IMSLS"
          },
          {
            "name": "ICLAS",
            "dataType": "string",
            "sourceColumn": "ICLAS"
          },
          {
            "name": "IUMS",
            "dataType": "string",
            "sourceColumn": "IUMS"
          },
          {
            "name": "IUMP",
            "dataType": "string",
            "sourceColumn": "IUMP"
          },
          {
            "name": "IUMCN",
            "dataType": "string",
            "sourceColumn": "IUMCN"
          },
          {
            "name": "IITYP",
            "dataType": "string",
            "sourceColumn": "IITYP"
          },
          {
            "name": "ILEAD",
            "dataType": "string",
            "sourceColumn": "ILEAD"
          },
          {
            "name": "IVEND",
            "dataType": "string",
            "sourceColumn": "IVEND"
          },
          {
            "name": "IVEN2",
            "dataType": "string",
            "sourceColumn": "IVEN2"
          },
          {
            "name": "ICUSA",
            "dataType": "string",
            "sourceColumn": "ICUSA"
          },
          {
            "name": "IPRDA",
            "dataType": "string",
            "sourceColumn": "IPRDA"
          },
          {
            "name": "IMIN",
            "dataType": "string",
            "sourceColumn": "IMIN"
          },
          {
            "name": "ILDTE",
            "dataType": "string",
            "sourceColumn": "ILDTE"
          },
          {
            "name": "ILIST",
            "dataType": "string",
            "sourceColumn": "ILIST"
          },
          {
            "name": "IWUFI",
            "dataType": "string",
            "sourceColumn": "IWUFI"
          },
          {
            "name": "IWUFS",
            "dataType": "string",
            "sourceColumn": "IWUFS"
          },
          {
            "name": "IWULI",
            "dataType": "string",
            "sourceColumn": "IWULI"
          },
          {
            "name": "IWULS",
            "dataType": "string",
            "sourceColumn": "IWULS"
          },
          {
            "name": "ISCST",
            "dataType": "string",
            "sourceColumn": "ISCST"
          },
          {
            "name": "IACST",
            "dataType": "string",
            "sourceColumn": "IACST"
          },
          {
            "name": "IFCST",
            "dataType": "string",
            "sourceColumn": "IFCST"
          },
          {
            "name": "ILEVL",
            "dataType": "string",
            "sourceColumn": "ILEVL"
          },
          {
            "name": "IONOD",
            "dataType": "string",
            "sourceColumn": "IONOD"
          },
          {
            "name": "IDISC",
            "dataType": "string",
            "sourceColumn": "IDISC"
          },
          {
            "name": "INSEQ",
            "dataType": "string",
            "sourceColumn": "INSEQ"
          },
          {
            "name": "ITSEQ",
            "dataType": "string",
            "sourceColumn": "ITSEQ"
          },
          {
            "name": "ICYC",
            "dataType": "string",
            "sourceColumn": "ICYC"
          },
          {
            "name": "IDRAW",
            "dataType": "string",
            "sourceColumn": "IDRAW"
          },
          {
            "name": "IMTDU",
            "dataType": "string",
            "sourceColumn": "IMTDU"
          },
          {
            "name": "IMRP",
            "dataType": "string",
            "sourceColumn": "IMRP"
          },
          {
            "name": "IACT",
            "dataType": "string",
            "sourceColumn": "IACT"
          },
          {
            "name": "IORDP",
            "dataType": "string",
            "sourceColumn": "IORDP"
          },
          {
            "name": "IYRCT",
            "dataType": "string",
            "sourceColumn": "IYRCT"
          },
          {
            "name": "ILOTS",
            "dataType": "string",
            "sourceColumn": "ILOTS"
          },
          {
            "name": "IYADJ",
            "dataType": "string",
            "sourceColumn": "IYADJ"
          },
          {
            "name": "IMCOS",
            "dataType": "string",
            "sourceColumn": "IMCOS"
          },
          {
            "name": "IYCOS",
            "dataType": "string",
            "sourceColumn": "IYCOS"
          },
          {
            "name": "IMUST",
            "dataType": "string",
            "sourceColumn": "IMUST"
          },
          {
            "name": "IORDC",
            "dataType": "string",
            "sourceColumn": "IORDC"
          },
          {
            "name": "IAVEU",
            "dataType": "string",
            "sourceColumn": "IAVEU"
          },
          {
            "name": "IDSCE",
            "dataType": "string",
            "sourceColumn": "IDSCE"
          },
          {
            "name": "IWGHT",
            "dataType": "string",
            "sourceColumn": "IWGHT"
          },
          {
            "name": "ITAXE",
            "dataType": "string",
            "sourceColumn": "ITAXE"
          },
          {
            "name": "IABBT",
            "dataType": "string",
            "sourceColumn": "IABBT"
          },
          {
            "name": "IABC",
            "dataType": "string",
            "sourceColumn": "IABC"
          },
          {
            "name": "IGLNO",
            "dataType": "string",
            "sourceColumn": "IGLNO"
          },
          {
            "name": "IPFDV",
            "dataType": "string",
            "sourceColumn": "IPFDV"
          },
          {
            "name": "IPACK",
            "dataType": "string",
            "sourceColumn": "IPACK"
          },
          {
            "name": "ILABL",
            "dataType": "string",
            "sourceColumn": "ILABL"
          },
          {
            "name": "IDRF",
            "dataType": "string",
            "sourceColumn": "IDRF"
          },
          {
            "name": "ICLNG",
            "dataType": "string",
            "sourceColumn": "ICLNG"
          },
          {
            "name": "ICWID",
            "dataType": "string",
            "sourceColumn": "ICWID"
          },
          {
            "name": "IFPR",
            "dataType": "string",
            "sourceColumn": "IFPR"
          },
          {
            "name": "IPITM",
            "dataType": "string",
            "sourceColumn": "IPITM"
          },
          {
            "name": "ISITM",
            "dataType": "string",
            "sourceColumn": "ISITM"
          },
          {
            "name": "IWCST",
            "dataType": "string",
            "sourceColumn": "IWCST"
          },
          {
            "name": "IBUYC",
            "dataType": "string",
            "sourceColumn": "IBUYC"
          },
          {
            "name": "IFENO",
            "dataType": "string",
            "sourceColumn": "IFENO"
          },
          {
            "name": "IUMR",
            "dataType": "string",
            "sourceColumn": "IUMR"
          },
          {
            "name": "IUMRC",
            "dataType": "string",
            "sourceColumn": "IUMRC"
          },
          {
            "name": "IFII",
            "dataType": "string",
            "sourceColumn": "IFII"
          },
          {
            "name": "IFCI",
            "dataType": "string",
            "sourceColumn": "IFCI"
          },
          {
            "name": "TAXC1",
            "dataType": "string",
            "sourceColumn": "TAXC1"
          },
          {
            "name": "SAFLG",
            "dataType": "string",
            "sourceColumn": "SAFLG"
          },
          {
            "name": "IIOQ",
            "dataType": "string",
            "sourceColumn": "IIOQ"
          },
          {
            "name": "IBTCH",
            "dataType": "string",
            "sourceColumn": "IBTCH"
          },
          {
            "name": "IYUSE",
            "dataType": "string",
            "sourceColumn": "IYUSE"
          },
          {
            "name": "ICYCF",
            "dataType": "string",
            "sourceColumn": "ICYCF"
          },
          {
            "name": "IPERS",
            "dataType": "string",
            "sourceColumn": "IPERS"
          },
          {
            "name": "ILEVLW",
            "dataType": "string",
            "sourceColumn": "ILEVLW"
          },
          {
            "name": "ISTYL",
            "dataType": "string",
            "sourceColumn": "ISTYL"
          },
          {
            "name": "IPODY",
            "dataType": "string",
            "sourceColumn": "IPODY"
          },
          {
            "name": "ITFDY",
            "dataType": "string",
            "sourceColumn": "ITFDY"
          },
          {
            "name": "ICST1",
            "dataType": "string",
            "sourceColumn": "ICST1"
          },
          {
            "name": "ICST2",
            "dataType": "string",
            "sourceColumn": "ICST2"
          },
          {
            "name": "ICST3",
            "dataType": "string",
            "sourceColumn": "ICST3"
          },
          {
            "name": "ICST4",
            "dataType": "string",
            "sourceColumn": "ICST4"
          },
          {
            "name": "ICST5",
            "dataType": "string",
            "sourceColumn": "ICST5"
          },
          {
            "name": "ICST6",
            "dataType": "string",
            "sourceColumn": "ICST6"
          },
          {
            "name": "ICST7",
            "dataType": "string",
            "sourceColumn": "ICST7"
          },
          {
            "name": "ICST8",
            "dataType": "string",
            "sourceColumn": "ICST8"
          },
          {
            "name": "ICST9",
            "dataType": "string",
            "sourceColumn": "ICST9"
          },
          {
            "name": "ICSP1",
            "dataType": "string",
            "sourceColumn": "ICSP1"
          },
          {
            "name": "ICSP2",
            "dataType": "string",
            "sourceColumn": "ICSP2"
          },
          {
            "name": "ICSP3",
            "dataType": "string",
            "sourceColumn": "ICSP3"
          },
          {
            "name": "ICSP4",
            "dataType": "string",
            "sourceColumn": "ICSP4"
          },
          {
            "name": "ICSP5",
            "dataType": "string",
            "sourceColumn": "ICSP5"
          },
          {
            "name": "ICSP6",
            "dataType": "string",
            "sourceColumn": "ICSP6"
          },
          {
            "name": "ICSP7",
            "dataType": "string",
            "sourceColumn": "ICSP7"
          },
          {
            "name": "ICSP8",
            "dataType": "string",
            "sourceColumn": "ICSP8"
          },
          {
            "name": "ICSP9",
            "dataType": "string",
            "sourceColumn": "ICSP9"
          },
          {
            "name": "ICFT1",
            "dataType": "string",
            "sourceColumn": "ICFT1"
          },
          {
            "name": "ICFT2",
            "dataType": "string",
            "sourceColumn": "ICFT2"
          },
          {
            "name": "ICFT3",
            "dataType": "string",
            "sourceColumn": "ICFT3"
          },
          {
            "name": "ICFT4",
            "dataType": "string",
            "sourceColumn": "ICFT4"
          },
          {
            "name": "ICFT5",
            "dataType": "string",
            "sourceColumn": "ICFT5"
          },
          {
            "name": "ICFT6",
            "dataType": "string",
            "sourceColumn": "ICFT6"
          },
          {
            "name": "ICFT7",
            "dataType": "string",
            "sourceColumn": "ICFT7"
          },
          {
            "name": "ICFT8",
            "dataType": "string",
            "sourceColumn": "ICFT8"
          },
          {
            "name": "ICFT9",
            "dataType": "string",
            "sourceColumn": "ICFT9"
          },
          {
            "name": "ICFP1",
            "dataType": "string",
            "sourceColumn": "ICFP1"
          },
          {
            "name": "ICFP2",
            "dataType": "string",
            "sourceColumn": "ICFP2"
          },
          {
            "name": "ICFP3",
            "dataType": "string",
            "sourceColumn": "ICFP3"
          },
          {
            "name": "ICFP4",
            "dataType": "string",
            "sourceColumn": "ICFP4"
          },
          {
            "name": "ICFP5",
            "dataType": "string",
            "sourceColumn": "ICFP5"
          },
          {
            "name": "ICFP6",
            "dataType": "string",
            "sourceColumn": "ICFP6"
          },
          {
            "name": "ICFP7",
            "dataType": "string",
            "sourceColumn": "ICFP7"
          },
          {
            "name": "ICFP8",
            "dataType": "string",
            "sourceColumn": "ICFP8"
          },
          {
            "name": "ICFP9",
            "dataType": "string",
            "sourceColumn": "ICFP9"
          },
          {
            "name": "ICAT1",
            "dataType": "string",
            "sourceColumn": "ICAT1"
          },
          {
            "name": "ICAT2",
            "dataType": "string",
            "sourceColumn": "ICAT2"
          },
          {
            "name": "ICAT3",
            "dataType": "string",
            "sourceColumn": "ICAT3"
          },
          {
            "name": "ICAT4",
            "dataType": "string",
            "sourceColumn": "ICAT4"
          },
          {
            "name": "ICAT5",
            "dataType": "string",
            "sourceColumn": "ICAT5"
          },
          {
            "name": "ICAT6",
            "dataType": "string",
            "sourceColumn": "ICAT6"
          },
          {
            "name": "ICAT7",
            "dataType": "string",
            "sourceColumn": "ICAT7"
          },
          {
            "name": "ICAT8",
            "dataType": "string",
            "sourceColumn": "ICAT8"
          },
          {
            "name": "ICAT9",
            "dataType": "string",
            "sourceColumn": "ICAT9"
          },
          {
            "name": "ICAP1",
            "dataType": "string",
            "sourceColumn": "ICAP1"
          },
          {
            "name": "ICAP2",
            "dataType": "string",
            "sourceColumn": "ICAP2"
          },
          {
            "name": "ICAP3",
            "dataType": "string",
            "sourceColumn": "ICAP3"
          },
          {
            "name": "ICAP4",
            "dataType": "string",
            "sourceColumn": "ICAP4"
          },
          {
            "name": "ICAP5",
            "dataType": "string",
            "sourceColumn": "ICAP5"
          },
          {
            "name": "ICAP6",
            "dataType": "string",
            "sourceColumn": "ICAP6"
          },
          {
            "name": "ICAP7",
            "dataType": "string",
            "sourceColumn": "ICAP7"
          },
          {
            "name": "ICAP8",
            "dataType": "string",
            "sourceColumn": "ICAP8"
          },
          {
            "name": "ICAP9",
            "dataType": "string",
            "sourceColumn": "ICAP9"
          },
          {
            "name": "ISCT1",
            "dataType": "string",
            "sourceColumn": "ISCT1"
          },
          {
            "name": "ISCT2",
            "dataType": "string",
            "sourceColumn": "ISCT2"
          },
          {
            "name": "ISCT3",
            "dataType": "string",
            "sourceColumn": "ISCT3"
          },
          {
            "name": "ISCT4",
            "dataType": "string",
            "sourceColumn": "ISCT4"
          },
          {
            "name": "ISCT5",
            "dataType": "string",
            "sourceColumn": "ISCT5"
          },
          {
            "name": "ISCT6",
            "dataType": "string",
            "sourceColumn": "ISCT6"
          },
          {
            "name": "ISCT7",
            "dataType": "string",
            "sourceColumn": "ISCT7"
          },
          {
            "name": "ISCT8",
            "dataType": "string",
            "sourceColumn": "ISCT8"
          },
          {
            "name": "ISCT9",
            "dataType": "string",
            "sourceColumn": "ISCT9"
          },
          {
            "name": "ISCP1",
            "dataType": "string",
            "sourceColumn": "ISCP1"
          },
          {
            "name": "ISCP2",
            "dataType": "string",
            "sourceColumn": "ISCP2"
          },
          {
            "name": "ISCP3",
            "dataType": "string",
            "sourceColumn": "ISCP3"
          },
          {
            "name": "ISCP4",
            "dataType": "string",
            "sourceColumn": "ISCP4"
          },
          {
            "name": "ISCP5",
            "dataType": "string",
            "sourceColumn": "ISCP5"
          },
          {
            "name": "ISCP6",
            "dataType": "string",
            "sourceColumn": "ISCP6"
          },
          {
            "name": "ISCP7",
            "dataType": "string",
            "sourceColumn": "ISCP7"
          },
          {
            "name": "ISCP8",
            "dataType": "string",
            "sourceColumn": "ISCP8"
          },
          {
            "name": "ISCP9",
            "dataType": "string",
            "sourceColumn": "ISCP9"
          },
          {
            "name": "IFRFG",
            "dataType": "string",
            "sourceColumn": "IFRFG"
          },
          {
            "name": "ISACT",
            "dataType": "string",
            "sourceColumn": "ISACT"
          },
          {
            "name": "IDTFD",
            "dataType": "string",
            "sourceColumn": "IDTFD"
          },
          {
            "name": "IUMAT",
            "dataType": "string",
            "sourceColumn": "IUMAT"
          },
          {
            "name": "IBCD",
            "dataType": "string",
            "sourceColumn": "IBCD"
          },
          {
            "name": "IIQR",
            "dataType": "string",
            "sourceColumn": "IIQR"
          },
          {
            "name": "IVULI",
            "dataType": "string",
            "sourceColumn": "IVULI"
          },
          {
            "name": "IVULP",
            "dataType": "string",
            "sourceColumn": "IVULP"
          },
          {
            "name": "INCCFG",
            "dataType": "string",
            "sourceColumn": "INCCFG"
          },
          {
            "name": "IWHS",
            "dataType": "string",
            "sourceColumn": "IWHS"
          },
          {
            "name": "ISOFL",
            "dataType": "string",
            "sourceColumn": "ISOFL"
          },
          {
            "name": "ILCC",
            "dataType": "string",
            "sourceColumn": "ILCC"
          },
          {
            "name": "IJIT",
            "dataType": "string",
            "sourceColumn": "IJIT"
          },
          {
            "name": "IUNCN",
            "dataType": "string",
            "sourceColumn": "IUNCN"
          },
          {
            "name": "IMAXR",
            "dataType": "string",
            "sourceColumn": "IMAXR"
          },
          {
            "name": "IMINR",
            "dataType": "string",
            "sourceColumn": "IMINR"
          },
          {
            "name": "IPCTK",
            "dataType": "string",
            "sourceColumn": "IPCTK"
          },
          {
            "name": "IGTEC",
            "dataType": "string",
            "sourceColumn": "IGTEC"
          },
          {
            "name": "IMAXP",
            "dataType": "string",
            "sourceColumn": "IMAXP"
          },
          {
            "name": "IPRCD",
            "dataType": "string",
            "sourceColumn": "IPRCD"
          },
          {
            "name": "ISTER1",
            "dataType": "string",
            "sourceColumn": "ISTER1"
          },
          {
            "name": "ISTER2",
            "dataType": "string",
            "sourceColumn": "ISTER2"
          },
          {
            "name": "IIWHS",
            "dataType": "string",
            "sourceColumn": "IIWHS"
          },
          {
            "name": "ISTATS",
            "dataType": "string",
            "sourceColumn": "ISTATS"
          },
          {
            "name": "ISHIPI",
            "dataType": "string",
            "sourceColumn": "ISHIPI"
          },
          {
            "name": "ILISTP",
            "dataType": "string",
            "sourceColumn": "ILISTP"
          },
          {
            "name": "IDSRCE",
            "dataType": "string",
            "sourceColumn": "IDSRCE"
          },
          {
            "name": "IVALUC",
            "dataType": "string",
            "sourceColumn": "IVALUC"
          },
          {
            "name": "ISCRAP",
            "dataType": "string",
            "sourceColumn": "ISCRAP"
          },
          {
            "name": "IINSTR",
            "dataType": "string",
            "sourceColumn": "IINSTR"
          },
          {
            "name": "IASSEM",
            "dataType": "string",
            "sourceColumn": "IASSEM"
          },
          {
            "name": "ITARIF",
            "dataType": "string",
            "sourceColumn": "ITARIF"
          },
          {
            "name": "IGCLV1",
            "dataType": "string",
            "sourceColumn": "IGCLV1"
          },
          {
            "name": "IGCLV2",
            "dataType": "string",
            "sourceColumn": "IGCLV2"
          },
          {
            "name": "IGCLV3",
            "dataType": "string",
            "sourceColumn": "IGCLV3"
          },
          {
            "name": "IGCLV4",
            "dataType": "string",
            "sourceColumn": "IGCLV4"
          },
          {
            "name": "IGCLV5",
            "dataType": "string",
            "sourceColumn": "IGCLV5"
          },
          {
            "name": "IGCLV6",
            "dataType": "string",
            "sourceColumn": "IGCLV6"
          },
          {
            "name": "IGCLV7",
            "dataType": "string",
            "sourceColumn": "IGCLV7"
          },
          {
            "name": "IGCLV8",
            "dataType": "string",
            "sourceColumn": "IGCLV8"
          },
          {
            "name": "IGCLV9",
            "dataType": "string",
            "sourceColumn": "IGCLV9"
          },
          {
            "name": "IPRCDE",
            "dataType": "string",
            "sourceColumn": "IPRCDE"
          },
          {
            "name": "IPRCID",
            "dataType": "string",
            "sourceColumn": "IPRCID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_SRC_BPCS_IIML01_FG = Source{[Schema=\"dbo\",Item=\"SRC_BPCS_IIML01_FG\"]}[Data]",
                "in",
                "    dbo_SRC_BPCS_IIML01_FG"
              ]
            }
          }
        ]
      },
      {
        "name": "Fact-ILIL01",
        "columns": [
          {
            "name": "LID",
            "dataType": "string",
            "sourceColumn": "LID"
          },
          {
            "name": "LPROD",
            "dataType": "string",
            "sourceColumn": "LPROD"
          },
          {
            "name": "LWHS",
            "dataType": "string",
            "sourceColumn": "LWHS"
          },
          {
            "name": "LLOT",
            "dataType": "string",
            "sourceColumn": "LLOT"
          },
          {
            "name": "LLOC",
            "dataType": "string",
            "sourceColumn": "LLOC"
          },
          {
            "name": "LOPB",
            "dataType": "string",
            "sourceColumn": "LOPB"
          },
          {
            "name": "LISSU",
            "dataType": "string",
            "sourceColumn": "LISSU"
          },
          {
            "name": "LADJU",
            "dataType": "string",
            "sourceColumn": "LADJU"
          },
          {
            "name": "LRCT",
            "dataType": "string",
            "sourceColumn": "LRCT"
          },
          {
            "name": "LIALOC",
            "dataType": "string",
            "sourceColumn": "LIALOC"
          },
          {
            "name": "LLCC",
            "dataType": "string",
            "sourceColumn": "LLCC"
          },
          {
            "name": "LCYCF",
            "dataType": "string",
            "sourceColumn": "LCYCF"
          },
          {
            "name": "LTSEQ",
            "dataType": "string",
            "sourceColumn": "LTSEQ"
          },
          {
            "name": "LLSTAT",
            "dataType": "string",
            "sourceColumn": "LLSTAT"
          },
          {
            "name": "LLSLOT",
            "dataType": "string",
            "sourceColumn": "LLSLOT"
          },
          {
            "name": "LLSDAT",
            "dataType": "string",
            "sourceColumn": "LLSDAT"
          },
          {
            "type": "calculated",
            "name": "Llot Lprod",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "'Fact-ILIL01'[LLOT]&'Fact-ILIL01'[LPROD]"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_SRC_BPCS_ILIL01_FG = Source{[Schema=\"dbo\",Item=\"SRC_BPCS_ILIL01_FG\"]}[Data]",
                "in",
                "    dbo_SRC_BPCS_ILIL01_FG"
              ]
            }
          }
        ]
      },
      {
        "name": "Fact-ILNL01",
        "columns": [
          {
            "name": "LNID",
            "dataType": "string",
            "sourceColumn": "LNID"
          },
          {
            "name": "LLOT",
            "dataType": "string",
            "sourceColumn": "LLOT"
          },
          {
            "name": "LPROD",
            "dataType": "string",
            "sourceColumn": "LPROD"
          },
          {
            "name": "LRDT",
            "dataType": "string",
            "sourceColumn": "LRDT"
          },
          {
            "name": "VNDNO",
            "dataType": "string",
            "sourceColumn": "VNDNO"
          },
          {
            "name": "LVNDLT",
            "dataType": "string",
            "sourceColumn": "LVNDLT"
          },
          {
            "name": "LPOT",
            "dataType": "string",
            "sourceColumn": "LPOT"
          },
          {
            "name": "LDENS",
            "dataType": "string",
            "sourceColumn": "LDENS"
          },
          {
            "name": "LSTDTR",
            "dataType": "string",
            "sourceColumn": "LSTDTR"
          },
          {
            "name": "LEXDT",
            "dataType": "string",
            "sourceColumn": "LEXDT"
          },
          {
            "name": "LRET",
            "dataType": "string",
            "sourceColumn": "LRET"
          },
          {
            "name": "LQAAP",
            "dataType": "string",
            "sourceColumn": "LQAAP"
          },
          {
            "name": "LMRB",
            "dataType": "string",
            "sourceColumn": "LMRB"
          },
          {
            "name": "LLRD",
            "dataType": "string",
            "sourceColumn": "LLRD"
          },
          {
            "name": "LISS",
            "dataType": "string",
            "sourceColumn": "LISS"
          },
          {
            "name": "LRCPT",
            "dataType": "string",
            "sourceColumn": "LRCPT"
          },
          {
            "name": "LADJT",
            "dataType": "string",
            "sourceColumn": "LADJT"
          },
          {
            "name": "LMSC",
            "dataType": "string",
            "sourceColumn": "LMSC"
          },
          {
            "name": "LALOC",
            "dataType": "string",
            "sourceColumn": "LALOC"
          },
          {
            "name": "LLREF",
            "dataType": "string",
            "sourceColumn": "LLREF"
          },
          {
            "name": "LSCST",
            "dataType": "string",
            "sourceColumn": "LSCST"
          },
          {
            "name": "LACST",
            "dataType": "string",
            "sourceColumn": "LACST"
          },
          {
            "name": "LCTNR",
            "dataType": "string",
            "sourceColumn": "LCTNR"
          },
          {
            "name": "LVOLU",
            "dataType": "string",
            "sourceColumn": "LVOLU"
          },
          {
            "name": "LSTLOT",
            "dataType": "string",
            "sourceColumn": "LSTLOT"
          },
          {
            "type": "calculated",
            "name": "Llot-Lprod",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "'Fact-ILNL01'[LLOT]&'Fact-ILNL01'[LPROD]"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_SRC_BPCS_ILNL01_FG = Source{[Schema=\"dbo\",Item=\"SRC_BPCS_ILNL01_FG\"]}[Data]",
                "in",
                "    dbo_SRC_BPCS_ILNL01_FG"
              ]
            }
          }
        ]
      },
      {
        "name": "Fact-ITHL01",
        "columns": [
          {
            "name": "TID",
            "dataType": "string",
            "sourceColumn": "TID"
          },
          {
            "name": "TPROD",
            "dataType": "string",
            "sourceColumn": "TPROD"
          },
          {
            "name": "TSEQ",
            "dataType": "string",
            "sourceColumn": "TSEQ"
          },
          {
            "name": "TTYPE",
            "dataType": "string",
            "sourceColumn": "TTYPE"
          },
          {
            "name": "TTDTE",
            "dataType": "string",
            "sourceColumn": "TTDTE"
          },
          {
            "name": "TQTY",
            "dataType": "string",
            "sourceColumn": "TQTY"
          },
          {
            "name": "TWHS",
            "dataType": "string",
            "sourceColumn": "TWHS"
          },
          {
            "name": "TLOCT",
            "dataType": "string",
            "sourceColumn": "TLOCT"
          },
          {
            "name": "TPRIC",
            "dataType": "string",
            "sourceColumn": "TPRIC"
          },
          {
            "name": "TREF",
            "dataType": "string",
            "sourceColumn": "TREF"
          },
          {
            "name": "TVAL",
            "dataType": "string",
            "sourceColumn": "TVAL"
          },
          {
            "name": "TSDTE",
            "dataType": "string",
            "sourceColumn": "TSDTE"
          },
          {
            "name": "TREFM",
            "dataType": "string",
            "sourceColumn": "TREFM"
          },
          {
            "name": "TCOM",
            "dataType": "string",
            "sourceColumn": "TCOM"
          },
          {
            "name": "TCLAS",
            "dataType": "string",
            "sourceColumn": "TCLAS"
          },
          {
            "name": "TLOT",
            "dataType": "string",
            "sourceColumn": "TLOT"
          },
          {
            "name": "TDANG",
            "dataType": "string",
            "sourceColumn": "TDANG"
          },
          {
            "name": "TRES",
            "dataType": "string",
            "sourceColumn": "TRES"
          },
          {
            "name": "TPFDV",
            "dataType": "string",
            "sourceColumn": "TPFDV"
          },
          {
            "name": "TVEND",
            "dataType": "string",
            "sourceColumn": "TVEND"
          },
          {
            "name": "TSTAT",
            "dataType": "string",
            "sourceColumn": "TSTAT"
          },
          {
            "name": "TSCST",
            "dataType": "string",
            "sourceColumn": "TSCST"
          },
          {
            "name": "THWS",
            "dataType": "string",
            "sourceColumn": "THWS"
          },
          {
            "name": "THUSER",
            "dataType": "string",
            "sourceColumn": "THUSER"
          },
          {
            "name": "THTIME",
            "dataType": "string",
            "sourceColumn": "THTIME"
          },
          {
            "name": "THCURR",
            "dataType": "string",
            "sourceColumn": "THCURR"
          },
          {
            "name": "THTEXR",
            "dataType": "string",
            "sourceColumn": "THTEXR"
          },
          {
            "name": "TOQTY",
            "dataType": "string",
            "sourceColumn": "TOQTY"
          },
          {
            "name": "THGLRT",
            "dataType": "string",
            "sourceColumn": "THGLRT"
          },
          {
            "name": "ISTDAT",
            "dataType": "string",
            "sourceColumn": "ISTDAT"
          },
          {
            "name": "ITSLOT",
            "dataType": "string",
            "sourceColumn": "ITSLOT"
          },
          {
            "name": "ITINVN",
            "dataType": "string",
            "sourceColumn": "ITINVN"
          },
          {
            "name": "ITDSCN",
            "dataType": "string",
            "sourceColumn": "ITDSCN"
          },
          {
            "name": "TFTWHS",
            "dataType": "string",
            "sourceColumn": "TFTWHS"
          },
          {
            "name": "TFTLOC",
            "dataType": "string",
            "sourceColumn": "TFTLOC"
          },
          {
            "type": "calculated",
            "name": "Tlot Tprod",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "'Fact-ITHL01'[TLOT]&'Fact-ITHL01'[TPROD]"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_SRC_BPCS_ITHL01_FG = Source{[Schema=\"dbo\",Item=\"SRC_BPCS_ITHL01_FG\"]}[Data]",
                "in",
                "    dbo_SRC_BPCS_ITHL01_FG"
              ]
            }
          }
        ]
      },
      {
        "name": "Bridge- Scrap Output Op step desc",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Op Step Desc",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Scrap[Op Step Desc]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "CALCULATETABLE(DISTINCT(VALUES('Fact-Scrap'[Op Step Desc])),'Fact-Scrap'[Op Step Desc]<>\"\")"
            }
          }
        ]
      },
      {
        "name": "Bridge- Scrap output Op step num",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Op Step Num",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Output[Op Step Num]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "DISTINCT(VALUES('Fact-Output'[Op Step Num]))"
            }
          }
        ]
      },
      {
        "name": "Bridge-Scrap Output Item Family",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Item Family",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Output[Item Family]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "CALCULATETABLE(DISTINCT(VALUES('Fact-Output'[Item Family])),'Fact-Output'[Item Family]<>BLANK())"
            }
          }
        ]
      },
      {
        "name": "Bridge- Scrap Output Operator",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Operator",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Output[Operator]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "CALCULATETABLE(DISTINCT(VALUES('Fact-Output'[Operator])),'Fact-Output'[Operator]<>BLANK())"
            }
          }
        ]
      },
      {
        "name": "Dim-SST",
        "columns": [
          {
            "name": "SKU",
            "dataType": "string",
            "sourceColumn": "SKU"
          },
          {
            "name": "SAFETY_STOCK_TARGET",
            "dataType": "double",
            "sourceColumn": "SAFETY_STOCK_TARGET"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_DIM_SST = Source{[Schema=\"dbo\",Item=\"TGT_DIM_SST\"]}[Data]",
                "in",
                "    dbo_TGT_DIM_SST"
              ]
            }
          }
        ]
      },
      {
        "name": "Fact-Finished Goods",
        "columns": [
          {
            "name": "ITEM",
            "dataType": "string",
            "sourceColumn": "ITEM"
          },
          {
            "name": "DESCRIPTION",
            "dataType": "string",
            "sourceColumn": "DESCRIPTION"
          },
          {
            "name": "FAMILY",
            "dataType": "string",
            "sourceColumn": "FAMILY"
          },
          {
            "name": "QTY_OH",
            "dataType": "double",
            "sourceColumn": "QTY_OH"
          },
          {
            "name": "QTY_ALLOCATED",
            "dataType": "double",
            "sourceColumn": "QTY_ALLOCATED"
          },
          {
            "name": "QTY_AVAILABLE",
            "dataType": "double",
            "sourceColumn": "QTY_AVAILABLE"
          },
          {
            "name": "WH",
            "dataType": "string",
            "sourceColumn": "WH"
          },
          {
            "name": "EXPIRY_DATE",
            "dataType": "dateTime",
            "sourceColumn": "EXPIRY_DATE"
          },
          {
            "name": "LOT_CODE",
            "dataType": "string",
            "sourceColumn": "LOT_CODE"
          },
          {
            "name": "STERILE_LOT_CODE",
            "dataType": "string",
            "sourceColumn": "STERILE_LOT_CODE"
          },
          {
            "name": "BU",
            "dataType": "string",
            "sourceColumn": "BU"
          },
          {
            "name": "LCC",
            "dataType": "string",
            "sourceColumn": "LCC"
          },
          {
            "name": "BOOKED_TO_STOCK_DATE",
            "dataType": "dateTime",
            "sourceColumn": "BOOKED_TO_STOCK_DATE"
          },
          {
            "name": "LOCATION",
            "dataType": "string",
            "sourceColumn": "LOCATION"
          },
          {
            "name": "STANDARD_COST",
            "dataType": "double",
            "sourceColumn": "STANDARD_COST"
          },
          {
            "name": "FROZEN_COST",
            "dataType": "double",
            "sourceColumn": "FROZEN_COST"
          },
          {
            "name": "STERILE_FLAG",
            "dataType": "string",
            "sourceColumn": "STERILE_FLAG"
          },
          {
            "name": "LEAD_TIME",
            "dataType": "string",
            "sourceColumn": "LEAD_TIME"
          },
          {
            "name": "ITEM_CLASS",
            "dataType": "string",
            "sourceColumn": "ITEM_CLASS"
          },
          {
            "name": "PLANT_ID",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          },
          {
            "type": "calculated",
            "name": "WH Text",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "SWITCH('Fact-Finished Goods'[WH],\"01\",\"FG_01\",\"02\",\"FG_02\",\"03\",\"FG_03\",\"21\",\"RM\",\"23\",\"Sub\",\"24\",\"RM_1\",\"25\",\"Transit Out\",\"26\",\"Transit In\",\"27\",\"RM Mis\",\"42\",\"FG_04\",\"51\",\"Expiry < 12 months\",\"52\",\"Expiry < 12 months_1\",\"91\",\"Expired\")"
          },
          {
            "type": "calculated",
            "name": "LCC Text",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "SWITCH('Fact-Finished Goods'[LCC],\"50\",\"Reservation\",\"199\",\"Trail\",\"200\",\"Launch\",\"300\",\"Normal Production\",\"400\",\"Phase Out\",\"550\",\"Obsolete_1\",\"551\",\"Obsolete_2\")"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_FACT_FINISHED_GOODS = Source{[Schema=\"dbo\",Item=\"TGT_FACT_FINISHED_GOODS\"]}[Data]",
                "in",
                "    dbo_TGT_FACT_FINISHED_GOODS"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Inventory Value",
            "expression": "sum('Fact-Finished Goods'[QTY_OH])*sum('Fact-Finished Goods'[STANDARD_COST])",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "SST Value",
            "expression": "sum('Dim-SST'[SAFETY_STOCK_TARGET])*sum('Fact-Finished Goods'[STANDARD_COST])"
          },
          {
            "name": "Inventory Health",
            "expression": "(SUM('Fact-Finished Goods'[QTY_OH])/sum('Dim-SST'[SAFETY_STOCK_TARGET]))",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Excess Inventory",
            "expression": "IF(SUM('Fact-Finished Goods'[QTY_OH])>(1.2*sum('Dim-SST'[SAFETY_STOCK_TARGET])),SUM('Fact-Finished Goods'[QTY_OH])-(1.2*sum('Dim-SST'[SAFETY_STOCK_TARGET])),0)",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          }
        ]
      },
      {
        "name": "Fact-NRP",
        "columns": [
          {
            "name": "NORMALIZED_ITEMCODE",
            "dataType": "string",
            "sourceColumn": "NORMALIZED_ITEMCODE"
          },
          {
            "name": "Months",
            "dataType": "string",
            "sourceColumn": "Months"
          },
          {
            "name": "Amount",
            "dataType": "double",
            "sourceColumn": "Amount"
          },
          {
            "name": "Month",
            "dataType": "string",
            "sourceColumn": "Month"
          },
          {
            "name": "Year",
            "dataType": "string",
            "sourceColumn": "Year"
          },
          {
            "name": "SST",
            "dataType": "int64",
            "sourceColumn": "SST"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_FACT_NRP = Source{[Schema=\"dbo\",Item=\"TGT_FACT_NRP\"]}[Data]",
                "in",
                "    dbo_TGT_FACT_NRP"
              ]
            }
          }
        ]
      },
      {
        "name": "Measure Filter",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Name",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Name]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "DATATABLE(\"Name\",STRING,{ {\"Scrap Value\"},{\"Prod %\"},{\"WIP Reserve\"},{\"ABS\"},{\"SPA %\"}})"
            }
          }
        ],
        "measures": [
          {
            "name": "Measure Filter",
            "expression": "IF (ISCROSSFILTERED('Measure Filter'[Name]),Switch( True() , Values('Measure Filter'[Name]) =\"Scrap Value\", [Scrap value total], Values('Measure Filter'[Name]) =\"Prod %\", 'Fact-Productive Trial'[MAvg],  Values('Measure Filter'[Name]) =\"WIP Reserve\",[Sum of Reserve EOM], Values('Measure Filter'[Name]) =\"ABS\", [Sum Of Total Absorbed Sum], Values('Measure Filter'[Name]) =\"SPA %\", [Cell SPA Percent],BLANK()),Blank())"
          }
        ]
      },
      {
        "name": "Bridge - Arch WIP Item Family",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Item Family",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-WIP[Item Family]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 2",
            "source": {
              "type": "calculated",
              "expression": "CALCULATETABLE(DISTINCT(VALUES('Fact-WIP'[Item Family])),'Fact-WIP'[Item Family]<>BLANK())"
            }
          }
        ]
      },
      {
        "name": "Bridge- Arch WIP Item",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Item",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-WIP[Item]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 2",
            "source": {
              "type": "calculated",
              "expression": "CALCULATETABLE(DISTINCT(VALUES('Fact-WIP'[Item])),'Fact-WIP'[Item]<>BLANK())"
            }
          }
        ]
      },
      {
        "name": "Bridge- Arch WIP Op Step Num",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Op Step Num Text",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-WIP[Op Step Num Text]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 2",
            "source": {
              "type": "calculated",
              "expression": "DISTINCT(VALUES('Fact-WIP'[Op Step Num Text]))"
            }
          }
        ]
      },
      {
        "name": "Bridge - Arch WIP Op Step Desc",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Op Step Desc",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-WIP[Op Step Desc]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 2",
            "source": {
              "type": "calculated",
              "expression": "CALCULATETABLE(DISTINCT(VALUES('Fact-WIP'[Op Step Desc])),'Fact-WIP'[Op Step Desc]<>BLANK())"
            }
          }
        ]
      },
      {
        "name": "Bridge- Arch WIP Shop Order",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Shop Order",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-WIP[Shop Order]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 2",
            "source": {
              "type": "calculated",
              "expression": "DISTINCT(VALUES('Fact-WIP'[Shop Order]))"
            }
          }
        ]
      },
      {
        "name": "Bridge - Arch WIP Trace Code",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Trace Code",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-WIP[Trace Code]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 2",
            "source": {
              "type": "calculated",
              "expression": "DISTINCT(VALUES('Fact-WIP'[Trace Code]))"
            }
          }
        ]
      },
      {
        "name": "Bridge - Arch WIP Cell",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Cell",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-WIP[Cell]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 2",
            "source": {
              "type": "calculated",
              "expression": "CALCULATETABLE(DISTINCT(VALUES('Fact-WIP'[Cell])),'Fact-WIP'[Cell]<>BLANK())"
            }
          }
        ]
      },
      {
        "name": "Bridge - Arch WIP Department",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Department",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-WIP[Department]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 2",
            "source": {
              "type": "calculated",
              "expression": "CALCULATETABLE(DISTINCT(VALUES('Fact-WIP'[Department])),'Fact-WIP'[Department]<>BLANK())"
            }
          }
        ]
      },
      {
        "name": "Bridge - Arch WIP BU Mat Num",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "BU Mat Num",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-WIP[BU Mat Num]",
            "sortByColumn": "SORT_ORDER"
          },
          {
            "type": "calculatedTableColumn",
            "name": "SORT_ORDER",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-WIP[SORT_ORDER]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 2",
            "source": {
              "type": "calculated",
              "expression": "SUMMARIZECOLUMNS('Fact-WIP'[BU Mat Num],'Fact-WIP'[SORT_ORDER],FILTER('Fact-WIP','Fact-WIP'[BU Mat Num]<>BLANK()))"
            }
          }
        ]
      },
      {
        "name": "Bridge - Arch WIP Comments",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Custom Comments",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-WIP[Custom Comments]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 2",
            "source": {
              "type": "calculated",
              "expression": "CALCULATETABLE(DISTINCT(VALUES('Fact-WIP'[Custom Comments])))"
            }
          }
        ]
      },
      {
        "name": "Bridge- Arch WIP Rework",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Rework",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-WIP[Rework]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 2",
            "source": {
              "type": "calculated",
              "expression": "DISTINCT(VALUES('Fact-WIP'[Rework]))"
            }
          }
        ]
      },
      {
        "name": "Bridge- Arch WIP Days Old",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Last Move Days",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-WIP[Last Move Days]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 2",
            "source": {
              "type": "calculated",
              "expression": "DISTINCT(VALUES('Fact-WIP'[Last Move Days]))"
            }
          }
        ]
      },
      {
        "name": "Bridge - Arch WIP Aged Days",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Aged Days",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-WIP[Aged Days]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 2",
            "source": {
              "type": "calculated",
              "expression": "DISTINCT(VALUES('Fact-WIP'[Aged Days]))"
            }
          }
        ]
      },
      {
        "name": "Bridge-Core Output PTL",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "PTL",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Output[PTL]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 2",
            "source": {
              "type": "calculated",
              "expression": "CALCULATETABLE(DISTINCT(VALUES('Fact-Output'[PTL])),FILTER('Fact-Output','Fact-Output'[PTL]<>BLANK()))"
            }
          }
        ]
      },
      {
        "name": "Bridge-Core Output Operator",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Operator",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Output[Operator]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 2",
            "source": {
              "type": "calculated",
              "expression": "CALCULATETABLE(DISTINCT('Fact-Output'[Operator]),FILTER('Fact-Output','Fact-Output'[Operator]<>BLANK()))"
            }
          }
        ]
      },
      {
        "name": "Calculated - Latest Month Data",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Name",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Name]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 2",
            "source": {
              "type": "calculated",
              "expression": "DATATABLE(\"Name\",STRING,{ {\"All\"},{\"Latest Month\"}})"
            }
          }
        ],
        "measures": [
          {
            "name": "Latest Month Reserve",
            "expression": "IF (ISCROSSFILTERED('Calculated - Latest Month Data'[Name]),Switch( True() , Values('Calculated - Latest Month Data'[Name]) =\"All\", [Sum of Reserve EOM], Values('Calculated - Latest Month Data'[Name]) =\"Latest Month\", [LastMonthReserve]),BLANK())"
          },
          {
            "name": "Latest Month",
            "expression": "IF (ISCROSSFILTERED('Calculated - Latest Month Data'[Name]),Switch( True() , Values('Calculated - Latest Month Data'[Name]) =\"Latest Month\",[Budget Variance]))"
          }
        ]
      },
      {
        "name": "Custom Productivity Trial",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Name",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Name]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 2",
            "source": {
              "type": "calculated",
              "expression": "DATATABLE(\"Name\",STRING,{ {\"Incl\"},{\"Excl\"}})"
            }
          }
        ],
        "measures": [
          {
            "name": "Incl Excl",
            "expression": "IF (ISCROSSFILTERED('Custom Productivity Trial'[Name]),Switch( True() , Values('Custom Productivity Trial'[Name]) =\"Incl\",[MAvg], Values('Custom Productivity Trial'[Name]) =\"Excl\",[Relief MAvg]))"
          }
        ]
      },
      {
        "name": "Fact-DII",
        "columns": [
          {
            "name": "COST",
            "dataType": "double",
            "sourceColumn": "COST"
          },
          {
            "name": "ARCHIVE_TIME",
            "dataType": "dateTime",
            "sourceColumn": "ARCHIVE_TIME"
          },
          {
            "name": "DAY",
            "dataType": "string",
            "sourceColumn": "DAY"
          },
          {
            "name": "COGM",
            "dataType": "double",
            "sourceColumn": "COGM"
          },
          {
            "name": "DII",
            "dataType": "double",
            "sourceColumn": "DII"
          },
          {
            "name": "PLANT_ID",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_FACT_WIP_DII = Source{[Schema=\"dbo\",Item=\"TGT_FACT_WIP_DII\"]}[Data]",
                "in",
                "    dbo_TGT_FACT_WIP_DII"
              ]
            }
          }
        ]
      },
      {
        "name": "Fact-Absorb CPP",
        "columns": [
          {
            "name": "CELL",
            "dataType": "string",
            "sourceColumn": "CELL"
          },
          {
            "name": "BOOKING_DATE",
            "dataType": "dateTime",
            "sourceColumn": "BOOKING_DATE"
          },
          {
            "name": "OP_STEP_NUM",
            "dataType": "int64",
            "sourceColumn": "OP_STEP_NUM"
          },
          {
            "name": "SO_QTY",
            "dataType": "decimal",
            "sourceColumn": "SO_QTY",
            "formatString": "\"€\" #,0;-\"€\" #,0;\"€\" #,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "FINAL_SO_QTY",
            "dataType": "decimal",
            "sourceColumn": "FINAL_SO_QTY",
            "formatString": "\"€\" #,0;-\"€\" #,0;\"€\" #,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "ABSORPTION",
            "dataType": "decimal",
            "sourceColumn": "ABSORPTION",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "TOTAL_COGM",
            "dataType": "decimal",
            "sourceColumn": "TOTAL_COGM",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "COST_PER_PART",
            "dataType": "double",
            "sourceColumn": "COST_PER_PART"
          },
          {
            "name": "PLANT_ID",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_FACT_ABSORB_CPP = Source{[Schema=\"dbo\",Item=\"TGT_FACT_ABSORB_CPP\"]}[Data]",
                "in",
                "    dbo_TGT_FACT_ABSORB_CPP"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Cost Per",
            "expression": " if(sum('Fact-Absorb CPP'[FINAL_SO_QTY]) = 0, sum('Fact-Absorb CPP'[FINAL_SO_QTY]), sum('Fact-Absorb CPP'[TOTAL_COGM]) / sum('Fact-Absorb CPP'[FINAL_SO_QTY]))",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Cost Per Euro USD",
            "expression": [
              " var current_month = MONTH(NOW())",
              "var current_year=YEAR(NOW())",
              "return",
              "IF(ISCROSSFILTERED('CustomCurrency'[Currency_Name]),SWITCH(TRUE(),VALUES('CustomCurrency'[Currency_Name])=\"USD\",",
              "SUMX('Fact-Absorb CPP','Fact-Absorb CPP'[Cost Per]* LOOKUPVALUE(STG_CURRENCY_CONVERSION[CONVERSION_RATE],STG_CURRENCY_CONVERSION[Month],current_month,STG_CURRENCY_CONVERSION[Year],current_year)),VALUES('CustomCurrency'[Currency_Name])=\"EURO\",[Cost Per],BLANK()),BLANK())"
            ]
          },
          {
            "name": "SO Qty Euro USD",
            "expression": [
              " var current_month = MONTH(NOW())",
              "var current_year=YEAR(NOW())",
              "return",
              "IF(ISCROSSFILTERED('CustomCurrency'[Currency_Name]),SWITCH(TRUE(),VALUES('CustomCurrency'[Currency_Name])=\"USD\",",
              "SUMX('Fact-Absorb CPP','Fact-Absorb CPP'[SO_QTY]* LOOKUPVALUE(STG_CURRENCY_CONVERSION[CONVERSION_RATE],STG_CURRENCY_CONVERSION[Month],current_month,STG_CURRENCY_CONVERSION[Year],current_year)),VALUES('CustomCurrency'[Currency_Name])=\"EURO\",SUM('Fact-Absorb CPP'[SO_QTY]),BLANK()),BLANK())"
            ]
          },
          {
            "name": "Final SO Qty Euro USD",
            "expression": [
              " var current_month = MONTH(NOW())",
              "var current_year=YEAR(NOW())",
              "return",
              "IF(ISCROSSFILTERED('CustomCurrency'[Currency_Name]),SWITCH(TRUE(),VALUES('CustomCurrency'[Currency_Name])=\"USD\",",
              "SUMX('Fact-Absorb CPP','Fact-Absorb CPP'[FINAL_SO_QTY]* LOOKUPVALUE(STG_CURRENCY_CONVERSION[CONVERSION_RATE],STG_CURRENCY_CONVERSION[Month],current_month,STG_CURRENCY_CONVERSION[Year],current_year)),VALUES('CustomCurrency'[Currency_Name])=\"EURO\",SUM('Fact-Absorb CPP'[FINAL_SO_QTY]),BLANK()),BLANK())"
            ]
          },
          {
            "name": "Absoprtion Euro USD",
            "expression": [
              " var current_month = MONTH(NOW())",
              "var current_year=YEAR(NOW())",
              "return",
              "IF(ISCROSSFILTERED('CustomCurrency'[Currency_Name]),SWITCH(TRUE(),VALUES('CustomCurrency'[Currency_Name])=\"USD\",",
              "SUMX('Fact-Absorb CPP','Fact-Absorb CPP'[ABSORPTION]* LOOKUPVALUE(STG_CURRENCY_CONVERSION[CONVERSION_RATE],STG_CURRENCY_CONVERSION[Month],current_month,STG_CURRENCY_CONVERSION[Year],current_year)),VALUES('CustomCurrency'[Currency_Name])=\"EURO\",SUM('Fact-Absorb CPP'[ABSORPTION]),BLANK()),BLANK())"
            ]
          },
          {
            "name": "Total COGM CPP Euro USD",
            "expression": [
              " var current_month = MONTH(NOW())",
              "var current_year=YEAR(NOW())",
              "return",
              "IF(ISCROSSFILTERED('CustomCurrency'[Currency_Name]),SWITCH(TRUE(),VALUES('CustomCurrency'[Currency_Name])=\"USD\",",
              "SUMX('Fact-Absorb CPP','Fact-Absorb CPP'[TOTAL_COGM]* LOOKUPVALUE(STG_CURRENCY_CONVERSION[CONVERSION_RATE],STG_CURRENCY_CONVERSION[Month],current_month,STG_CURRENCY_CONVERSION[Year],current_year)),VALUES('CustomCurrency'[Currency_Name])=\"EURO\",SUM('Fact-Absorb CPP'[TOTAL_COGM]),BLANK()),BLANK())"
            ]
          }
        ]
      },
      {
        "name": "Fact-COGS",
        "columns": [
          {
            "name": "TRANSACTION_REASON_CODE",
            "dataType": "string",
            "sourceColumn": "TRANSACTION_REASON_CODE"
          },
          {
            "name": "LOCATION",
            "dataType": "string",
            "sourceColumn": "LOCATION"
          },
          {
            "name": "ITEM_NUMBER",
            "dataType": "string",
            "sourceColumn": "ITEM_NUMBER"
          },
          {
            "name": "LOT_NUMBER",
            "dataType": "string",
            "sourceColumn": "LOT_NUMBER"
          },
          {
            "name": "STERILE_LOT_NUMBER",
            "dataType": "string",
            "sourceColumn": "STERILE_LOT_NUMBER"
          },
          {
            "name": "TRANSACTION_QTY",
            "dataType": "double",
            "sourceColumn": "TRANSACTION_QTY"
          },
          {
            "name": "RAW_TRANSACTION_DATE",
            "dataType": "double",
            "sourceColumn": "RAW_TRANSACTION_DATE"
          },
          {
            "name": "ORDER_NUMBER",
            "dataType": "double",
            "sourceColumn": "ORDER_NUMBER"
          },
          {
            "name": "CUSTOMER_NUMBER",
            "dataType": "double",
            "sourceColumn": "CUSTOMER_NUMBER"
          },
          {
            "name": "TRANSACTION_COMMENT",
            "dataType": "string",
            "sourceColumn": "TRANSACTION_COMMENT"
          },
          {
            "name": "USER_ID",
            "dataType": "string",
            "sourceColumn": "USER_ID"
          },
          {
            "name": "TO_FROM_WAREHOUSE",
            "dataType": "string",
            "sourceColumn": "TO_FROM_WAREHOUSE"
          },
          {
            "name": "TO_FROM_LOCATION",
            "dataType": "string",
            "sourceColumn": "TO_FROM_LOCATION"
          },
          {
            "name": "VENDOR_NUMBER",
            "dataType": "double",
            "sourceColumn": "VENDOR_NUMBER"
          },
          {
            "name": "TRANSACTION_TYPE",
            "dataType": "string",
            "sourceColumn": "TRANSACTION_TYPE"
          },
          {
            "name": "WAREHOUSE",
            "dataType": "string",
            "sourceColumn": "WAREHOUSE"
          },
          {
            "name": "TRANSACTION_DATE",
            "dataType": "dateTime",
            "sourceColumn": "TRANSACTION_DATE"
          },
          {
            "name": "ITEM_CLASS",
            "dataType": "string",
            "sourceColumn": "ITEM_CLASS"
          },
          {
            "name": "ITEM_DESCRIPTION",
            "dataType": "string",
            "sourceColumn": "ITEM_DESCRIPTION"
          },
          {
            "name": "FROZEN_STANDARD_COST",
            "dataType": "double",
            "sourceColumn": "FROZEN_STANDARD_COST"
          },
          {
            "name": "Scrap Factor",
            "dataType": "double",
            "sourceColumn": "SCRAP_ACTOR"
          },
          {
            "name": "MARKETING_GROUP_1",
            "dataType": "string",
            "sourceColumn": "MARKETING_GROUP_1"
          },
          {
            "name": "MARKETING_GROUP_2",
            "dataType": "string",
            "sourceColumn": "MARKETING_GROUP_2"
          },
          {
            "name": "MARKETING_GROUP_9",
            "dataType": "string",
            "sourceColumn": "MARKETING_GROUP_9"
          },
          {
            "name": "BASE_ITEM_PRICE",
            "dataType": "double",
            "sourceColumn": "BASE_ITEM_PRICE"
          },
          {
            "name": "STANDARD_COST_PER_UNIT",
            "dataType": "double",
            "sourceColumn": "STANDARD_COST_PER_UNIT"
          },
          {
            "name": "DEFAULT_WAREHOUSE",
            "dataType": "string",
            "sourceColumn": "DEFAULT_WAREHOUSE"
          },
          {
            "name": "PRODUCT_CODE_GROUP",
            "dataType": "string",
            "sourceColumn": "PRODUCT_CODE_GROUP"
          },
          {
            "name": "PRIMARY_VENDOR_ITEM_NUMBER",
            "dataType": "string",
            "sourceColumn": "PRIMARY_VENDOR_ITEM_NUMBER"
          },
          {
            "name": "INSTRAMENT",
            "dataType": "string",
            "sourceColumn": "INSTRAMENT"
          },
          {
            "name": "PRICE",
            "dataType": "double",
            "sourceColumn": "PRICE"
          },
          {
            "name": "PLANT_ID",
            "dataType": "int64",
            "sourceColumn": "PLANT_ID"
          },
          {
            "type": "calculated",
            "name": "Inverse Price",
            "dataType": "decimal",
            "isDataTypeInferred": false,
            "expression": " ('Fact-COGS'[PRICE] * -1)",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "OP_STEP_NUM",
            "dataType": "double",
            "sourceColumn": "OP_STEP_NUM"
          },
          {
            "name": "CELL",
            "dataType": "string",
            "sourceColumn": "CELL"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_FACT_COGS = Source{[Schema=\"dbo\",Item=\"TGT_FACT_COGS\"]}[Data]",
                "in",
                "    dbo_TGT_FACT_COGS"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Inverse Price Euro USD",
            "expression": [
              " var current_month = MONTH(NOW())",
              "var current_year=YEAR(NOW())",
              "return",
              "IF(ISCROSSFILTERED('CustomCurrency'[Currency_Name]),SWITCH(TRUE(),VALUES('CustomCurrency'[Currency_Name])=\"USD\",",
              "SUMX('Fact-COGS','Fact-COGS'[Inverse Price]* LOOKUPVALUE(STG_CURRENCY_CONVERSION[CONVERSION_RATE],STG_CURRENCY_CONVERSION[Month],current_month,STG_CURRENCY_CONVERSION[Year],current_year)),VALUES('CustomCurrency'[Currency_Name])=\"EURO\",SUM('Fact-COGS'[Inverse Price]),BLANK()),BLANK())"
            ]
          },
          {
            "name": "Price Euro USD",
            "expression": [
              " var current_month = MONTH(NOW())",
              "var current_year=YEAR(NOW())",
              "return",
              "IF(ISCROSSFILTERED('CustomCurrency'[Currency_Name]),SWITCH(TRUE(),VALUES('CustomCurrency'[Currency_Name])=\"USD\",",
              "SUMX('Fact-COGS','Fact-COGS'[PRICE]* LOOKUPVALUE(STG_CURRENCY_CONVERSION[CONVERSION_RATE],STG_CURRENCY_CONVERSION[Month],current_month,STG_CURRENCY_CONVERSION[Year],current_year)),VALUES('CustomCurrency'[Currency_Name])=\"EURO\",SUM('Fact-COGS'[PRICE]),BLANK()),BLANK())"
            ]
          },
          {
            "name": "Standard Cost Per Unit",
            "expression": [
              " var current_month = MONTH(NOW())",
              "var current_year=YEAR(NOW())",
              "return",
              "IF(ISCROSSFILTERED('CustomCurrency'[Currency_Name]),SWITCH(TRUE(),VALUES('CustomCurrency'[Currency_Name])=\"USD\",",
              "SUMX('Fact-COGS','Fact-COGS'[STANDARD_COST_PER_UNIT]* LOOKUPVALUE(STG_CURRENCY_CONVERSION[CONVERSION_RATE],STG_CURRENCY_CONVERSION[Month],current_month,STG_CURRENCY_CONVERSION[Year],current_year)),VALUES('CustomCurrency'[Currency_Name])=\"EURO\",SUM('Fact-COGS'[STANDARD_COST_PER_UNIT]),BLANK()),BLANK())"
            ]
          },
          {
            "name": "Base Item Price Euro USD",
            "expression": [
              " var current_month = MONTH(NOW())",
              "var current_year=YEAR(NOW())",
              "return",
              "IF(ISCROSSFILTERED('CustomCurrency'[Currency_Name]),SWITCH(TRUE(),VALUES('CustomCurrency'[Currency_Name])=\"USD\",",
              "SUMX('Fact-COGS','Fact-COGS'[BASE_ITEM_PRICE]* LOOKUPVALUE(STG_CURRENCY_CONVERSION[CONVERSION_RATE],STG_CURRENCY_CONVERSION[Month],current_month,STG_CURRENCY_CONVERSION[Year],current_year)),VALUES('CustomCurrency'[Currency_Name])=\"EURO\",SUM('Fact-COGS'[BASE_ITEM_PRICE]),BLANK()),BLANK())"
            ]
          },
          {
            "name": "Frozen standard cost Euro USD",
            "expression": [
              " var current_month = MONTH(NOW())",
              "var current_year=YEAR(NOW())",
              "return",
              "IF(ISCROSSFILTERED('CustomCurrency'[Currency_Name]),SWITCH(TRUE(),VALUES('CustomCurrency'[Currency_Name])=\"USD\",",
              "SUMX('Fact-COGS','Fact-COGS'[FROZEN_STANDARD_COST]* LOOKUPVALUE(STG_CURRENCY_CONVERSION[CONVERSION_RATE],STG_CURRENCY_CONVERSION[Month],current_month,STG_CURRENCY_CONVERSION[Year],current_year)),VALUES('CustomCurrency'[Currency_Name])=\"EURO\",SUM('Fact-COGS'[FROZEN_STANDARD_COST]),BLANK()),BLANK())"
            ]
          }
        ]
      },
      {
        "name": "Bridge- SPMA WIP Item",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Item",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-SPMA[Item]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 2",
            "source": {
              "type": "calculated",
              "expression": "DISTINCT(VALUES('Fact-SPMA'[Item]))"
            }
          }
        ]
      },
      {
        "name": "Bridge-SPMA WIP Family",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Family",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-SPMA[Family]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 2",
            "source": {
              "type": "calculated",
              "expression": "CALCULATETABLE(DISTINCT('Fact-SPMA'[Family]),'Fact-SPMA'[Family]<>BLANK())"
            }
          }
        ]
      },
      {
        "name": "Bridge- Absorb Op Step Num",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "OP_STEP_NUM",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": false,
            "sourceColumn": "Fact-Absorb Calc[OP_STEP_NUM]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 2",
            "source": {
              "type": "calculated",
              "expression": "CALCULATETABLE(DISTINCT('Fact-Absorb Calc'[OP_STEP_NUM]),'Fact-Absorb Calc'[OP_STEP_NUM]<>BLANK())"
            }
          }
        ]
      },
      {
        "name": "Bridge-Core Output Cell",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Cell",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Output[Cell]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 2",
            "source": {
              "type": "calculated",
              "expression": "CALCULATETABLE(DISTINCT('Fact-Output'[Cell]),'Fact-Output'[Cell]<>BLANK())"
            }
          }
        ]
      },
      {
        "name": "PowerApp_Absorption_Daily_Targets",
        "columns": [
          {
            "name": "ID",
            "dataType": "int64",
            "sourceColumn": "ID"
          },
          {
            "name": "BU",
            "dataType": "int64",
            "sourceColumn": "BU"
          },
          {
            "name": "Dept",
            "dataType": "int64",
            "sourceColumn": "Dept"
          },
          {
            "name": "Month",
            "dataType": "string",
            "sourceColumn": "Month"
          },
          {
            "name": "Year",
            "dataType": "int64",
            "sourceColumn": "Year"
          },
          {
            "name": "Day1",
            "dataType": "int64",
            "sourceColumn": "Day1"
          },
          {
            "name": "Day2",
            "dataType": "int64",
            "sourceColumn": "Day2"
          },
          {
            "name": "Day3",
            "dataType": "int64",
            "sourceColumn": "Day3"
          },
          {
            "name": "Day4",
            "dataType": "int64",
            "sourceColumn": "Day4"
          },
          {
            "name": "Day5",
            "dataType": "int64",
            "sourceColumn": "Day5"
          },
          {
            "name": "Day6",
            "dataType": "int64",
            "sourceColumn": "Day6"
          },
          {
            "name": "Day7",
            "dataType": "int64",
            "sourceColumn": "Day7"
          },
          {
            "name": "Day8",
            "dataType": "int64",
            "sourceColumn": "Day8"
          },
          {
            "name": "Day9",
            "dataType": "int64",
            "sourceColumn": "Day9"
          },
          {
            "name": "Day10",
            "dataType": "int64",
            "sourceColumn": "Day10"
          },
          {
            "name": "Day11",
            "dataType": "int64",
            "sourceColumn": "Day11"
          },
          {
            "name": "Day12",
            "dataType": "int64",
            "sourceColumn": "Day12"
          },
          {
            "name": "Day13",
            "dataType": "int64",
            "sourceColumn": "Day13"
          },
          {
            "name": "Day14",
            "dataType": "int64",
            "sourceColumn": "Day14"
          },
          {
            "name": "Day15",
            "dataType": "int64",
            "sourceColumn": "Day15"
          },
          {
            "name": "Day16",
            "dataType": "int64",
            "sourceColumn": "Day16"
          },
          {
            "name": "Day17",
            "dataType": "int64",
            "sourceColumn": "Day17"
          },
          {
            "name": "Day18",
            "dataType": "int64",
            "sourceColumn": "Day18"
          },
          {
            "name": "Day19",
            "dataType": "int64",
            "sourceColumn": "Day19"
          },
          {
            "name": "Day20",
            "dataType": "int64",
            "sourceColumn": "Day20"
          },
          {
            "name": "Day21",
            "dataType": "int64",
            "sourceColumn": "Day21"
          },
          {
            "name": "Day22",
            "dataType": "int64",
            "sourceColumn": "Day22"
          },
          {
            "name": "Day23",
            "dataType": "int64",
            "sourceColumn": "Day23"
          },
          {
            "name": "Day24",
            "dataType": "int64",
            "sourceColumn": "Day24"
          },
          {
            "name": "Day25",
            "dataType": "int64",
            "sourceColumn": "Day25"
          },
          {
            "name": "Day26",
            "dataType": "int64",
            "sourceColumn": "Day26"
          },
          {
            "name": "Day27",
            "dataType": "int64",
            "sourceColumn": "Day27"
          },
          {
            "name": "Day28",
            "dataType": "int64",
            "sourceColumn": "Day28"
          },
          {
            "name": "Day29",
            "dataType": "int64",
            "sourceColumn": "Day29"
          },
          {
            "name": "Day30",
            "dataType": "int64",
            "sourceColumn": "Day30"
          },
          {
            "name": "Day31",
            "dataType": "int64",
            "sourceColumn": "Day31"
          },
          {
            "name": "Createddate",
            "dataType": "dateTime",
            "sourceColumn": "Createddate"
          },
          {
            "name": "Modifieddate",
            "dataType": "dateTime",
            "sourceColumn": "Modifieddate"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_PowerApp_Absorption_Daily_Targets = Source{[Schema=\"dbo\",Item=\"PowerApp_Absorption_Daily_Targets\"]}[Data]",
                "in",
                "    dbo_PowerApp_Absorption_Daily_Targets"
              ]
            }
          }
        ]
      },
      {
        "name": "Powerapp_Absorption_Target",
        "columns": [
          {
            "name": "ID",
            "dataType": "int64",
            "sourceColumn": "ID"
          },
          {
            "name": "BU",
            "dataType": "int64",
            "sourceColumn": "BU"
          },
          {
            "name": "Dept",
            "dataType": "int64",
            "sourceColumn": "Dept"
          },
          {
            "name": "Target",
            "dataType": "decimal",
            "sourceColumn": "Target",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Total",
            "dataType": "int64",
            "sourceColumn": "Total"
          },
          {
            "name": "Delta",
            "dataType": "int64",
            "sourceColumn": "Delta"
          },
          {
            "name": "Month",
            "dataType": "string",
            "sourceColumn": "Month"
          },
          {
            "name": "Year",
            "dataType": "int64",
            "sourceColumn": "Year"
          },
          {
            "name": "CreatedDate",
            "dataType": "dateTime",
            "sourceColumn": "CreatedDate"
          },
          {
            "name": "ModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "ModifiedDate"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_Powerapp_Absorption_Target = Source{[Schema=\"dbo\",Item=\"Powerapp_Absorption_Target\"]}[Data]",
                "in",
                "    dbo_Powerapp_Absorption_Target"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Target Miss Absorption",
            "expression": "IF((MAX(Powerapp_Absorption_Target[Target]) - SUM('Fact-Absorb'[Total Absorbed]))<0,0,MAX(Powerapp_Absorption_Target[Target]) - SUM('Fact-Absorb'[Total Absorbed]))",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Target Exceed Absorption",
            "expression": "IF((MAX('Fact-Absorb'[Total Absorbed]) - SUM(Powerapp_Absorption_Target[Target]))<0,0,(MAX('Fact-Absorb'[Total Absorbed]) - SUM(Powerapp_Absorption_Target[Target])))",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Powerapp Target Euro USD",
            "expression": [
              " var current_month = MONTH(NOW())",
              "var current_year=YEAR(NOW())",
              "return",
              "IF(ISCROSSFILTERED('CustomCurrency'[Currency_Name]),SWITCH(TRUE(),VALUES('CustomCurrency'[Currency_Name])=\"USD\",",
              "SUMX(Powerapp_Absorption_Target,Powerapp_Absorption_Target[Target]* LOOKUPVALUE(STG_CURRENCY_CONVERSION[CONVERSION_RATE],STG_CURRENCY_CONVERSION[Month],current_month,STG_CURRENCY_CONVERSION[Year],current_year)),VALUES('CustomCurrency'[Currency_Name])=\"EURO\",SUM(Powerapp_Absorption_Target[Target]),BLANK()),BLANK())"
            ]
          },
          {
            "name": "Target Miss Absorption Euro USD",
            "expression": [
              " var current_month = MONTH(NOW())",
              "var current_year=YEAR(NOW())",
              "return",
              "IF(ISCROSSFILTERED('CustomCurrency'[Currency_Name]),SWITCH(TRUE(),VALUES('CustomCurrency'[Currency_Name])=\"USD\",",
              "SUMX(Powerapp_Absorption_Target,[Target Miss]* LOOKUPVALUE(STG_CURRENCY_CONVERSION[CONVERSION_RATE],STG_CURRENCY_CONVERSION[Month],current_month,STG_CURRENCY_CONVERSION[Year],current_year)),VALUES('CustomCurrency'[Currency_Name])=\"EURO\",[Target Miss Absorption],BLANK()),BLANK())"
            ]
          },
          {
            "name": "Target Exceed Absorption Euro USD:",
            "expression": [
              " var current_month = MONTH(NOW())",
              "var current_year=YEAR(NOW())",
              "return",
              "IF(ISCROSSFILTERED('CustomCurrency'[Currency_Name]),SWITCH(TRUE(),VALUES('CustomCurrency'[Currency_Name])=\"USD\",",
              "SUMX(Powerapp_Absorption_Target,[Target Exceed Absorption]* LOOKUPVALUE(STG_CURRENCY_CONVERSION[CONVERSION_RATE],STG_CURRENCY_CONVERSION[Month],current_month,STG_CURRENCY_CONVERSION[Year],current_year)),VALUES('CustomCurrency'[Currency_Name])=\"EURO\",[Target Exceed Absorption],BLANK()),BLANK())"
            ]
          }
        ]
      },
      {
        "name": "POWERAPP_OP_DESC_DEPT_BU_Mapping",
        "columns": [
          {
            "name": "OP_STEP_NUM",
            "dataType": "int64",
            "sourceColumn": "OP_STEP_NUM"
          },
          {
            "name": "OP_STEP_DESC",
            "dataType": "string",
            "sourceColumn": "OP_STEP_DESC"
          },
          {
            "name": "DEPARTMENT",
            "dataType": "string",
            "sourceColumn": "DEPARTMENT"
          },
          {
            "name": "BUSINESS_UNIT",
            "dataType": "string",
            "sourceColumn": "BUSINESS_UNIT"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_POWERAPP_OP_DESC_DEPT_BU_Mapping = Source{[Schema=\"dbo\",Item=\"POWERAPP_OP_DESC_DEPT_BU_Mapping\"]}[Data]",
                "in",
                "    dbo_POWERAPP_OP_DESC_DEPT_BU_Mapping"
              ]
            }
          }
        ]
      },
      {
        "name": "PowerApp_OP_Step_SEQ_Num",
        "columns": [
          {
            "name": "OP_STEP_SEQ_NUM",
            "dataType": "string",
            "sourceColumn": "OP_STEP_SEQ_NUM"
          },
          {
            "name": "OP_STEP_DESC",
            "dataType": "string",
            "sourceColumn": "OP_STEP_DESC"
          },
          {
            "name": "OP_STEP_DESC_2",
            "dataType": "string",
            "sourceColumn": "OP_STEP_DESC_2"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_PowerApp_OP_Step_SEQ_Num = Source{[Schema=\"dbo\",Item=\"PowerApp_OP_Step_SEQ_Num\"]}[Data]",
                "in",
                "    dbo_PowerApp_OP_Step_SEQ_Num"
              ]
            }
          }
        ]
      },
      {
        "name": "TGT_POWERAPP_OUTPUT_TARGET",
        "columns": [
          {
            "name": "AUTO_NUM",
            "dataType": "string",
            "sourceColumn": "AUTO_NUM"
          },
          {
            "name": "BU",
            "dataType": "string",
            "sourceColumn": "BU"
          },
          {
            "name": "DEPT",
            "dataType": "string",
            "sourceColumn": "DEPT"
          },
          {
            "name": "OPERATION",
            "dataType": "string",
            "sourceColumn": "OPERATION"
          },
          {
            "name": "DATE_OF_WEEK",
            "dataType": "dateTime",
            "sourceColumn": "DATE_OF_WEEK"
          },
          {
            "name": "TOTAL",
            "dataType": "int64",
            "sourceColumn": "TOTAL"
          },
          {
            "name": "CREATED_DATE",
            "dataType": "dateTime",
            "sourceColumn": "CREATED_DATE"
          },
          {
            "name": "CREATED_BY",
            "dataType": "string",
            "sourceColumn": "CREATED_BY"
          },
          {
            "name": "MODIFIED_DATE",
            "dataType": "dateTime",
            "sourceColumn": "MODIFIED_DATE"
          },
          {
            "name": "MODIFIED_BY",
            "dataType": "string",
            "sourceColumn": "MODIFIED_BY"
          },
          {
            "name": "DATE_WEEK",
            "dataType": "dateTime",
            "sourceColumn": "DATE_WEEK"
          },
          {
            "name": "SHIFTS",
            "dataType": "string",
            "sourceColumn": "SHIFTS"
          },
          {
            "name": "TARGETS",
            "dataType": "int64",
            "sourceColumn": "TARGETS",
            "formatString": "0"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_TGT_POWERAPP_OUTPUT_TARGET = Source{[Schema=\"dbo\",Item=\"TGT_POWERAPP_OUTPUT_TARGET\"]}[Data]",
                "in",
                "    dbo_TGT_POWERAPP_OUTPUT_TARGET"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Target Miss",
            "expression": "IF((MAX(TGT_POWERAPP_OUTPUT_TARGET[TARGETS]) - SUM('Fact-Output'[SO Qty]))<0,0,MAX(TGT_POWERAPP_OUTPUT_TARGET[TARGETS]) - SUM('Fact-Output'[SO Qty]))",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "Target Exceed",
            "expression": "IF((MAX('Fact-Output'[SO Qty]) - SUM(TGT_POWERAPP_OUTPUT_TARGET[TARGETS]))<0,0,(MAX('Fact-Output'[SO Qty]) - SUM(TGT_POWERAPP_OUTPUT_TARGET[TARGETS])))",
            "formatString": "\"€\" #,0.00;-\"€\" #,0.00;\"€\" #,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1040\" DisplayName=\"€ Euro(€ 123)\" Symbol=\"€\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          }
        ]
      },
      {
        "name": "Bridge Output Target Op Step Num",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Op Step Num",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": false,
            "sourceColumn": "Fact-Output[Op Step Num]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "DISTINCT('Fact-Output'[Op Step Num])"
            }
          }
        ]
      },
      {
        "name": "STG_CURRENCY_CONVERSION",
        "columns": [
          {
            "name": "CONVERSION_DATE",
            "dataType": "string",
            "sourceColumn": "CONVERSION_DATE"
          },
          {
            "name": "CONVERSION_RATE",
            "dataType": "string",
            "sourceColumn": "CONVERSION_RATE"
          },
          {
            "name": "FROM_CURRENCY",
            "dataType": "string",
            "sourceColumn": "FROM_CURRENCY"
          },
          {
            "name": "LAST_UPDATE_DATE",
            "dataType": "string",
            "sourceColumn": "LAST_UPDATE_DATE"
          },
          {
            "name": "RATE_TYPE",
            "dataType": "string",
            "sourceColumn": "RATE_TYPE"
          },
          {
            "name": "TO_CURRENCY",
            "dataType": "string",
            "sourceColumn": "TO_CURRENCY"
          },
          {
            "type": "calculated",
            "name": "Month",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "MONTH(STG_CURRENCY_CONVERSION[CONVERSION_DATE])"
          },
          {
            "type": "calculated",
            "name": "Year",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "YEAR(STG_CURRENCY_CONVERSION[CONVERSION_DATE])"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/maserver database windows net;ProductivityCube\",",
                "    dbo_STG_CURRENCY_CONVERSION = Source{[Schema=\"dbo\",Item=\"STG_CURRENCY_CONVERSION\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(dbo_STG_CURRENCY_CONVERSION, each ([FROM_CURRENCY] = \"EUR\"))",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          }
        ]
      },
      {
        "name": "CustomCurrency",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Currency_Name",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Currency_Name]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "DATATABLE(\"Currency_Name\",STRING,{{\"USD\"},{\"EURO\"}})"
            }
          }
        ]
      },
      {
        "name": "Bridge-Shift Output Target",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Shift",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Fact-Output[Shift]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "DISTINCT(VALUES('Fact-Output'[Shift]))"
            }
          }
        ]
      },
      {
        "name": "TargetInclExcl",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Target Incl Excl",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Target Incl Excl]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "DATATABLE(\"Target Incl Excl\",STRING,{{\"Incl\"},{\"Excl\"}})"
            }
          }
        ],
        "measures": [
          {
            "name": "TargetIncl",
            "expression": "SUM(Powerapp_Absorption_Target[Target])"
          },
          {
            "name": "TargetExcl",
            "expression": "CALCULATE(SUM(TGT_POWERAPP_OUTPUT_TARGET[TARGETS]),TGT_POWERAPP_OUTPUT_TARGET[TARGETS]<>0)"
          },
          {
            "name": "Target Excl Incl",
            "expression": "IF (ISCROSSFILTERED(TargetInclExcl[Target Incl Excl]),Switch( True() , Values(TargetInclExcl[Target Incl Excl]) =\"Incl\",TargetInclExcl[TargetIncl], Values(TargetInclExcl[Target Incl Excl]) =\"Excl\",TargetInclExcl[TargetExcl]))"
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "dc41f294-5f26-44ef-9c53-3f0072112189",
        "fromTable": "Dim-Plants",
        "fromColumn": "Division ID",
        "toTable": "Dim-Divisions",
        "toColumn": "Division ID"
      },
      {
        "name": "12bd9606-9d9d-4d45-aa6a-31ee2284c227",
        "fromTable": "Fact-Absorb",
        "fromColumn": "Plant Id",
        "toTable": "Dim-Plants",
        "toColumn": "Plant ID"
      },
      {
        "name": "cae59f19-7e07-4d83-a4f3-9c98b1da8c88",
        "fromTable": "Fact-Absorb Calc",
        "fromColumn": "Plant Id",
        "toTable": "Dim-Plants",
        "toColumn": "Plant ID"
      },
      {
        "name": "cbec9d5d-d892-4731-b1d1-dc0556938008",
        "fromTable": "Fact-Commit Act Absorb",
        "fromColumn": "Plant Id",
        "toTable": "Dim-Plants",
        "toColumn": "Plant ID"
      },
      {
        "name": "afcdc68c-b3ea-43a8-97fd-47ee321ce496",
        "fromTable": "Fact-Absorb",
        "fromColumn": "Booking Date",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "5352e379-6593-4181-bbc4-3118147bf7a2",
        "fromTable": "Fact-Absorb Calc",
        "fromColumn": "Booking date",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "e85826d2-e016-4abd-8c2e-8682c5f19d45",
        "fromTable": "Fact-Commit Act Absorb",
        "fromColumn": "Date",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "7720886d-41fe-4f5b-ba7d-c594f846b04e",
        "fromTable": "Fact-Absorb",
        "fromColumn": "Department No",
        "toTable": "Dim-Businessunit",
        "toColumn": "Dept No"
      },
      {
        "name": "31471d6f-9dd1-40dc-a328-2a5ff3ee539d",
        "fromTable": "Fact-SPMA",
        "fromColumn": "DateStamp",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "b03abab6-7ef9-4d31-b40d-b89cd5ef5be3",
        "fromTable": "Fact-SPMA",
        "fromColumn": "PLANT_ID",
        "toTable": "Dim-Plants",
        "toColumn": "Plant ID"
      },
      {
        "name": "bb79ed88-22a5-4c7e-8802-f6453ffec6b8",
        "fromTable": "Fact-WIP",
        "fromColumn": "Plant Id",
        "toTable": "Dim-Plants",
        "toColumn": "Plant ID"
      },
      {
        "name": "4f9d3c37-a250-4069-8b90-3958c01bfa79",
        "fromTable": "Fact_Days",
        "fromColumn": "PLANT_ID",
        "toTable": "Dim-Plants",
        "toColumn": "Plant ID"
      },
      {
        "name": "a9165167-01fd-4642-b13a-327240937ef5",
        "fromTable": "Fact-WIP",
        "fromColumn": "Release Date",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "a5ae21c5-5c13-4a62-b875-e3e8ae3a7921",
        "fromTable": "Fact-Fina WIP",
        "fromColumn": "Plant Id",
        "toTable": "Dim-Plants",
        "toColumn": "Plant ID"
      },
      {
        "name": "dcf6a91c-ecb4-4780-8cc3-4d50820b3437",
        "fromTable": "Fact- Lead Time",
        "fromColumn": "Plant Id",
        "toTable": "Dim-Plants",
        "toColumn": "Plant ID"
      },
      {
        "name": "0099b579-6c49-4347-911f-aeb222a9337a",
        "fromTable": "Fact-Arch WIP Fina",
        "fromColumn": "Plant Id",
        "toTable": "Dim-Plants",
        "toColumn": "Plant ID"
      },
      {
        "name": "daf77865-1484-4a28-b52e-c4d48e2c8194",
        "fromTable": "Fact-Fina WIP",
        "fromColumn": "Release Date",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "637e8a72-4f09-4730-8962-d76e359e7533",
        "fromTable": "Fact- Lead Time",
        "fromColumn": "Complete Date Time",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "4ebe62d9-2613-48ed-b10b-6466f17f3b68",
        "fromTable": "Fact-Scrap",
        "fromColumn": "Booking Date",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "c3e8ec02-e0c9-443e-99af-519ded150109",
        "fromTable": "Fact-Output Calc",
        "fromColumn": "Datestamp",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "6b385688-c324-4944-b900-b62815181640",
        "fromTable": "Fact-Core",
        "fromColumn": "Date",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "f645f359-c581-413b-b17a-c69668c7e66d",
        "fromTable": "Fact-Productive",
        "fromColumn": "Date",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "e00a573b-c53b-43eb-8480-b635ecb74c01",
        "fromTable": "Fact-Scrap",
        "fromColumn": "Reason Code",
        "toTable": "Dim-Scrap Reasons",
        "toColumn": "Reason Code"
      },
      {
        "name": "0811dcef-4503-4b38-8291-94c43c787e07",
        "fromTable": "Fact-Output",
        "fromColumn": "Reason Code",
        "toTable": "Dim-Scrap Reasons",
        "toColumn": "Reason Code"
      },
      {
        "name": "fb6ec742-dddf-4ab9-9936-e3d1f52c28a3",
        "fromTable": "Fact-Output",
        "fromColumn": "Plant Id",
        "toTable": "Dim-Plants",
        "toColumn": "Plant ID"
      },
      {
        "name": "7af0e7d4-ef42-46d8-941e-3ebf747f02cb",
        "fromTable": "Fact-Productive",
        "fromColumn": "Plant Id",
        "toTable": "Dim-Plants",
        "toColumn": "Plant ID"
      },
      {
        "name": "c2a12ba6-0354-4913-8df0-5633c7ee9e7b",
        "fromTable": "Fact-Productive Trial",
        "fromColumn": "Plant Id",
        "toTable": "Dim-Plants",
        "toColumn": "Plant ID"
      },
      {
        "name": "c801ae19-047d-42df-b885-363b5e7934fb",
        "fromTable": "Fact-Scrap",
        "fromColumn": "PLANT_ID",
        "toTable": "Dim-Plants",
        "toColumn": "Plant ID"
      },
      {
        "name": "444b46b4-de6d-43c3-913b-3f2dc9128362",
        "fromTable": "Fact-Output Calc",
        "fromColumn": "Plant Id",
        "toTable": "Dim-Plants",
        "toColumn": "Plant ID"
      },
      {
        "name": "eb5ccae0-c895-45f2-9f86-dc21c595de6d",
        "fromTable": "Fact-Core",
        "fromColumn": "Plant Id",
        "toTable": "Dim-Plants",
        "toColumn": "Plant ID"
      },
      {
        "name": "d734e374-c8b0-41f9-a571-0f65f9dac585",
        "fromTable": "Fact-Scrap Base WIP",
        "fromColumn": "Plant Id",
        "toTable": "Dim-Plants",
        "toColumn": "Plant ID",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "dd1d8fe0-780c-4d49-a094-10ad769c4865",
        "fromTable": "Fact-Arch Scrap Calc",
        "fromColumn": "Plant Id",
        "toTable": "Dim-Plants",
        "toColumn": "Plant ID"
      },
      {
        "name": "e171dad4-5183-4597-9e96-dd9b5700dd1f",
        "fromTable": "Fact-Scrap Calc",
        "fromColumn": "Plant Id",
        "toTable": "Dim-Plants",
        "toColumn": "Plant ID"
      },
      {
        "name": "936ad265-1f6a-4c7e-b21e-5a3fef6c0c1a",
        "fromTable": "Fact-Scrap Base WIP",
        "fromColumn": "Transaction Date",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "828d16a2-d741-46d5-a553-07eb80b88b87",
        "fromTable": "Fact-RFT",
        "fromColumn": "Plant Id",
        "toTable": "Dim-Plants",
        "toColumn": "Plant ID"
      },
      {
        "name": "1cba28a4-beca-4a5c-bc61-bc736737f9b8",
        "fromTable": "Fact-Rft Rework",
        "fromColumn": "Plant Id",
        "toTable": "Dim-Plants",
        "toColumn": "Plant ID"
      },
      {
        "name": "7b21bafd-94cc-498f-9c57-e6699809a8f5",
        "fromTable": "Fact-Rft Scrap",
        "fromColumn": "Plant Id",
        "toTable": "Dim-Plants",
        "toColumn": "Plant ID"
      },
      {
        "name": "8e449c06-c553-4bac-9cbc-59fc9e4f2930",
        "fromTable": "Fact-RFT",
        "fromColumn": "Booking Date",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "b4ebab99-eb42-46b7-938e-79324b6387cd",
        "fromTable": "Fact-Rft Rework",
        "fromColumn": "Booking Date",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "de97e5fb-2ecd-46d6-8484-c63074b4068c",
        "fromTable": "Fact-Rft Scrap",
        "fromColumn": "Booking Date",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "8df800ef-4601-46fb-8f53-d922c2e38c0a",
        "fromTable": "Fact-Scrap Base WIP",
        "fromColumn": "Reason Code",
        "toTable": "Dim-Scrap Reasons",
        "toColumn": "Reason Code"
      },
      {
        "name": "f4669287-8fb5-4cc4-a4e6-a1decbd10ee0",
        "fromTable": "Fact-Scrap Base WIP",
        "fromColumn": "Reason Code Raw",
        "toTable": "Dim-Scrap Codes",
        "toColumn": "Code"
      },
      {
        "name": "72c9eb67-cb3d-4e93-ba97-e8f65f112232",
        "fromTable": "Fact-Scrap",
        "fromColumn": "Reason Code Before",
        "toTable": "Dim-Scrap Codes",
        "toColumn": "Code"
      },
      {
        "name": "4bd8d060-2012-4f3e-af4d-b2d4e92891d9",
        "fromTable": "Fact-Output",
        "fromColumn": "EMPLOYEE_ID",
        "toTable": "Dim-Headcount",
        "toColumn": "Employee Id"
      },
      {
        "name": "c3bec491-5d0b-4301-bd86-a185c3fd3ceb",
        "fromTable": "Fact-Absorb Calc",
        "fromColumn": "Cell",
        "toTable": "Dim-Cell",
        "toColumn": "Cell"
      },
      {
        "name": "444a75cb-521e-4db3-b0e2-cde645619dac",
        "fromTable": "Fact-Commit Act Absorb",
        "fromColumn": "Cell",
        "toTable": "Dim-Cell",
        "toColumn": "Cell"
      },
      {
        "name": "1c437e2c-a2e2-4ae3-a134-07e0ec6fdd51",
        "fromTable": "Fact-Productive Trial",
        "fromColumn": "CDEPT",
        "toTable": "Dim-Businessunit",
        "toColumn": "Dept No"
      },
      {
        "name": "76de8cc2-d881-4c3d-80ba-316e5d44c169",
        "fromTable": "Fact-FTPC DHR",
        "fromColumn": "PLANT_ID",
        "toTable": "Dim-Plants",
        "toColumn": "Plant ID"
      },
      {
        "name": "f9a81e46-1cdb-4b13-92d0-5962c924ff6b",
        "fromTable": "Fact-FTPC DHR",
        "fromColumn": "DTSTAMP",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "4ad59d2f-5762-44f9-a2f9-59d9120c86d7",
        "fromTable": "Fact-FTPC DHR Codes",
        "fromColumn": "PLANT_ID",
        "toTable": "Dim-Plants",
        "toColumn": "Plant ID"
      },
      {
        "name": "ace8d4ec-4d60-4579-a686-be0903893e5d",
        "fromTable": "Fact-FTPC DHR Codes",
        "fromColumn": "DTSTAMP",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "bbd22769-614a-4e1c-be3c-955d7b5e0d25",
        "fromTable": "Fact-Arch WIP",
        "fromColumn": "Plant Id",
        "toTable": "Dim-Plants",
        "toColumn": "Plant ID"
      },
      {
        "name": "0b5ebd62-2eeb-41ff-8d6b-348deb698ef1",
        "fromTable": "Fact-SPMA",
        "fromColumn": "BU Mat Num",
        "toTable": "Bridge-SPMA BU Mat Num",
        "toColumn": "BU Mat Num"
      },
      {
        "name": "2907b4d7-cef3-489a-93b9-ea56526ace71",
        "fromTable": "Fact-WIP",
        "fromColumn": "BU Mat Num",
        "toTable": "Bridge-SPMA BU Mat Num",
        "toColumn": "BU Mat Num"
      },
      {
        "name": "a4cefcdf-7ae4-415e-8d6b-b0ba391d9998",
        "fromTable": "Fact-Fina WIP",
        "fromColumn": "Op Step Num Text",
        "toTable": "Bridge-WIP Op Step Num Text",
        "toColumn": "Op Step Num Text"
      },
      {
        "name": "a22ac36b-3149-4405-840a-de0f0eacd850",
        "fromTable": "Fact-Arch WIP Fina",
        "fromColumn": "Op Step Num Text",
        "toTable": "Bridge-WIP Op Step Num Text",
        "toColumn": "Op Step Num Text"
      },
      {
        "name": "a6474cac-042f-4126-8b23-606d5133ddc5",
        "fromTable": "Fact-Fina WIP",
        "fromColumn": "Rework",
        "toTable": "Bridge-WIP Rework",
        "toColumn": "Rework"
      },
      {
        "name": "d3f7ac43-c661-4a55-a64e-b63bdde0b23f",
        "fromTable": "Fact-Arch WIP Fina",
        "fromColumn": "Rework",
        "toTable": "Bridge-WIP Rework",
        "toColumn": "Rework"
      },
      {
        "name": "6bae2da3-e6ad-423c-83ef-5acfbe4ea896",
        "fromTable": "Fact-Fina WIP",
        "fromColumn": "Op Step Desc",
        "toTable": "Bridge-WIP Op Step Desc",
        "toColumn": "Op Step Desc"
      },
      {
        "name": "4dde1454-2c0c-446b-af6a-429d90465885",
        "fromTable": "Fact-Arch WIP Fina",
        "fromColumn": "Op Step Desc",
        "toTable": "Bridge-WIP Op Step Desc",
        "toColumn": "Op Step Desc"
      },
      {
        "name": "c47e2277-3d8a-439a-8e45-e5d635bbeac0",
        "fromTable": "Fact-Arch WIP Fina",
        "fromColumn": "BU Mat Num",
        "toTable": "Bridge-WIP BU Mat Num",
        "toColumn": "BU Mat Num"
      },
      {
        "name": "9149feba-f348-45fa-95b9-29e5f3f27e0e",
        "fromTable": "Fact-Fina WIP",
        "fromColumn": "BU Mat Num",
        "toTable": "Bridge-WIP BU Mat Num",
        "toColumn": "BU Mat Num"
      },
      {
        "name": "47de5896-c3c3-4c4f-8cf2-5860189724b6",
        "fromTable": "Fact-Arch WIP Fina",
        "fromColumn": "Shop Order",
        "toTable": "Bridge-WIP Shop Order",
        "toColumn": "Shop Order"
      },
      {
        "name": "166ff3dc-4f9d-4bb4-a94b-2a751fcce394",
        "fromTable": "Fact-Fina WIP",
        "fromColumn": "Shop Order",
        "toTable": "Bridge-WIP Shop Order",
        "toColumn": "Shop Order"
      },
      {
        "name": "af62e1c0-112a-4537-b69b-641b99e39724",
        "fromTable": "Fact-Arch WIP Fina",
        "fromColumn": "Aged Analysis Days EOM",
        "toTable": "Bridge-WIP Aged Analysis days EOM",
        "toColumn": "Aged Analysis Days EOM"
      },
      {
        "name": "56c665d1-636b-4e5c-ac36-92f51db0701d",
        "fromTable": "Fact-Fina WIP",
        "fromColumn": "Aged Analysis Days EOM",
        "toTable": "Bridge-WIP Aged Analysis days EOM",
        "toColumn": "Aged Analysis Days EOM"
      },
      {
        "name": "5fd6af15-7962-4d3c-b476-449f728bf728",
        "fromTable": "Fact-Arch WIP Fina",
        "fromColumn": "Cell",
        "toTable": "Bridge-WIP Cell",
        "toColumn": "Cell"
      },
      {
        "name": "57836e58-f70c-4d3c-8091-63a7054d893c",
        "fromTable": "Fact-Arch WIP Fina",
        "fromColumn": "Item",
        "toTable": "Bridge-WIP Item",
        "toColumn": "Item"
      },
      {
        "name": "0aa7ec27-d282-41e4-9a10-bfd680df0b06",
        "fromTable": "Fact-Arch WIP Fina",
        "fromColumn": "Item Family",
        "toTable": "Bridge-WIP Item Family",
        "toColumn": "Item Family"
      },
      {
        "name": "91d76042-7129-41e5-9dd6-15c3648e4463",
        "fromTable": "Fact-Arch WIP Fina",
        "fromColumn": "Department",
        "toTable": "Bridge-WIP Department",
        "toColumn": "Department"
      },
      {
        "name": "389a9531-5192-468f-89c4-72547bd88a9c",
        "fromTable": "Fact-Fina WIP",
        "fromColumn": "Cell",
        "toTable": "Bridge-WIP Cell",
        "toColumn": "Cell"
      },
      {
        "name": "7a289258-92f3-4097-837b-3260d3935212",
        "fromTable": "Fact-Fina WIP",
        "fromColumn": "Item",
        "toTable": "Bridge-WIP Item",
        "toColumn": "Item"
      },
      {
        "name": "b3902cd7-e197-4360-98a5-faee7382d4dc",
        "fromTable": "Fact-Fina WIP",
        "fromColumn": "Item Family",
        "toTable": "Bridge-WIP Item Family",
        "toColumn": "Item Family"
      },
      {
        "name": "7fa734cb-82a8-42fb-a3fe-69d83f08644a",
        "fromTable": "Fact-Fina WIP",
        "fromColumn": "Department",
        "toTable": "Bridge-WIP Department",
        "toColumn": "Department"
      },
      {
        "name": "010455e9-8912-4966-ac70-0b56aaca01b3",
        "fromTable": "Fact-Arch WIP",
        "fromColumn": "Op Step Num Text",
        "toTable": "Bridge-WIP Op Step Num Text",
        "toColumn": "Op Step Num Text"
      },
      {
        "name": "772723bb-99b2-4b19-86a5-50a86ea342a8",
        "fromTable": "Fact-Arch WIP",
        "fromColumn": "BU Mat Num",
        "toTable": "Bridge-WIP BU Mat Num",
        "toColumn": "BU Mat Num"
      },
      {
        "name": "d6e3786d-c6db-4afe-8e0d-fa171cfb4551",
        "fromTable": "Fact-Arch WIP",
        "fromColumn": "Op Step Desc",
        "toTable": "Bridge-WIP Op Step Desc",
        "toColumn": "Op Step Desc"
      },
      {
        "name": "22d6fe9b-6be6-493e-b597-ad0be53007cb",
        "fromTable": "Fact-Arch WIP",
        "fromColumn": "Rework",
        "toTable": "Bridge-WIP Rework",
        "toColumn": "Rework"
      },
      {
        "name": "fd7c852a-858e-477e-8a24-c601b2967537",
        "fromTable": "Fact-Arch WIP",
        "fromColumn": "Cell",
        "toTable": "Bridge-WIP Cell",
        "toColumn": "Cell"
      },
      {
        "name": "f0a0b3bf-5dff-4f72-889e-4525241e8726",
        "fromTable": "Fact-Arch WIP",
        "fromColumn": "Item",
        "toTable": "Bridge-WIP Item",
        "toColumn": "Item"
      },
      {
        "name": "d91862b2-e89e-4fcc-87a7-db496e24b1d4",
        "fromTable": "Fact-Arch WIP",
        "fromColumn": "Item Family",
        "toTable": "Bridge-WIP Item Family",
        "toColumn": "Item Family"
      },
      {
        "name": "e24e564c-0299-4718-b9fd-31de9125e95f",
        "fromTable": "Fact-Arch WIP",
        "fromColumn": "Department",
        "toTable": "Bridge-WIP Department",
        "toColumn": "Department"
      },
      {
        "name": "b7e03617-e131-477a-8610-59a652afa79a",
        "fromTable": "Fact-Arch WIP",
        "fromColumn": "Archive Time",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "d91d1cf5-5fdf-480e-b861-79be45723c23",
        "fromTable": "Fact-Arch WIP Fina",
        "fromColumn": "Archive Time",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "d44fcf6d-ebda-4e22-a28b-fc4b3793ccf5",
        "fromTable": "Fact-Arch WIP Fina",
        "fromColumn": "Custom Comment",
        "toTable": "Bridge-WIP Comment",
        "toColumn": "Custom Comments"
      },
      {
        "name": "e7ef2d7b-521a-42fa-a0d0-7513af960553",
        "fromTable": "Fact-Fina WIP",
        "fromColumn": "Custom Comments",
        "toTable": "Bridge-WIP Comment",
        "toColumn": "Custom Comments"
      },
      {
        "name": "af53e549-0dc2-4fb5-b435-730073637b75",
        "fromTable": "Fact-Fina WIP",
        "fromColumn": "Trace Code",
        "toTable": "Bridge-WIP Trace code",
        "toColumn": "Trace Code"
      },
      {
        "name": "48c806b2-1fe0-4812-a711-8267319789ff",
        "fromTable": "Fact-Arch WIP Fina",
        "fromColumn": "Trace Code",
        "toTable": "Bridge-WIP Trace code",
        "toColumn": "Trace Code"
      },
      {
        "name": "46e19419-e1a6-4c6f-bd39-860bb3710ed9",
        "fromTable": "Fact-Scrap",
        "fromColumn": "Shop Order",
        "toTable": "Bridge- Scrap Error",
        "toColumn": "SONO"
      },
      {
        "name": "4467cd8b-bf99-4ecb-822a-219be398b0c6",
        "fromTable": "Fact-FTPC DHR Codes",
        "fromColumn": "SONO",
        "toTable": "Bridge- Scrap Error",
        "toColumn": "SONO"
      },
      {
        "name": "d63029a2-9cfa-4339-8a17-e4d12afd687f",
        "fromTable": "Fact-Scrap",
        "fromColumn": "Join",
        "toTable": "Bridge-scrap join",
        "toColumn": "Join"
      },
      {
        "name": "3bd572d1-3be1-4108-b096-c5625de43daa",
        "fromTable": "Fact-Scrap Base WIP",
        "fromColumn": "Join",
        "toTable": "Bridge-scrap join",
        "toColumn": "Join"
      },
      {
        "name": "ac37a85c-4b3a-4ed1-a84e-21db009f0ac8",
        "fromTable": "Fact-Arch Scrap Calc",
        "fromColumn": "Cell",
        "toTable": "Bridge-Scrap cell",
        "toColumn": "Cell"
      },
      {
        "name": "f650a71d-7176-485d-96e2-deba21ec1c2e",
        "fromTable": "Fact-Scrap Calc",
        "fromColumn": "Cell",
        "toTable": "Bridge-Scrap cell",
        "toColumn": "Cell"
      },
      {
        "name": "c1a1909b-3a74-42be-88d6-3d6fa996ade5",
        "fromTable": "Fact-SPMA",
        "fromColumn": "Cell",
        "toTable": "Bridge- SPMA Cell",
        "toColumn": "Cell"
      },
      {
        "name": "48204598-24bd-4b50-b26e-3af8815ae607",
        "fromTable": "Fact-WIP",
        "fromColumn": "Cell",
        "toTable": "Bridge- SPMA Cell",
        "toColumn": "Cell"
      },
      {
        "name": "b5c0b1f1-9fa3-4c11-a914-8acc3bdb61fc",
        "fromTable": "Fact-Scrap",
        "fromColumn": "Join",
        "toTable": "Bridge - Output Scrap",
        "toColumn": "Join Scrap"
      },
      {
        "name": "981c78f3-0287-4cfe-87dd-40b33f50e7d0",
        "fromTable": "Fact-Output",
        "fromColumn": "Join Scrap",
        "toTable": "Bridge - Output Scrap",
        "toColumn": "Join Scrap"
      },
      {
        "name": "b72917b1-9419-4912-b66f-32a7b66d80fa",
        "fromTable": "Fact-Output",
        "fromColumn": "Join Core",
        "toTable": "Bridge- Output Core",
        "toColumn": "Join Output"
      },
      {
        "name": "6cc2c9a5-8bbb-42e4-9df2-4063f1ab6a5e",
        "fromTable": "Fact-Core",
        "fromColumn": "Join Output",
        "toTable": "Bridge- Output Core",
        "toColumn": "Join Output"
      },
      {
        "name": "aaf45479-c883-4957-b765-72757701bb2f",
        "fromTable": "Fact-Scrap",
        "fromColumn": "Cell",
        "toTable": "Bridge- Scrap Ouput Cell",
        "toColumn": "Cell"
      },
      {
        "name": "6d6edad6-2d79-4f68-8f74-ed75d531e0e6",
        "fromTable": "Fact-Output",
        "fromColumn": "Cell",
        "toTable": "Bridge- Scrap Ouput Cell",
        "toColumn": "Cell"
      },
      {
        "name": "932408e5-8e8f-4255-8e30-4a82719541c7",
        "fromTable": "Fact-Scrap",
        "fromColumn": "Department",
        "toTable": "Bridge- Scrap Output Department",
        "toColumn": "Department"
      },
      {
        "name": "82f290ff-66a7-45b2-9220-f3f15a61c29d",
        "fromTable": "Fact-Output",
        "fromColumn": "Department",
        "toTable": "Bridge- Scrap Output Department",
        "toColumn": "Department"
      },
      {
        "name": "99eddbcc-2a23-455b-bbd5-d823f4a04487",
        "fromTable": "Fact-Scrap",
        "fromColumn": "Item",
        "toTable": "Bridge-Scrap Output item",
        "toColumn": "Item"
      },
      {
        "name": "f303a217-c381-430f-bba3-ded75d593b26",
        "fromTable": "Fact-Output",
        "fromColumn": "Item",
        "toTable": "Bridge-Scrap Output item",
        "toColumn": "Item"
      },
      {
        "name": "ea38ea6e-4162-4a96-9795-616367a47b83",
        "fromTable": "Fact-Output",
        "fromColumn": "Op Date",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "95d5055e-3138-4575-bf29-e365dd732ea0",
        "fromTable": "Fact-Scrap",
        "fromColumn": "Cell",
        "toTable": "Bridge-Scrap cell",
        "toColumn": "Cell"
      },
      {
        "name": "cf41826b-9309-4cc5-b0b0-1c486bb0b79a",
        "fromTable": "Fact-Absorb",
        "fromColumn": "Cell",
        "toTable": "Bridge-Scrap cell",
        "toColumn": "Cell"
      },
      {
        "name": "15555115-faac-48ca-b5dd-22b388e0354b",
        "fromTable": "Fact-Output",
        "fromColumn": "Op Step Desc",
        "toTable": "Bridge- Scrap Output Op step desc",
        "toColumn": "Op Step Desc"
      },
      {
        "name": "d1e358e5-10e3-49ee-a34b-2b68f6a46fd8",
        "fromTable": "Fact-Scrap",
        "fromColumn": "Op Step Desc",
        "toTable": "Bridge- Scrap Output Op step desc",
        "toColumn": "Op Step Desc"
      },
      {
        "name": "c160c747-a987-4bc0-9faa-0b79459eb232",
        "fromTable": "Fact-Scrap",
        "fromColumn": "Op Step Num",
        "toTable": "Bridge- Scrap output Op step num",
        "toColumn": "Op Step Num"
      },
      {
        "name": "b34d7541-36c8-4407-9222-df671a9ff8a2",
        "fromTable": "Fact-Output",
        "fromColumn": "Op Step Num",
        "toTable": "Bridge- Scrap output Op step num",
        "toColumn": "Op Step Num"
      },
      {
        "name": "17f51a22-7c2d-4b34-ac8a-d968612524e9",
        "fromTable": "Fact-Output",
        "fromColumn": "Item Family",
        "toTable": "Bridge-Scrap Output Item Family",
        "toColumn": "Item Family"
      },
      {
        "name": "9b55ea81-f25f-44dd-8016-826b6be75ff7",
        "fromTable": "Fact-Scrap",
        "fromColumn": "Item Family",
        "toTable": "Bridge-Scrap Output Item Family",
        "toColumn": "Item Family"
      },
      {
        "name": "1ddd39ca-7a01-4e91-a9e0-dd5a7aa3c41b",
        "fromTable": "Fact-Output",
        "fromColumn": "Operator",
        "toTable": "Bridge- Scrap Output Operator",
        "toColumn": "Operator"
      },
      {
        "name": "4dcb7e89-6ba5-485c-9368-c2f31e23ef2f",
        "fromTable": "Fact-Scrap",
        "fromColumn": "Operator",
        "toTable": "Bridge- Scrap Output Operator",
        "toColumn": "Operator"
      },
      {
        "name": "7345791b-b844-4f57-87f6-567dfc802758",
        "fromTable": "Fact-Finished Goods",
        "fromColumn": "EXPIRY_DATE",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "02214ed7-1a63-4606-acb8-5ea1f33b8e85",
        "fromTable": "Fact-SPMA",
        "fromColumn": "Cell",
        "toTable": "Dim-Cell",
        "toColumn": "Cell"
      },
      {
        "name": "2764024c-2ffd-4812-81af-b23dbe8943f9",
        "fromTable": "Fact-Fina WIP",
        "fromColumn": "Cell",
        "toTable": "Dim-Cell",
        "toColumn": "Cell"
      },
      {
        "name": "ebeff400-8adc-473f-8b85-fb087251db28",
        "fromTable": "Fact-Arch Scrap Calc",
        "fromColumn": "Archive Time",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "c0a56126-e26c-457f-8dfe-15b73b273420",
        "fromTable": "Fact-Scrap",
        "fromColumn": "Cell",
        "toTable": "Dim-Cell",
        "toColumn": "Cell"
      },
      {
        "name": "c11862b0-5260-40a8-aa99-a6b88b1e529a",
        "fromTable": "Fact-RFT",
        "fromColumn": "Cell",
        "toTable": "Dim-Cell",
        "toColumn": "Cell"
      },
      {
        "name": "096ada64-1ce4-4bf3-a407-6579f0cb6be5",
        "fromTable": "Fact-Productive Trial",
        "fromColumn": "Area",
        "toTable": "Dim-Cell",
        "toColumn": "Cell"
      },
      {
        "name": "4d3f0c18-19df-40a1-b47b-8e40e5afb427",
        "fromTable": "Fact-Productive Trial",
        "fromColumn": "Prod Week Start Date",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "b1b5a27a-7516-4bfb-bd20-8650ea4cfaaf",
        "fromTable": "Fact-Arch WIP Fina",
        "fromColumn": "Cell",
        "toTable": "Dim-Cell",
        "toColumn": "Cell"
      },
      {
        "name": "19f1dce7-ed6b-4815-abaf-e979dab65191",
        "fromTable": "Fact-WIP",
        "fromColumn": "Item Family",
        "toTable": "Bridge - Arch WIP Item Family",
        "toColumn": "Item Family"
      },
      {
        "name": "7b6e467a-f323-411f-b7e1-51aa8c9e94f3",
        "fromTable": "Fact-Arch WIP",
        "fromColumn": "Item Family",
        "toTable": "Bridge - Arch WIP Item Family",
        "toColumn": "Item Family"
      },
      {
        "name": "23c83783-4663-4474-9de3-37c529619514",
        "fromTable": "Fact-WIP",
        "fromColumn": "Item",
        "toTable": "Bridge- Arch WIP Item",
        "toColumn": "Item"
      },
      {
        "name": "1c4ace42-1474-461a-bc5a-7757795e008e",
        "fromTable": "Fact-Arch WIP",
        "fromColumn": "Item",
        "toTable": "Bridge- Arch WIP Item",
        "toColumn": "Item"
      },
      {
        "name": "ad4deb5c-d5c2-4159-a672-b49fffb76db8",
        "fromTable": "Fact-WIP",
        "fromColumn": "Op Step Desc",
        "toTable": "Bridge - Arch WIP Op Step Desc",
        "toColumn": "Op Step Desc"
      },
      {
        "name": "6353d3e2-5674-43ff-87f8-014c60f4e225",
        "fromTable": "Fact-Arch WIP",
        "fromColumn": "Op Step Desc",
        "toTable": "Bridge - Arch WIP Op Step Desc",
        "toColumn": "Op Step Desc"
      },
      {
        "name": "fa0d2c5c-316b-49ab-8326-f9292b364442",
        "fromTable": "Fact-WIP",
        "fromColumn": "Op Step Num Text",
        "toTable": "Bridge- Arch WIP Op Step Num",
        "toColumn": "Op Step Num Text"
      },
      {
        "name": "63654f51-aefa-4d1e-be60-cb2567bf2d37",
        "fromTable": "Fact-Arch WIP",
        "fromColumn": "Op Step Num Text",
        "toTable": "Bridge- Arch WIP Op Step Num",
        "toColumn": "Op Step Num Text"
      },
      {
        "name": "2991d7f5-0182-4f79-891b-27feed238593",
        "fromTable": "Fact-WIP",
        "fromColumn": "Trace Code",
        "toTable": "Bridge - Arch WIP Trace Code",
        "toColumn": "Trace Code"
      },
      {
        "name": "0d2d8cff-8518-4a40-9196-86bc0f6af97d",
        "fromTable": "Fact-Arch WIP",
        "fromColumn": "Trace Code",
        "toTable": "Bridge - Arch WIP Trace Code",
        "toColumn": "Trace Code"
      },
      {
        "name": "1d08230a-dcff-4952-ac5e-7b6a2397260d",
        "fromTable": "Fact-WIP",
        "fromColumn": "Shop Order",
        "toTable": "Bridge- Arch WIP Shop Order",
        "toColumn": "Shop Order"
      },
      {
        "name": "1b99b8d7-d75a-460e-820b-1c302dac565a",
        "fromTable": "Fact-Arch WIP",
        "fromColumn": "Shop Order",
        "toTable": "Bridge- Arch WIP Shop Order",
        "toColumn": "Shop Order"
      },
      {
        "name": "fa2b737a-59fa-49a9-9eb4-1f9ee6dbb165",
        "fromTable": "Fact-WIP",
        "fromColumn": "Cell",
        "toTable": "Bridge - Arch WIP Cell",
        "toColumn": "Cell"
      },
      {
        "name": "06e7144d-e5d6-410d-ad5a-d419705da488",
        "fromTable": "Fact-Arch WIP",
        "fromColumn": "Cell",
        "toTable": "Bridge - Arch WIP Cell",
        "toColumn": "Cell"
      },
      {
        "name": "b3b1bb88-4c12-4cc4-8999-d5521693ef5a",
        "fromTable": "Fact-WIP",
        "fromColumn": "Department",
        "toTable": "Bridge - Arch WIP Department",
        "toColumn": "Department"
      },
      {
        "name": "6fb02261-8b24-47f1-b534-74c55de4fe99",
        "fromTable": "Fact-Arch WIP",
        "fromColumn": "Department",
        "toTable": "Bridge - Arch WIP Department",
        "toColumn": "Department"
      },
      {
        "name": "3e657867-1c45-40f6-8db8-9a03904bfdfb",
        "fromTable": "Fact-WIP",
        "fromColumn": "Custom Comments",
        "toTable": "Bridge - Arch WIP Comments",
        "toColumn": "Custom Comments"
      },
      {
        "name": "d4f2e09a-ab4d-457e-bbcb-cab8ceb6c2b1",
        "fromTable": "Fact-Arch WIP",
        "fromColumn": "Custom Comments",
        "toTable": "Bridge - Arch WIP Comments",
        "toColumn": "Custom Comments"
      },
      {
        "name": "35226554-3d3d-465b-9342-567f063650a5",
        "fromTable": "Fact-WIP",
        "fromColumn": "BU Mat Num",
        "toTable": "Bridge - Arch WIP BU Mat Num",
        "toColumn": "BU Mat Num"
      },
      {
        "name": "335ef8c1-2e77-4f24-9f16-f371eb673a80",
        "fromTable": "Fact-Arch WIP",
        "fromColumn": "BU Mat Num",
        "toTable": "Bridge - Arch WIP BU Mat Num",
        "toColumn": "BU Mat Num"
      },
      {
        "name": "97199182-58fc-4e5f-a0fc-cbd317690d33",
        "fromTable": "Fact-WIP",
        "fromColumn": "Rework",
        "toTable": "Bridge- Arch WIP Rework",
        "toColumn": "Rework"
      },
      {
        "name": "3b078e35-65f9-4ef3-8f15-47e69be5ed2d",
        "fromTable": "Fact-Arch WIP",
        "fromColumn": "Rework",
        "toTable": "Bridge- Arch WIP Rework",
        "toColumn": "Rework"
      },
      {
        "name": "c5bdb92a-be73-4d98-8a80-8285224f6fb6",
        "fromTable": "Fact-WIP",
        "fromColumn": "Last Move Days",
        "toTable": "Bridge- Arch WIP Days Old",
        "toColumn": "Last Move Days"
      },
      {
        "name": "72dfdbb5-9aa4-425c-8c7f-19c0316c62e0",
        "fromTable": "Fact-Arch WIP",
        "fromColumn": "Last Move Days",
        "toTable": "Bridge- Arch WIP Days Old",
        "toColumn": "Last Move Days"
      },
      {
        "name": "5274098e-7dd9-488c-a40b-d5e7b00ecff8",
        "fromTable": "Fact-WIP",
        "fromColumn": "Aged Days",
        "toTable": "Bridge - Arch WIP Aged Days",
        "toColumn": "Aged Days"
      },
      {
        "name": "e8dc8549-9dce-47f0-ac17-1364c6ba1096",
        "fromTable": "Fact-Arch WIP",
        "fromColumn": "Aged Days",
        "toTable": "Bridge - Arch WIP Aged Days",
        "toColumn": "Aged Days"
      },
      {
        "name": "4650f05c-c615-4183-9c7b-d9fcaa0eea36",
        "fromTable": "Fact-Output",
        "fromColumn": "PTL",
        "toTable": "Bridge-Core Output PTL",
        "toColumn": "PTL"
      },
      {
        "name": "c14d1bd9-e274-41cd-aaf3-701ee435d40b",
        "fromTable": "Fact-Core",
        "fromColumn": "PTL",
        "toTable": "Bridge-Core Output PTL",
        "toColumn": "PTL"
      },
      {
        "name": "0efeb559-a39f-44e2-b5a3-fa8564110945",
        "fromTable": "Fact-Output",
        "fromColumn": "Operator",
        "toTable": "Bridge-Core Output Operator",
        "toColumn": "Operator"
      },
      {
        "name": "ddc2ebb2-0f58-4769-a202-18cfd8adcd6e",
        "fromTable": "Fact-Core",
        "fromColumn": "Operator",
        "toTable": "Bridge-Core Output Operator",
        "toColumn": "Operator"
      },
      {
        "name": "9def576e-f7d6-4b8b-84a7-d2c22f84e5e7",
        "fromTable": "Fact-DII",
        "fromColumn": "ARCHIVE_TIME",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "e32a2502-502f-4e73-9382-7b98b650fc35",
        "fromTable": "Fact-Absorb CPP",
        "fromColumn": "BOOKING_DATE",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "877b2f54-e373-4359-b214-a9dc67d5d432",
        "fromTable": "Fact-Absorb CPP",
        "fromColumn": "PLANT_ID",
        "toTable": "Dim-Plants",
        "toColumn": "Plant ID"
      },
      {
        "name": "239a5023-d128-4916-b0dc-f2bdf2781e86",
        "fromTable": "Fact-COGS",
        "fromColumn": "TRANSACTION_DATE",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "50f94d07-ea85-4f50-94c9-ddad2b10b4b0",
        "fromTable": "Fact-COGS",
        "fromColumn": "PLANT_ID",
        "toTable": "Dim-Plants",
        "toColumn": "Plant ID"
      },
      {
        "name": "b6df5a23-da46-4833-a572-cf598f39ef22",
        "fromTable": "Fact-Absorb CPP",
        "fromColumn": "CELL",
        "toTable": "Dim-Cell",
        "toColumn": "Cell"
      },
      {
        "name": "4c2072f0-a190-4713-b903-10d8dd796c0d",
        "fromTable": "Fact-WIP",
        "fromColumn": "Item",
        "toTable": "Bridge- SPMA WIP Item",
        "toColumn": "Item"
      },
      {
        "name": "3e6f95a6-09e8-4777-be7b-dc880b03225f",
        "fromTable": "Fact-SPMA",
        "fromColumn": "Item",
        "toTable": "Bridge- SPMA WIP Item",
        "toColumn": "Item"
      },
      {
        "name": "be80f1cb-eb9f-459c-b765-b1e3eea724c6",
        "fromTable": "Fact-WIP",
        "fromColumn": "Item Family",
        "toTable": "Bridge-SPMA WIP Family",
        "toColumn": "Family"
      },
      {
        "name": "6c4bea8e-af87-45be-9354-40a7769f2c95",
        "fromTable": "Fact-SPMA",
        "fromColumn": "Family",
        "toTable": "Bridge-SPMA WIP Family",
        "toColumn": "Family"
      },
      {
        "name": "6fef1cbe-5ed8-419e-82d5-c7b36398a1e4",
        "fromTable": "Fact-COGS",
        "fromColumn": "CELL",
        "toTable": "Dim-Cell",
        "toColumn": "Cell"
      },
      {
        "name": "424a3ab4-1115-40d0-a4d8-38c1d5698cb0",
        "fromTable": "Fact-Absorb Calc",
        "fromColumn": "OP_STEP_NUM",
        "toTable": "Bridge- Absorb Op Step Num",
        "toColumn": "OP_STEP_NUM"
      },
      {
        "name": "d9aa709b-eb12-42c1-b520-48fd432970ed",
        "fromTable": "Fact-Absorb CPP",
        "fromColumn": "OP_STEP_NUM",
        "toTable": "Bridge- Absorb Op Step Num",
        "toColumn": "OP_STEP_NUM"
      },
      {
        "name": "67aef191-53d7-47a3-8730-21b48aafc48a",
        "fromTable": "Fact-COGS",
        "fromColumn": "OP_STEP_NUM",
        "toTable": "Bridge- Absorb Op Step Num",
        "toColumn": "OP_STEP_NUM"
      },
      {
        "name": "4f04a968-ed68-4420-9fd0-a9a79f8413ac",
        "fromTable": "Fact-Core",
        "fromColumn": "CELL",
        "toTable": "Bridge-Core Output Cell",
        "toColumn": "Cell"
      },
      {
        "name": "6fc8c9d8-7592-4bca-b0fb-8d806cafeb17",
        "fromTable": "Fact-Output",
        "fromColumn": "Cell",
        "toTable": "Bridge-Core Output Cell",
        "toColumn": "Cell"
      },
      {
        "name": "63fbcb83-0f20-4d49-9919-9c6ceb9d93b0",
        "fromTable": "Fact-Output",
        "fromColumn": "Op Step Num",
        "toTable": "Bridge Output Target Op Step Num",
        "toColumn": "Op Step Num"
      },
      {
        "name": "2761bb77-067c-48dd-88d6-85a15fff7fbb",
        "fromTable": "TGT_POWERAPP_OUTPUT_TARGET",
        "fromColumn": "OPERATION",
        "toTable": "Bridge Output Target Op Step Num",
        "toColumn": "Op Step Num"
      },
      {
        "name": "1f835d9e-e9dc-4199-926d-a1c31e7159e5",
        "fromTable": "TGT_POWERAPP_OUTPUT_TARGET",
        "fromColumn": "BU",
        "toTable": "Dim-Cell",
        "toColumn": "Cell"
      },
      {
        "name": "12dbcfde-9454-4208-83e9-1ccc002f8e69",
        "fromTable": "Fact-Output",
        "fromColumn": "Cell",
        "toTable": "Dim-Cell",
        "toColumn": "Cell"
      },
      {
        "name": "7fada920-763e-4006-904a-6bb660a1ede2",
        "fromTable": "TGT_POWERAPP_OUTPUT_TARGET",
        "fromColumn": "DATE_WEEK",
        "toTable": "Dim-Date",
        "toColumn": "Date"
      },
      {
        "name": "bf9949ed-f432-49ca-b74d-aed9f501ce3b",
        "fromTable": "Fact-Fina WIP",
        "fromColumn": "Release Date",
        "toTable": "STG_CURRENCY_CONVERSION",
        "toColumn": "CONVERSION_DATE"
      },
      {
        "name": "5777a168-6d8e-4138-bd55-bb02c32c6bff",
        "fromTable": "Powerapp_Absorption_Target",
        "fromColumn": "BU",
        "toTable": "Dim-Cell",
        "toColumn": "Cell"
      },
      {
        "name": "64b706aa-0f14-40a4-8e32-57e924378290",
        "fromTable": "Fact-Output",
        "fromColumn": "Shift",
        "toTable": "Bridge-Shift Output Target",
        "toColumn": "Shift"
      },
      {
        "name": "d4f59569-2839-4d4c-86e2-db7a4fa6b192",
        "fromTable": "TGT_POWERAPP_OUTPUT_TARGET",
        "fromColumn": "SHIFTS",
        "toTable": "Bridge-Shift Output Target",
        "toColumn": "Shift"
      },
      {
        "name": "01d67378-c4fa-40a7-8d05-c41c3e5408c5",
        "fromTable": "Fact-Absorb",
        "fromColumn": "Cell",
        "toTable": "Dim-Cell",
        "toColumn": "Cell"
      }
    ],
    "roles": [
      {
        "name": "ReadUser",
        "modelPermission": "read",
        "members": [
          {
            "memberName": "nupur.saini@stryker.com",
            "memberId": "nupur.saini@stryker.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "mayur.kanawade@stryker.com",
            "memberId": "mayur.kanawade@stryker.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "veerar.balaji@stryker.com",
            "memberId": "veerar.balaji@stryker.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "Manuel.Binder@stryker.com",
            "memberId": "Manuel.Binder@stryker.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "Jose.Vasquez@stryker.com",
            "memberId": "Jose.Vasquez@stryker.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "atul.mahajan@stryker.com",
            "memberId": "atul.mahajan@stryker.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "abhishek.kulkarni1@stryker.com",
            "memberId": "abhishek.kulkarni1@stryker.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "pooja.talekar@stryker.com",
            "memberId": "pooja.talekar@stryker.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "trupti.mahimkar@stryker.com",
            "memberId": "trupti.mahimkar@stryker.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "aditi.joshi@stryker.com",
            "memberId": "aditi.joshi@stryker.com",
            "identityProvider": "AzureAD"
          }
        ]
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "500"
      }
    ]
  }
}